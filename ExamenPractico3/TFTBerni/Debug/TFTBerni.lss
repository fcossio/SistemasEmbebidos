
TFTBerni.elf:     file format elf32-avr32

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .reset        00002008  80000000  80000000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rela.got     00000000  80002008  80002008  00002408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00002948  80002008  80002008  00002408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .exception    00000200  80004a00  80004a00  00004e00  2**9
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .rodata       00000a6e  80004c00  80004c00  00005000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .lalign       00000002  8000566e  8000566e  00005a6e  2**0
                  ALLOC
  6 .dalign       00000004  00000004  00000004  00000000  2**0
                  ALLOC
  7 .data         00000055  00000008  80005670  00005c08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .balign       00000003  0000005d  800056c5  00005c5d  2**0
                  ALLOC
  9 .bss          00000748  00000060  00000060  00000000  2**2
                  ALLOC
 10 .heap         0000e858  000007a8  000007a8  00000000  2**0
                  ALLOC
 11 .comment      00000030  00000000  00000000  00005c5d  2**0
                  CONTENTS, READONLY
 12 .debug_aranges 000008d8  00000000  00000000  00005c90  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubnames 00001754  00000000  00000000  00006568  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_info   0000eb37  00000000  00000000  00007cbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_abbrev 00001fa0  00000000  00000000  000167f3  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_line   0000700d  00000000  00000000  00018793  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_frame  00001724  00000000  00000000  0001f7a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000030c0  00000000  00000000  00020ec4  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_loc    00004be6  00000000  00000000  00023f84  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_macinfo 00b31096  00000000  00000000  00028b6a  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .stack        00001000  0000f000  0000f000  00000000  2**0
                  ALLOC
 22 .debug_ranges 00000ab0  00000000  00000000  00b59c00  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .reset:

80000000 <_start>:
80000000:	fe cf c1 a4 	sub	pc,pc,-15964

80000004 <_trampoline>:
80000004:	e0 8f 10 00 	bral	80002004 <program_start>
	...

80002004 <program_start>:
80002004:	fe cf e1 a8 	sub	pc,pc,-7768

Disassembly of section .text:

80002008 <et024006_SetLimits>:
80002008:	eb cd 40 80 	pushm	r7,lr
8000200c:	fc 1e c0 00 	movh	lr,0xc000
80002010:	30 28       	mov	r8,2
80002012:	bc 08       	st.h	lr[0x0],r8
80002014:	ef dc c1 08 	bfextu	r7,r12,0x8,0x8
80002018:	fc 18 c0 20 	movh	r8,0xc020
8000201c:	b0 07       	st.h	r8[0x0],r7
8000201e:	30 37       	mov	r7,3
80002020:	bc 07       	st.h	lr[0x0],r7
80002022:	b0 0c       	st.h	r8[0x0],r12
80002024:	30 4c       	mov	r12,4
80002026:	bc 0c       	st.h	lr[0x0],r12
80002028:	f9 da c1 08 	bfextu	r12,r10,0x8,0x8
8000202c:	b0 0c       	st.h	r8[0x0],r12
8000202e:	30 5c       	mov	r12,5
80002030:	bc 0c       	st.h	lr[0x0],r12
80002032:	b0 0a       	st.h	r8[0x0],r10
80002034:	30 6a       	mov	r10,6
80002036:	bc 0a       	st.h	lr[0x0],r10
80002038:	f5 db c1 08 	bfextu	r10,r11,0x8,0x8
8000203c:	b0 0a       	st.h	r8[0x0],r10
8000203e:	30 7a       	mov	r10,7
80002040:	bc 0a       	st.h	lr[0x0],r10
80002042:	b0 0b       	st.h	r8[0x0],r11
80002044:	30 8a       	mov	r10,8
80002046:	bc 0a       	st.h	lr[0x0],r10
80002048:	f5 d9 c1 08 	bfextu	r10,r9,0x8,0x8
8000204c:	b0 0a       	st.h	r8[0x0],r10
8000204e:	30 9a       	mov	r10,9
80002050:	bc 0a       	st.h	lr[0x0],r10
80002052:	b0 09       	st.h	r8[0x0],r9
80002054:	e3 cd 80 80 	ldm	sp++,r7,pc

80002058 <et024006_SetQuickLimits>:
80002058:	fc 19 c0 00 	movh	r9,0xc000
8000205c:	30 28       	mov	r8,2
8000205e:	b2 08       	st.h	r9[0x0],r8
80002060:	f5 dc c1 08 	bfextu	r10,r12,0x8,0x8
80002064:	fc 18 c0 20 	movh	r8,0xc020
80002068:	b0 0a       	st.h	r8[0x0],r10
8000206a:	30 3a       	mov	r10,3
8000206c:	b2 0a       	st.h	r9[0x0],r10
8000206e:	b0 0c       	st.h	r8[0x0],r12
80002070:	30 6a       	mov	r10,6
80002072:	b2 0a       	st.h	r9[0x0],r10
80002074:	f5 db c1 08 	bfextu	r10,r11,0x8,0x8
80002078:	b0 0a       	st.h	r8[0x0],r10
8000207a:	30 7a       	mov	r10,7
8000207c:	b2 0a       	st.h	r9[0x0],r10
8000207e:	b0 0b       	st.h	r8[0x0],r11
80002080:	5e fc       	retal	r12
80002082:	d7 03       	nop

80002084 <et024006_DrawQuickPixel>:
80002084:	eb cd 40 80 	pushm	r7,lr
80002088:	14 97       	mov	r7,r10
8000208a:	5c 7b       	castu.h	r11
8000208c:	5c 7c       	castu.h	r12
8000208e:	f0 1f 00 06 	mcall	800020a4 <et024006_DrawQuickPixel+0x20>
80002092:	32 29       	mov	r9,34
80002094:	fc 18 c0 00 	movh	r8,0xc000
80002098:	b0 09       	st.h	r8[0x0],r9
8000209a:	fc 18 c0 20 	movh	r8,0xc020
8000209e:	b0 07       	st.h	r8[0x0],r7
800020a0:	e3 cd 80 80 	ldm	sp++,r7,pc
800020a4:	80 00       	ld.sh	r0,r0[0x0]
800020a6:	20 58       	sub	r8,5

800020a8 <et024006_PrintString>:
800020a8:	d4 31       	pushm	r0-r7,lr
800020aa:	20 dd       	sub	sp,52
800020ac:	18 97       	mov	r7,r12
800020ae:	50 6b       	stdsp	sp[0x18],r11
800020b0:	50 8a       	stdsp	sp[0x20],r10
800020b2:	50 29       	stdsp	sp[0x8],r9
800020b4:	10 94       	mov	r4,r8
800020b6:	41 63       	lddsp	r3,sp[0x58]
800020b8:	19 89       	ld.ub	r9,r12[0x0]
800020ba:	30 08       	mov	r8,0
800020bc:	f0 09 18 00 	cp.b	r9,r8
800020c0:	e0 80 01 0c 	breq	800022d8 <et024006_PrintString+0x230>
800020c4:	16 98       	mov	r8,r11
800020c6:	11 3a       	ld.ub	r10,r8++
800020c8:	50 4a       	stdsp	sp[0x10],r10
800020ca:	11 89       	ld.ub	r9,r8[0x0]
800020cc:	50 39       	stdsp	sp[0xc],r9
800020ce:	11 98       	ld.ub	r8,r8[0x1]
800020d0:	50 58       	stdsp	sp[0x14],r8
800020d2:	5b f3       	cp.w	r3,-1
800020d4:	e0 81 00 8d 	brne	800021ee <et024006_PrintString+0x146>
800020d8:	e0 69 00 ef 	mov	r9,239
800020dc:	e0 6a 01 3f 	mov	r10,319
800020e0:	30 0b       	mov	r11,0
800020e2:	16 9c       	mov	r12,r11
800020e4:	f0 1f 00 7e 	mcall	800022dc <et024006_PrintString+0x234>
800020e8:	40 58       	lddsp	r8,sp[0x14]
800020ea:	50 c8       	stdsp	sp[0x30],r8
800020ec:	f0 08 00 18 	add	r8,r8,r8<<0x1
800020f0:	a5 78       	lsl	r8,0x5
800020f2:	40 69       	lddsp	r9,sp[0x18]
800020f4:	10 09       	add	r9,r8
800020f6:	50 b9       	stdsp	sp[0x2c],r9
800020f8:	ee c8 ff ff 	sub	r8,r7,-1
800020fc:	50 98       	stdsp	sp[0x24],r8
800020fe:	40 8a       	lddsp	r10,sp[0x20]
80002100:	5c 8a       	casts.h	r10
80002102:	50 aa       	stdsp	sp[0x28],r10
80002104:	30 03       	mov	r3,0
80002106:	08 90       	mov	r0,r4
80002108:	5c 70       	castu.h	r0
8000210a:	40 99       	lddsp	r9,sp[0x24]
8000210c:	f3 38 ff ff 	ld.ub	r8,r9[-1]
80002110:	30 aa       	mov	r10,10
80002112:	f4 08 18 00 	cp.b	r8,r10
80002116:	c0 b1       	brne	8000212c <et024006_PrintString+0x84>
80002118:	40 28       	lddsp	r8,sp[0x8]
8000211a:	40 39       	lddsp	r9,sp[0xc]
8000211c:	12 08       	add	r8,r9
8000211e:	5c 88       	casts.h	r8
80002120:	50 28       	stdsp	sp[0x8],r8
80002122:	40 98       	lddsp	r8,sp[0x24]
80002124:	40 8a       	lddsp	r10,sp[0x20]
80002126:	5c 8a       	casts.h	r10
80002128:	50 aa       	stdsp	sp[0x28],r10
8000212a:	c5 a8       	rjmp	800021de <et024006_PrintString+0x136>
8000212c:	30 99       	mov	r9,9
8000212e:	f2 08 18 00 	cp.b	r8,r9
80002132:	c0 81       	brne	80002142 <et024006_PrintString+0x9a>
80002134:	40 a8       	lddsp	r8,sp[0x28]
80002136:	40 49       	lddsp	r9,sp[0x10]
80002138:	12 08       	add	r8,r9
8000213a:	5c 88       	casts.h	r8
8000213c:	50 a8       	stdsp	sp[0x28],r8
8000213e:	40 98       	lddsp	r8,sp[0x24]
80002140:	c4 f8       	rjmp	800021de <et024006_PrintString+0x136>
80002142:	f0 ca 00 20 	sub	r10,r8,32
80002146:	35 f9       	mov	r9,95
80002148:	f2 0a 18 00 	cp.b	r10,r9
8000214c:	e0 88 00 04 	brls	80002154 <et024006_PrintString+0xac>
80002150:	40 b5       	lddsp	r5,sp[0x2c]
80002152:	c0 a8       	rjmp	80002166 <et024006_PrintString+0xbe>
80002154:	22 08       	sub	r8,32
80002156:	40 ca       	lddsp	r10,sp[0x30]
80002158:	f0 0a 02 45 	mul	r5,r8,r10
8000215c:	40 59       	lddsp	r9,sp[0x14]
8000215e:	12 05       	add	r5,r9
80002160:	40 68       	lddsp	r8,sp[0x18]
80002162:	f0 05 00 05 	add	r5,r8,r5
80002166:	40 22       	lddsp	r2,sp[0x8]
80002168:	5c 72       	castu.h	r2
8000216a:	40 3a       	lddsp	r10,sp[0xc]
8000216c:	e4 0a 00 0a 	add	r10,r2,r10
80002170:	50 1a       	stdsp	sp[0x4],r10
80002172:	04 3a       	cp.w	r10,r2
80002174:	e0 8a 00 2f 	brle	800021d2 <et024006_PrintString+0x12a>
80002178:	40 21       	lddsp	r1,sp[0x8]
8000217a:	5c 81       	casts.h	r1
8000217c:	40 a9       	lddsp	r9,sp[0x28]
8000217e:	5c 79       	castu.h	r9
80002180:	50 09       	stdsp	sp[0x0],r9
80002182:	12 94       	mov	r4,r9
80002184:	40 48       	lddsp	r8,sp[0x10]
80002186:	10 04       	add	r4,r8
80002188:	40 aa       	lddsp	r10,sp[0x28]
8000218a:	5c 8a       	casts.h	r10
8000218c:	50 7a       	stdsp	sp[0x1c],r10
8000218e:	c1 b8       	rjmp	800021c4 <et024006_PrintString+0x11c>
80002190:	a1 96       	lsr	r6,0x1
80002192:	0b 88       	ld.ub	r8,r5[0x0]
80002194:	ed e8 00 08 	and	r8,r6,r8
80002198:	e6 08 18 00 	cp.b	r8,r3
8000219c:	c0 50       	breq	800021a6 <et024006_PrintString+0xfe>
8000219e:	00 9a       	mov	r10,r0
800021a0:	04 9b       	mov	r11,r2
800021a2:	f0 1f 00 50 	mcall	800022e0 <et024006_PrintString+0x238>
800021a6:	2f f7       	sub	r7,-1
800021a8:	5c 87       	casts.h	r7
800021aa:	0e 9c       	mov	r12,r7
800021ac:	5c 7c       	castu.h	r12
800021ae:	08 3c       	cp.w	r12,r4
800021b0:	cf 05       	brlt	80002190 <et024006_PrintString+0xe8>
800021b2:	2f f1       	sub	r1,-1
800021b4:	5c 81       	casts.h	r1
800021b6:	e5 d1 c0 10 	bfextu	r2,r1,0x0,0x10
800021ba:	40 19       	lddsp	r9,sp[0x4]
800021bc:	04 39       	cp.w	r9,r2
800021be:	e0 8a 00 0a 	brle	800021d2 <et024006_PrintString+0x12a>
800021c2:	2f f5       	sub	r5,-1
800021c4:	40 0c       	lddsp	r12,sp[0x0]
800021c6:	08 3c       	cp.w	r12,r4
800021c8:	cf 54       	brge	800021b2 <et024006_PrintString+0x10a>
800021ca:	40 77       	lddsp	r7,sp[0x1c]
800021cc:	e0 66 00 80 	mov	r6,128
800021d0:	ce 1b       	rjmp	80002192 <et024006_PrintString+0xea>
800021d2:	40 a8       	lddsp	r8,sp[0x28]
800021d4:	40 4a       	lddsp	r10,sp[0x10]
800021d6:	14 08       	add	r8,r10
800021d8:	5c 88       	casts.h	r8
800021da:	50 a8       	stdsp	sp[0x28],r8
800021dc:	40 98       	lddsp	r8,sp[0x24]
800021de:	40 99       	lddsp	r9,sp[0x24]
800021e0:	2f f9       	sub	r9,-1
800021e2:	50 99       	stdsp	sp[0x24],r9
800021e4:	11 88       	ld.ub	r8,r8[0x0]
800021e6:	e6 08 18 00 	cp.b	r8,r3
800021ea:	c9 01       	brne	8000210a <et024006_PrintString+0x62>
800021ec:	c7 68       	rjmp	800022d8 <et024006_PrintString+0x230>
800021ee:	f8 c8 ff ff 	sub	r8,r12,-1
800021f2:	50 08       	stdsp	sp[0x0],r8
800021f4:	40 8c       	lddsp	r12,sp[0x20]
800021f6:	5c 8c       	casts.h	r12
800021f8:	30 06       	mov	r6,0
800021fa:	5c 83       	casts.h	r3
800021fc:	fc 15 c0 20 	movh	r5,0xc020
80002200:	40 0a       	lddsp	r10,sp[0x0]
80002202:	f5 31 ff ff 	ld.ub	r1,r10[-1]
80002206:	30 a8       	mov	r8,10
80002208:	f0 01 18 00 	cp.b	r1,r8
8000220c:	c0 b1       	brne	80002222 <et024006_PrintString+0x17a>
8000220e:	40 28       	lddsp	r8,sp[0x8]
80002210:	40 39       	lddsp	r9,sp[0xc]
80002212:	12 08       	add	r8,r9
80002214:	5c 88       	casts.h	r8
80002216:	50 28       	stdsp	sp[0x8],r8
80002218:	14 98       	mov	r8,r10
8000221a:	40 8a       	lddsp	r10,sp[0x20]
8000221c:	5c 8a       	casts.h	r10
8000221e:	50 1a       	stdsp	sp[0x4],r10
80002220:	c5 28       	rjmp	800022c4 <et024006_PrintString+0x21c>
80002222:	30 98       	mov	r8,9
80002224:	f0 01 18 00 	cp.b	r1,r8
80002228:	c0 71       	brne	80002236 <et024006_PrintString+0x18e>
8000222a:	40 49       	lddsp	r9,sp[0x10]
8000222c:	12 0c       	add	r12,r9
8000222e:	5c 8c       	casts.h	r12
80002230:	50 1c       	stdsp	sp[0x4],r12
80002232:	40 08       	lddsp	r8,sp[0x0]
80002234:	c4 88       	rjmp	800022c4 <et024006_PrintString+0x21c>
80002236:	40 32       	lddsp	r2,sp[0xc]
80002238:	40 47       	lddsp	r7,sp[0x10]
8000223a:	f8 07 00 08 	add	r8,r12,r7
8000223e:	5c 88       	casts.h	r8
80002240:	50 18       	stdsp	sp[0x4],r8
80002242:	04 99       	mov	r9,r2
80002244:	20 19       	sub	r9,1
80002246:	40 28       	lddsp	r8,sp[0x8]
80002248:	10 09       	add	r9,r8
8000224a:	40 1a       	lddsp	r10,sp[0x4]
8000224c:	20 1a       	sub	r10,1
8000224e:	5c 79       	castu.h	r9
80002250:	5c 7a       	castu.h	r10
80002252:	10 9b       	mov	r11,r8
80002254:	5c 7b       	castu.h	r11
80002256:	5c 7c       	castu.h	r12
80002258:	f0 1f 00 21 	mcall	800022dc <et024006_PrintString+0x234>
8000225c:	32 29       	mov	r9,34
8000225e:	fc 18 c0 00 	movh	r8,0xc000
80002262:	b0 09       	st.h	r8[0x0],r9
80002264:	40 3a       	lddsp	r10,sp[0xc]
80002266:	58 0a       	cp.w	r10,0
80002268:	c2 d0       	breq	800022c2 <et024006_PrintString+0x21a>
8000226a:	e2 ce 00 20 	sub	lr,r1,32
8000226e:	40 59       	lddsp	r9,sp[0x14]
80002270:	f2 0e 02 4e 	mul	lr,r9,lr
80002274:	12 0e       	add	lr,r9
80002276:	40 68       	lddsp	r8,sp[0x18]
80002278:	f0 0e 00 0e 	add	lr,r8,lr
8000227c:	30 0c       	mov	r12,0
8000227e:	e0 60 00 80 	mov	r0,128
80002282:	18 91       	mov	r1,r12
80002284:	c1 98       	rjmp	800022b6 <et024006_PrintString+0x20e>
80002286:	a1 99       	lsr	r9,0x1
80002288:	f3 eb 00 0a 	and	r10,r9,r11
8000228c:	ec 0a 18 00 	cp.b	r10,r6
80002290:	e8 0a 17 10 	movne	r10,r4
80002294:	eb fa 1c 00 	st.hne	r5[0x0],r10
80002298:	eb f3 0c 00 	st.heq	r5[0x0],r3
8000229c:	2f f8       	sub	r8,-1
8000229e:	5c 88       	casts.h	r8
800022a0:	f0 07 19 00 	cp.h	r7,r8
800022a4:	fe 9b ff f1 	brhi	80002286 <et024006_PrintString+0x1de>
800022a8:	2f fc       	sub	r12,-1
800022aa:	5c 8c       	casts.h	r12
800022ac:	f8 02 19 00 	cp.h	r2,r12
800022b0:	e0 88 00 09 	brls	800022c2 <et024006_PrintString+0x21a>
800022b4:	2f fe       	sub	lr,-1
800022b6:	58 07       	cp.w	r7,0
800022b8:	cf 80       	breq	800022a8 <et024006_PrintString+0x200>
800022ba:	1d 8b       	ld.ub	r11,lr[0x0]
800022bc:	00 99       	mov	r9,r0
800022be:	02 98       	mov	r8,r1
800022c0:	ce 4b       	rjmp	80002288 <et024006_PrintString+0x1e0>
800022c2:	40 08       	lddsp	r8,sp[0x0]
800022c4:	40 09       	lddsp	r9,sp[0x0]
800022c6:	2f f9       	sub	r9,-1
800022c8:	50 09       	stdsp	sp[0x0],r9
800022ca:	11 88       	ld.ub	r8,r8[0x0]
800022cc:	ec 08 18 00 	cp.b	r8,r6
800022d0:	c0 40       	breq	800022d8 <et024006_PrintString+0x230>
800022d2:	40 1c       	lddsp	r12,sp[0x4]
800022d4:	5c 8c       	casts.h	r12
800022d6:	c9 5b       	rjmp	80002200 <et024006_PrintString+0x158>
800022d8:	2f 3d       	sub	sp,-52
800022da:	d8 32       	popm	r0-r7,pc
800022dc:	80 00       	ld.sh	r0,r0[0x0]
800022de:	20 08       	sub	r8,0
800022e0:	80 00       	ld.sh	r0,r0[0x0]
800022e2:	20 84       	sub	r4,8

800022e4 <et024006_DuplicatePixel>:
800022e4:	32 29       	mov	r9,34
800022e6:	fc 18 c0 00 	movh	r8,0xc000
800022ea:	b0 09       	st.h	r8[0x0],r9
800022ec:	58 7b       	cp.w	r11,7
800022ee:	e0 88 00 13 	brls	80002314 <et024006_DuplicatePixel+0x30>
800022f2:	16 99       	mov	r9,r11
800022f4:	fc 18 c0 20 	movh	r8,0xc020
800022f8:	b0 0c       	st.h	r8[0x0],r12
800022fa:	b0 0c       	st.h	r8[0x0],r12
800022fc:	b0 0c       	st.h	r8[0x0],r12
800022fe:	b0 0c       	st.h	r8[0x0],r12
80002300:	b0 0c       	st.h	r8[0x0],r12
80002302:	b0 0c       	st.h	r8[0x0],r12
80002304:	b0 0c       	st.h	r8[0x0],r12
80002306:	b0 0c       	st.h	r8[0x0],r12
80002308:	20 89       	sub	r9,8
8000230a:	58 79       	cp.w	r9,7
8000230c:	fe 9b ff f6 	brhi	800022f8 <et024006_DuplicatePixel+0x14>
80002310:	f7 db c0 03 	bfextu	r11,r11,0x0,0x3
80002314:	58 0b       	cp.w	r11,0
80002316:	5e 0c       	reteq	r12
80002318:	fc 18 c0 20 	movh	r8,0xc020
8000231c:	b0 0c       	st.h	r8[0x0],r12
8000231e:	20 1b       	sub	r11,1
80002320:	cf e1       	brne	8000231c <et024006_DuplicatePixel+0x38>
80002322:	5e fc       	retal	r12

80002324 <et024006_DrawFilledRect>:
80002324:	eb cd 40 e0 	pushm	r5-r7,lr
80002328:	14 97       	mov	r7,r10
8000232a:	12 96       	mov	r6,r9
8000232c:	10 95       	mov	r5,r8
8000232e:	f6 c9 00 01 	sub	r9,r11,1
80002332:	0c 09       	add	r9,r6
80002334:	f8 ca 00 01 	sub	r10,r12,1
80002338:	0e 0a       	add	r10,r7
8000233a:	5c 79       	castu.h	r9
8000233c:	5c 7a       	castu.h	r10
8000233e:	5c 7b       	castu.h	r11
80002340:	5c 7c       	castu.h	r12
80002342:	f0 1f 00 07 	mcall	8000235c <et024006_DrawFilledRect+0x38>
80002346:	f7 d6 c0 10 	bfextu	r11,r6,0x0,0x10
8000234a:	5c 77       	castu.h	r7
8000234c:	af 3b       	mul	r11,r7
8000234e:	f9 d5 c0 10 	bfextu	r12,r5,0x0,0x10
80002352:	f0 1f 00 04 	mcall	80002360 <et024006_DrawFilledRect+0x3c>
80002356:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
8000235a:	00 00       	add	r0,r0
8000235c:	80 00       	ld.sh	r0,r0[0x0]
8000235e:	20 08       	sub	r8,0
80002360:	80 00       	ld.sh	r0,r0[0x0]
80002362:	22 e4       	sub	r4,46

80002364 <et024006_AdjustGamma>:
80002364:	fc 19 c0 00 	movh	r9,0xc000
80002368:	34 6a       	mov	r10,70
8000236a:	b2 0a       	st.h	r9[0x0],r10
8000236c:	fc 18 c0 20 	movh	r8,0xc020
80002370:	e0 6b 00 94 	mov	r11,148
80002374:	b0 0b       	st.h	r8[0x0],r11
80002376:	34 7b       	mov	r11,71
80002378:	b2 0b       	st.h	r9[0x0],r11
8000237a:	34 1b       	mov	r11,65
8000237c:	b0 0b       	st.h	r8[0x0],r11
8000237e:	34 8b       	mov	r11,72
80002380:	b2 0b       	st.h	r9[0x0],r11
80002382:	30 0b       	mov	r11,0
80002384:	b0 0b       	st.h	r8[0x0],r11
80002386:	34 9b       	mov	r11,73
80002388:	b2 0b       	st.h	r9[0x0],r11
8000238a:	33 3b       	mov	r11,51
8000238c:	b0 0b       	st.h	r8[0x0],r11
8000238e:	34 ab       	mov	r11,74
80002390:	b2 0b       	st.h	r9[0x0],r11
80002392:	32 5b       	mov	r11,37
80002394:	b0 0b       	st.h	r8[0x0],r11
80002396:	34 bb       	mov	r11,75
80002398:	b2 0b       	st.h	r9[0x0],r11
8000239a:	34 5b       	mov	r11,69
8000239c:	b0 0b       	st.h	r8[0x0],r11
8000239e:	34 cb       	mov	r11,76
800023a0:	b2 0b       	st.h	r9[0x0],r11
800023a2:	34 4b       	mov	r11,68
800023a4:	b0 0b       	st.h	r8[0x0],r11
800023a6:	34 db       	mov	r11,77
800023a8:	b2 0b       	st.h	r9[0x0],r11
800023aa:	37 7b       	mov	r11,119
800023ac:	b0 0b       	st.h	r8[0x0],r11
800023ae:	34 eb       	mov	r11,78
800023b0:	b2 0b       	st.h	r9[0x0],r11
800023b2:	31 2b       	mov	r11,18
800023b4:	b0 0b       	st.h	r8[0x0],r11
800023b6:	34 fb       	mov	r11,79
800023b8:	b2 0b       	st.h	r9[0x0],r11
800023ba:	e0 6b 00 cc 	mov	r11,204
800023be:	b0 0b       	st.h	r8[0x0],r11
800023c0:	35 0b       	mov	r11,80
800023c2:	b2 0b       	st.h	r9[0x0],r11
800023c4:	b0 0a       	st.h	r8[0x0],r10
800023c6:	35 1a       	mov	r10,81
800023c8:	b2 0a       	st.h	r9[0x0],r10
800023ca:	e0 69 00 82 	mov	r9,130
800023ce:	b0 09       	st.h	r8[0x0],r9
800023d0:	5e fc       	retal	r12
800023d2:	d7 03       	nop

800023d4 <et024006_Init>:
800023d4:	eb cd 40 c0 	pushm	r6-r7,lr
800023d8:	fe f7 04 80 	ld.w	r7,pc[1152]
800023dc:	8f 0c       	st.w	r7[0x0],r12
800023de:	8f 1b       	st.w	r7[0x4],r11
800023e0:	16 9c       	mov	r12,r11
800023e2:	f0 1f 01 1f 	mcall	8000285c <et024006_Init+0x488>
800023e6:	35 5c       	mov	r12,85
800023e8:	f0 1f 01 1e 	mcall	80002860 <et024006_Init+0x48c>
800023ec:	30 2b       	mov	r11,2
800023ee:	33 2c       	mov	r12,50
800023f0:	f0 1f 01 1d 	mcall	80002864 <et024006_Init+0x490>
800023f4:	35 2c       	mov	r12,82
800023f6:	f0 1f 01 1d 	mcall	80002868 <et024006_Init+0x494>
800023fa:	35 2c       	mov	r12,82
800023fc:	f0 1f 01 1c 	mcall	8000286c <et024006_Init+0x498>
80002400:	6e 07       	ld.w	r7,r7[0x0]
80002402:	33 28       	mov	r8,50
80002404:	ee 08 06 46 	mulu.d	r6,r7,r8
80002408:	ee 78 42 40 	mov	r8,1000000
8000240c:	30 09       	mov	r9,0
8000240e:	ee 7a 42 3f 	mov	r10,999999
80002412:	30 0b       	mov	r11,0
80002414:	ec 0a 00 0a 	add	r10,r6,r10
80002418:	ee 0b 00 4b 	adc	r11,r7,r11
8000241c:	f0 1f 01 15 	mcall	80002870 <et024006_Init+0x49c>
80002420:	e1 b8 00 42 	mfsr	r8,0x108
80002424:	f0 0a 00 0a 	add	r10,r8,r10
80002428:	e1 b9 00 42 	mfsr	r9,0x108
8000242c:	14 38       	cp.w	r8,r10
8000242e:	e0 88 00 09 	brls	80002440 <et024006_Init+0x6c>
80002432:	12 38       	cp.w	r8,r9
80002434:	fe 98 ff fa 	brls	80002428 <et024006_Init+0x54>
80002438:	12 3a       	cp.w	r10,r9
8000243a:	e0 83 00 a2 	brlo	8000257e <et024006_Init+0x1aa>
8000243e:	cf 5b       	rjmp	80002428 <et024006_Init+0x54>
80002440:	12 38       	cp.w	r8,r9
80002442:	e0 8b 00 9e 	brhi	8000257e <et024006_Init+0x1aa>
80002446:	12 3a       	cp.w	r10,r9
80002448:	e0 83 00 9b 	brlo	8000257e <et024006_Init+0x1aa>
8000244c:	ce eb       	rjmp	80002428 <et024006_Init+0x54>
8000244e:	e1 b9 00 42 	mfsr	r9,0x108
80002452:	14 38       	cp.w	r8,r10
80002454:	e0 88 00 09 	brls	80002466 <et024006_Init+0x92>
80002458:	12 38       	cp.w	r8,r9
8000245a:	fe 98 ff fa 	brls	8000244e <et024006_Init+0x7a>
8000245e:	12 3a       	cp.w	r10,r9
80002460:	e0 83 00 a9 	brlo	800025b2 <et024006_Init+0x1de>
80002464:	cf 5b       	rjmp	8000244e <et024006_Init+0x7a>
80002466:	12 38       	cp.w	r8,r9
80002468:	e0 8b 00 a5 	brhi	800025b2 <et024006_Init+0x1de>
8000246c:	12 3a       	cp.w	r10,r9
8000246e:	e0 83 00 a2 	brlo	800025b2 <et024006_Init+0x1de>
80002472:	ce eb       	rjmp	8000244e <et024006_Init+0x7a>
80002474:	e1 b9 00 42 	mfsr	r9,0x108
80002478:	14 38       	cp.w	r8,r10
8000247a:	e0 88 00 09 	brls	8000248c <et024006_Init+0xb8>
8000247e:	12 38       	cp.w	r8,r9
80002480:	fe 98 ff fa 	brls	80002474 <et024006_Init+0xa0>
80002484:	12 3a       	cp.w	r10,r9
80002486:	e0 83 01 1e 	brlo	800026c2 <et024006_Init+0x2ee>
8000248a:	cf 5b       	rjmp	80002474 <et024006_Init+0xa0>
8000248c:	12 38       	cp.w	r8,r9
8000248e:	e0 8b 01 1a 	brhi	800026c2 <et024006_Init+0x2ee>
80002492:	12 3a       	cp.w	r10,r9
80002494:	e0 83 01 17 	brlo	800026c2 <et024006_Init+0x2ee>
80002498:	ce eb       	rjmp	80002474 <et024006_Init+0xa0>
8000249a:	e1 b9 00 42 	mfsr	r9,0x108
8000249e:	14 38       	cp.w	r8,r10
800024a0:	e0 88 00 09 	brls	800024b2 <et024006_Init+0xde>
800024a4:	12 38       	cp.w	r8,r9
800024a6:	fe 98 ff fa 	brls	8000249a <et024006_Init+0xc6>
800024aa:	12 3a       	cp.w	r10,r9
800024ac:	e0 83 01 29 	brlo	800026fe <et024006_Init+0x32a>
800024b0:	cf 5b       	rjmp	8000249a <et024006_Init+0xc6>
800024b2:	12 38       	cp.w	r8,r9
800024b4:	e0 8b 01 25 	brhi	800026fe <et024006_Init+0x32a>
800024b8:	12 3a       	cp.w	r10,r9
800024ba:	e0 83 01 22 	brlo	800026fe <et024006_Init+0x32a>
800024be:	ce eb       	rjmp	8000249a <et024006_Init+0xc6>
800024c0:	e1 b9 00 42 	mfsr	r9,0x108
800024c4:	14 38       	cp.w	r8,r10
800024c6:	e0 88 00 09 	brls	800024d8 <et024006_Init+0x104>
800024ca:	12 38       	cp.w	r8,r9
800024cc:	fe 98 ff fa 	brls	800024c0 <et024006_Init+0xec>
800024d0:	12 3a       	cp.w	r10,r9
800024d2:	e0 83 01 35 	brlo	8000273c <et024006_Init+0x368>
800024d6:	cf 5b       	rjmp	800024c0 <et024006_Init+0xec>
800024d8:	12 38       	cp.w	r8,r9
800024da:	e0 8b 01 31 	brhi	8000273c <et024006_Init+0x368>
800024de:	12 3a       	cp.w	r10,r9
800024e0:	e0 83 01 2e 	brlo	8000273c <et024006_Init+0x368>
800024e4:	ce eb       	rjmp	800024c0 <et024006_Init+0xec>
800024e6:	e1 b9 00 42 	mfsr	r9,0x108
800024ea:	14 38       	cp.w	r8,r10
800024ec:	e0 88 00 09 	brls	800024fe <et024006_Init+0x12a>
800024f0:	12 38       	cp.w	r8,r9
800024f2:	fe 98 ff fa 	brls	800024e6 <et024006_Init+0x112>
800024f6:	12 3a       	cp.w	r10,r9
800024f8:	e0 83 01 40 	brlo	80002778 <et024006_Init+0x3a4>
800024fc:	cf 5b       	rjmp	800024e6 <et024006_Init+0x112>
800024fe:	12 38       	cp.w	r8,r9
80002500:	e0 8b 01 3c 	brhi	80002778 <et024006_Init+0x3a4>
80002504:	12 3a       	cp.w	r10,r9
80002506:	e0 83 01 39 	brlo	80002778 <et024006_Init+0x3a4>
8000250a:	ce eb       	rjmp	800024e6 <et024006_Init+0x112>
8000250c:	e1 b9 00 42 	mfsr	r9,0x108
80002510:	14 38       	cp.w	r8,r10
80002512:	e0 88 00 09 	brls	80002524 <et024006_Init+0x150>
80002516:	12 38       	cp.w	r8,r9
80002518:	fe 98 ff fa 	brls	8000250c <et024006_Init+0x138>
8000251c:	12 3a       	cp.w	r10,r9
8000251e:	e0 83 01 4b 	brlo	800027b4 <et024006_Init+0x3e0>
80002522:	cf 5b       	rjmp	8000250c <et024006_Init+0x138>
80002524:	12 38       	cp.w	r8,r9
80002526:	e0 8b 01 47 	brhi	800027b4 <et024006_Init+0x3e0>
8000252a:	12 3a       	cp.w	r10,r9
8000252c:	e0 83 01 44 	brlo	800027b4 <et024006_Init+0x3e0>
80002530:	ce eb       	rjmp	8000250c <et024006_Init+0x138>
80002532:	e1 b9 00 42 	mfsr	r9,0x108
80002536:	14 38       	cp.w	r8,r10
80002538:	e0 88 00 09 	brls	8000254a <et024006_Init+0x176>
8000253c:	12 38       	cp.w	r8,r9
8000253e:	fe 98 ff fa 	brls	80002532 <et024006_Init+0x15e>
80002542:	12 3a       	cp.w	r10,r9
80002544:	e0 83 01 56 	brlo	800027f0 <et024006_Init+0x41c>
80002548:	cf 5b       	rjmp	80002532 <et024006_Init+0x15e>
8000254a:	12 38       	cp.w	r8,r9
8000254c:	e0 8b 01 52 	brhi	800027f0 <et024006_Init+0x41c>
80002550:	12 3a       	cp.w	r10,r9
80002552:	e0 83 01 4f 	brlo	800027f0 <et024006_Init+0x41c>
80002556:	ce eb       	rjmp	80002532 <et024006_Init+0x15e>
80002558:	e1 b9 00 42 	mfsr	r9,0x108
8000255c:	14 38       	cp.w	r8,r10
8000255e:	e0 88 00 09 	brls	80002570 <et024006_Init+0x19c>
80002562:	12 38       	cp.w	r8,r9
80002564:	fe 98 ff fa 	brls	80002558 <et024006_Init+0x184>
80002568:	12 3a       	cp.w	r10,r9
8000256a:	e0 83 01 64 	brlo	80002832 <et024006_Init+0x45e>
8000256e:	cf 5b       	rjmp	80002558 <et024006_Init+0x184>
80002570:	12 38       	cp.w	r8,r9
80002572:	e0 8b 01 60 	brhi	80002832 <et024006_Init+0x45e>
80002576:	12 3a       	cp.w	r10,r9
80002578:	e0 83 01 5d 	brlo	80002832 <et024006_Init+0x45e>
8000257c:	ce eb       	rjmp	80002558 <et024006_Init+0x184>
8000257e:	35 2c       	mov	r12,82
80002580:	f0 1f 00 ba 	mcall	80002868 <et024006_Init+0x494>
80002584:	fe f8 02 d4 	ld.w	r8,pc[724]
80002588:	70 07       	ld.w	r7,r8[0x0]
8000258a:	30 58       	mov	r8,5
8000258c:	ee 08 06 46 	mulu.d	r6,r7,r8
80002590:	e0 68 03 e8 	mov	r8,1000
80002594:	30 09       	mov	r9,0
80002596:	e0 6a 03 e7 	mov	r10,999
8000259a:	30 0b       	mov	r11,0
8000259c:	ec 0a 00 0a 	add	r10,r6,r10
800025a0:	ee 0b 00 4b 	adc	r11,r7,r11
800025a4:	f0 1f 00 b3 	mcall	80002870 <et024006_Init+0x49c>
800025a8:	e1 b8 00 42 	mfsr	r8,0x108
800025ac:	f0 0a 00 0a 	add	r10,r8,r10
800025b0:	c4 fb       	rjmp	8000244e <et024006_Init+0x7a>
800025b2:	f0 1f 00 b1 	mcall	80002874 <et024006_Init+0x4a0>
800025b6:	fc 19 c0 00 	movh	r9,0xc000
800025ba:	30 1a       	mov	r10,1
800025bc:	b2 0a       	st.h	r9[0x0],r10
800025be:	fc 18 c0 20 	movh	r8,0xc020
800025c2:	30 6b       	mov	r11,6
800025c4:	b0 0b       	st.h	r8[0x0],r11
800025c6:	33 ab       	mov	r11,58
800025c8:	b2 0b       	st.h	r9[0x0],r11
800025ca:	b0 0a       	st.h	r8[0x0],r10
800025cc:	33 bb       	mov	r11,59
800025ce:	b2 0b       	st.h	r9[0x0],r11
800025d0:	b0 0a       	st.h	r8[0x0],r10
800025d2:	33 ca       	mov	r10,60
800025d4:	b2 0a       	st.h	r9[0x0],r10
800025d6:	e0 6a 00 f0 	mov	r10,240
800025da:	b0 0a       	st.h	r8[0x0],r10
800025dc:	33 db       	mov	r11,61
800025de:	b2 0b       	st.h	r9[0x0],r11
800025e0:	30 07       	mov	r7,0
800025e2:	b0 07       	st.h	r8[0x0],r7
800025e4:	33 eb       	mov	r11,62
800025e6:	b2 0b       	st.h	r9[0x0],r11
800025e8:	33 8b       	mov	r11,56
800025ea:	b0 0b       	st.h	r8[0x0],r11
800025ec:	34 0c       	mov	r12,64
800025ee:	b2 0c       	st.h	r9[0x0],r12
800025f0:	30 fe       	mov	lr,15
800025f2:	b0 0e       	st.h	r8[0x0],lr
800025f4:	34 1e       	mov	lr,65
800025f6:	b2 0e       	st.h	r9[0x0],lr
800025f8:	b0 0a       	st.h	r8[0x0],r10
800025fa:	32 7a       	mov	r10,39
800025fc:	b2 0a       	st.h	r9[0x0],r10
800025fe:	30 2a       	mov	r10,2
80002600:	b0 0a       	st.h	r8[0x0],r10
80002602:	32 8e       	mov	lr,40
80002604:	b2 0e       	st.h	r9[0x0],lr
80002606:	b0 0a       	st.h	r8[0x0],r10
80002608:	32 9e       	mov	lr,41
8000260a:	b2 0e       	st.h	r9[0x0],lr
8000260c:	b0 0a       	st.h	r8[0x0],r10
8000260e:	32 ae       	mov	lr,42
80002610:	b2 0e       	st.h	r9[0x0],lr
80002612:	b0 0a       	st.h	r8[0x0],r10
80002614:	32 ce       	mov	lr,44
80002616:	b2 0e       	st.h	r9[0x0],lr
80002618:	b0 0a       	st.h	r8[0x0],r10
8000261a:	32 de       	mov	lr,45
8000261c:	b2 0e       	st.h	r9[0x0],lr
8000261e:	b0 0a       	st.h	r8[0x0],r10
80002620:	31 9a       	mov	r10,25
80002622:	b2 0a       	st.h	r9[0x0],r10
80002624:	34 9a       	mov	r10,73
80002626:	b0 0a       	st.h	r8[0x0],r10
80002628:	e0 6a 00 93 	mov	r10,147
8000262c:	b2 0a       	st.h	r9[0x0],r10
8000262e:	30 8a       	mov	r10,8
80002630:	b0 0a       	st.h	r8[0x0],r10
80002632:	31 6a       	mov	r10,22
80002634:	b2 0a       	st.h	r9[0x0],r10
80002636:	36 8a       	mov	r10,104
80002638:	b0 0a       	st.h	r8[0x0],r10
8000263a:	32 3a       	mov	r10,35
8000263c:	b2 0a       	st.h	r9[0x0],r10
8000263e:	e0 6a 00 95 	mov	r10,149
80002642:	b0 0a       	st.h	r8[0x0],r10
80002644:	32 4e       	mov	lr,36
80002646:	b2 0e       	st.h	r9[0x0],lr
80002648:	b0 0a       	st.h	r8[0x0],r10
8000264a:	32 5a       	mov	r10,37
8000264c:	b2 0a       	st.h	r9[0x0],r10
8000264e:	e0 6a 00 ff 	mov	r10,255
80002652:	b0 0a       	st.h	r8[0x0],r10
80002654:	e0 6a 00 90 	mov	r10,144
80002658:	b2 0a       	st.h	r9[0x0],r10
8000265a:	37 fa       	mov	r10,127
8000265c:	b0 0a       	st.h	r8[0x0],r10
8000265e:	33 5a       	mov	r10,53
80002660:	b2 0a       	st.h	r9[0x0],r10
80002662:	b0 0b       	st.h	r8[0x0],r11
80002664:	33 6a       	mov	r10,54
80002666:	b2 0a       	st.h	r9[0x0],r10
80002668:	37 8a       	mov	r10,120
8000266a:	b0 0a       	st.h	r8[0x0],r10
8000266c:	31 da       	mov	r10,29
8000266e:	b2 0a       	st.h	r9[0x0],r10
80002670:	30 7a       	mov	r10,7
80002672:	b0 0a       	st.h	r8[0x0],r10
80002674:	31 ea       	mov	r10,30
80002676:	b2 0a       	st.h	r9[0x0],r10
80002678:	b0 07       	st.h	r8[0x0],r7
8000267a:	31 fa       	mov	r10,31
8000267c:	b2 0a       	st.h	r9[0x0],r10
8000267e:	30 4a       	mov	r10,4
80002680:	b0 0a       	st.h	r8[0x0],r10
80002682:	32 0a       	mov	r10,32
80002684:	b2 0a       	st.h	r9[0x0],r10
80002686:	b0 0c       	st.h	r8[0x0],r12
80002688:	34 4a       	mov	r10,68
8000268a:	b2 0a       	st.h	r9[0x0],r10
8000268c:	b0 0b       	st.h	r8[0x0],r11
8000268e:	34 5a       	mov	r10,69
80002690:	b2 0a       	st.h	r9[0x0],r10
80002692:	31 29       	mov	r9,18
80002694:	b0 09       	st.h	r8[0x0],r9
80002696:	4f 18       	lddpc	r8,80002858 <et024006_Init+0x484>
80002698:	70 07       	ld.w	r7,r8[0x0]
8000269a:	30 a8       	mov	r8,10
8000269c:	ee 08 06 46 	mulu.d	r6,r7,r8
800026a0:	e0 68 03 e8 	mov	r8,1000
800026a4:	30 09       	mov	r9,0
800026a6:	e0 6a 03 e7 	mov	r10,999
800026aa:	30 0b       	mov	r11,0
800026ac:	ec 0a 00 0a 	add	r10,r6,r10
800026b0:	ee 0b 00 4b 	adc	r11,r7,r11
800026b4:	f0 1f 00 6f 	mcall	80002870 <et024006_Init+0x49c>
800026b8:	e1 b8 00 42 	mfsr	r8,0x108
800026bc:	f0 0a 00 0a 	add	r10,r8,r10
800026c0:	cd aa       	rjmp	80002474 <et024006_Init+0xa0>
800026c2:	31 c9       	mov	r9,28
800026c4:	fc 18 c0 00 	movh	r8,0xc000
800026c8:	b0 09       	st.h	r8[0x0],r9
800026ca:	30 49       	mov	r9,4
800026cc:	fc 18 c0 20 	movh	r8,0xc020
800026d0:	b0 09       	st.h	r8[0x0],r9
800026d2:	4e 28       	lddpc	r8,80002858 <et024006_Init+0x484>
800026d4:	70 07       	ld.w	r7,r8[0x0]
800026d6:	31 48       	mov	r8,20
800026d8:	ee 08 06 46 	mulu.d	r6,r7,r8
800026dc:	e0 68 03 e8 	mov	r8,1000
800026e0:	30 09       	mov	r9,0
800026e2:	e0 6a 03 e7 	mov	r10,999
800026e6:	30 0b       	mov	r11,0
800026e8:	ec 0a 00 0a 	add	r10,r6,r10
800026ec:	ee 0b 00 4b 	adc	r11,r7,r11
800026f0:	f0 1f 00 60 	mcall	80002870 <et024006_Init+0x49c>
800026f4:	e1 b8 00 42 	mfsr	r8,0x108
800026f8:	f0 0a 00 0a 	add	r10,r8,r10
800026fc:	cc fa       	rjmp	8000249a <et024006_Init+0xc6>
800026fe:	34 39       	mov	r9,67
80002700:	fc 18 c0 00 	movh	r8,0xc000
80002704:	b0 09       	st.h	r8[0x0],r9
80002706:	e0 69 00 80 	mov	r9,128
8000270a:	fc 18 c0 20 	movh	r8,0xc020
8000270e:	b0 09       	st.h	r8[0x0],r9
80002710:	4d 28       	lddpc	r8,80002858 <et024006_Init+0x484>
80002712:	70 07       	ld.w	r7,r8[0x0]
80002714:	30 58       	mov	r8,5
80002716:	ee 08 06 46 	mulu.d	r6,r7,r8
8000271a:	e0 68 03 e8 	mov	r8,1000
8000271e:	30 09       	mov	r9,0
80002720:	e0 6a 03 e7 	mov	r10,999
80002724:	30 0b       	mov	r11,0
80002726:	ec 0a 00 0a 	add	r10,r6,r10
8000272a:	ee 0b 00 4b 	adc	r11,r7,r11
8000272e:	f0 1f 00 51 	mcall	80002870 <et024006_Init+0x49c>
80002732:	e1 b8 00 42 	mfsr	r8,0x108
80002736:	f0 0a 00 0a 	add	r10,r8,r10
8000273a:	cc 3a       	rjmp	800024c0 <et024006_Init+0xec>
8000273c:	31 b9       	mov	r9,27
8000273e:	fc 18 c0 00 	movh	r8,0xc000
80002742:	b0 09       	st.h	r8[0x0],r9
80002744:	30 89       	mov	r9,8
80002746:	fc 18 c0 20 	movh	r8,0xc020
8000274a:	b0 09       	st.h	r8[0x0],r9
8000274c:	4c 38       	lddpc	r8,80002858 <et024006_Init+0x484>
8000274e:	70 07       	ld.w	r7,r8[0x0]
80002750:	32 88       	mov	r8,40
80002752:	ee 08 06 46 	mulu.d	r6,r7,r8
80002756:	e0 68 03 e8 	mov	r8,1000
8000275a:	30 09       	mov	r9,0
8000275c:	e0 6a 03 e7 	mov	r10,999
80002760:	30 0b       	mov	r11,0
80002762:	ec 0a 00 0a 	add	r10,r6,r10
80002766:	ee 0b 00 4b 	adc	r11,r7,r11
8000276a:	f0 1f 00 42 	mcall	80002870 <et024006_Init+0x49c>
8000276e:	e1 b8 00 42 	mfsr	r8,0x108
80002772:	f0 0a 00 0a 	add	r10,r8,r10
80002776:	cb 8a       	rjmp	800024e6 <et024006_Init+0x112>
80002778:	31 b9       	mov	r9,27
8000277a:	fc 18 c0 00 	movh	r8,0xc000
8000277e:	b0 09       	st.h	r8[0x0],r9
80002780:	31 09       	mov	r9,16
80002782:	fc 18 c0 20 	movh	r8,0xc020
80002786:	b0 09       	st.h	r8[0x0],r9
80002788:	4b 48       	lddpc	r8,80002858 <et024006_Init+0x484>
8000278a:	70 07       	ld.w	r7,r8[0x0]
8000278c:	32 88       	mov	r8,40
8000278e:	ee 08 06 46 	mulu.d	r6,r7,r8
80002792:	e0 68 03 e8 	mov	r8,1000
80002796:	30 09       	mov	r9,0
80002798:	e0 6a 03 e7 	mov	r10,999
8000279c:	30 0b       	mov	r11,0
8000279e:	ec 0a 00 0a 	add	r10,r6,r10
800027a2:	ee 0b 00 4b 	adc	r11,r7,r11
800027a6:	f0 1f 00 33 	mcall	80002870 <et024006_Init+0x49c>
800027aa:	e1 b8 00 42 	mfsr	r8,0x108
800027ae:	f0 0a 00 0a 	add	r10,r8,r10
800027b2:	ca da       	rjmp	8000250c <et024006_Init+0x138>
800027b4:	32 69       	mov	r9,38
800027b6:	fc 18 c0 00 	movh	r8,0xc000
800027ba:	b0 09       	st.h	r8[0x0],r9
800027bc:	30 49       	mov	r9,4
800027be:	fc 18 c0 20 	movh	r8,0xc020
800027c2:	b0 09       	st.h	r8[0x0],r9
800027c4:	4a 58       	lddpc	r8,80002858 <et024006_Init+0x484>
800027c6:	70 07       	ld.w	r7,r8[0x0]
800027c8:	32 88       	mov	r8,40
800027ca:	ee 08 06 46 	mulu.d	r6,r7,r8
800027ce:	e0 68 03 e8 	mov	r8,1000
800027d2:	30 09       	mov	r9,0
800027d4:	e0 6a 03 e7 	mov	r10,999
800027d8:	30 0b       	mov	r11,0
800027da:	ec 0a 00 0a 	add	r10,r6,r10
800027de:	ee 0b 00 4b 	adc	r11,r7,r11
800027e2:	f0 1f 00 24 	mcall	80002870 <et024006_Init+0x49c>
800027e6:	e1 b8 00 42 	mfsr	r8,0x108
800027ea:	f0 0a 00 0a 	add	r10,r8,r10
800027ee:	ca 2a       	rjmp	80002532 <et024006_Init+0x15e>
800027f0:	fc 19 c0 00 	movh	r9,0xc000
800027f4:	32 6a       	mov	r10,38
800027f6:	b2 0a       	st.h	r9[0x0],r10
800027f8:	fc 18 c0 20 	movh	r8,0xc020
800027fc:	32 4b       	mov	r11,36
800027fe:	b0 0b       	st.h	r8[0x0],r11
80002800:	b2 0a       	st.h	r9[0x0],r10
80002802:	32 c9       	mov	r9,44
80002804:	b0 09       	st.h	r8[0x0],r9
80002806:	49 58       	lddpc	r8,80002858 <et024006_Init+0x484>
80002808:	70 07       	ld.w	r7,r8[0x0]
8000280a:	32 88       	mov	r8,40
8000280c:	ee 08 06 46 	mulu.d	r6,r7,r8
80002810:	e0 68 03 e8 	mov	r8,1000
80002814:	30 09       	mov	r9,0
80002816:	e0 6a 03 e7 	mov	r10,999
8000281a:	30 0b       	mov	r11,0
8000281c:	ec 0a 00 0a 	add	r10,r6,r10
80002820:	ee 0b 00 4b 	adc	r11,r7,r11
80002824:	f0 1f 00 13 	mcall	80002870 <et024006_Init+0x49c>
80002828:	e1 b8 00 42 	mfsr	r8,0x108
8000282c:	f0 0a 00 0a 	add	r10,r8,r10
80002830:	c9 4a       	rjmp	80002558 <et024006_Init+0x184>
80002832:	fc 19 c0 00 	movh	r9,0xc000
80002836:	32 68       	mov	r8,38
80002838:	b2 08       	st.h	r9[0x0],r8
8000283a:	fc 18 c0 20 	movh	r8,0xc020
8000283e:	33 ca       	mov	r10,60
80002840:	b0 0a       	st.h	r8[0x0],r10
80002842:	37 0a       	mov	r10,112
80002844:	b2 0a       	st.h	r9[0x0],r10
80002846:	90 0b       	ld.sh	r11,r8[0x0]
80002848:	5c 5b       	castu.b	r11
8000284a:	b2 0a       	st.h	r9[0x0],r10
8000284c:	16 99       	mov	r9,r11
8000284e:	a3 b9       	sbr	r9,0x3
80002850:	b0 09       	st.h	r8[0x0],r9
80002852:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002856:	00 00       	add	r0,r0
80002858:	00 00       	add	r0,r0
8000285a:	00 60       	and	r0,r0
8000285c:	80 00       	ld.sh	r0,r0[0x0]
8000285e:	33 80       	mov	r0,56
80002860:	80 00       	ld.sh	r0,r0[0x0]
80002862:	35 20       	mov	r0,82
80002864:	80 00       	ld.sh	r0,r0[0x0]
80002866:	34 9c       	mov	r12,73
80002868:	80 00       	ld.sh	r0,r0[0x0]
8000286a:	35 4e       	mov	lr,84
8000286c:	80 00       	ld.sh	r0,r0[0x0]
8000286e:	35 6a       	mov	r10,86
80002870:	80 00       	ld.sh	r0,r0[0x0]
80002872:	45 a4       	lddsp	r4,sp[0x168]
80002874:	80 00       	ld.sh	r0,r0[0x0]
80002876:	23 64       	sub	r4,54

80002878 <sd_mmc_spi_get_capacity>:
80002878:	d4 01       	pushm	lr
8000287a:	4c 18       	lddpc	r8,8000297c <sd_mmc_spi_get_capacity+0x104>
8000287c:	11 db       	ld.ub	r11,r8[0x5]
8000287e:	4c 18       	lddpc	r8,80002980 <sd_mmc_spi_get_capacity+0x108>
80002880:	11 8a       	ld.ub	r10,r8[0x0]
80002882:	30 38       	mov	r8,3
80002884:	f0 0a 18 00 	cp.b	r10,r8
80002888:	c2 71       	brne	800028d6 <sd_mmc_spi_get_capacity+0x5e>
8000288a:	4b d8       	lddpc	r8,8000297c <sd_mmc_spi_get_capacity+0x104>
8000288c:	f1 3a 00 08 	ld.ub	r10,r8[8]
80002890:	f1 39 00 09 	ld.ub	r9,r8[9]
80002894:	f3 ea 10 89 	or	r9,r9,r10<<0x8
80002898:	11 fa       	ld.ub	r10,r8[0x7]
8000289a:	f5 da c0 06 	bfextu	r10,r10,0x0,0x6
8000289e:	f3 ea 11 0a 	or	r10,r9,r10<<0x10
800028a2:	2f fa       	sub	r10,-1
800028a4:	f4 0b 16 0d 	lsr	r11,r10,0xd
800028a8:	16 99       	mov	r9,r11
800028aa:	f4 08 15 13 	lsl	r8,r10,0x13
800028ae:	4b 6a       	lddpc	r10,80002984 <sd_mmc_spi_get_capacity+0x10c>
800028b0:	f4 e9 00 00 	st.d	r10[0],r8
800028b4:	f7 db c0 09 	bfextu	r11,r11,0x0,0x9
800028b8:	4b 48       	lddpc	r8,80002988 <sd_mmc_spi_get_capacity+0x110>
800028ba:	b0 0b       	st.h	r8[0x0],r11
800028bc:	f4 ea 00 00 	ld.d	r10,r10[0]
800028c0:	90 09       	ld.sh	r9,r8[0x0]
800028c2:	f4 08 16 09 	lsr	r8,r10,0x9
800028c6:	f1 eb 11 78 	or	r8,r8,r11<<0x17
800028ca:	20 18       	sub	r8,1
800028cc:	b7 79       	lsl	r9,0x17
800028ce:	12 08       	add	r8,r9
800028d0:	4a f9       	lddpc	r9,8000298c <sd_mmc_spi_get_capacity+0x114>
800028d2:	93 08       	st.w	r9[0x0],r8
800028d4:	c4 28       	rjmp	80002958 <sd_mmc_spi_get_capacity+0xe0>
800028d6:	4a a8       	lddpc	r8,8000297c <sd_mmc_spi_get_capacity+0x104>
800028d8:	f1 3c 00 0a 	ld.ub	r12,r8[10]
800028dc:	f1 39 00 08 	ld.ub	r9,r8[8]
800028e0:	a7 89       	lsr	r9,0x6
800028e2:	11 fe       	ld.ub	lr,r8[0x7]
800028e4:	f2 0e 00 29 	add	r9,r9,lr<<0x2
800028e8:	11 ee       	ld.ub	lr,r8[0x6]
800028ea:	fd de c0 02 	bfextu	lr,lr,0x0,0x2
800028ee:	ab 6e       	lsl	lr,0xa
800028f0:	1c 09       	add	r9,lr
800028f2:	2f f9       	sub	r9,-1
800028f4:	f1 38 00 09 	ld.ub	r8,r8[9]
800028f8:	f1 d8 c0 02 	bfextu	r8,r8,0x0,0x2
800028fc:	f8 0e 16 07 	lsr	lr,r12,0x7
80002900:	fc 08 00 18 	add	r8,lr,r8<<0x1
80002904:	2f e8       	sub	r8,-2
80002906:	f2 08 09 49 	lsl	r9,r9,r8
8000290a:	20 19       	sub	r9,1
8000290c:	4a 08       	lddpc	r8,8000298c <sd_mmc_spi_get_capacity+0x114>
8000290e:	91 09       	st.w	r8[0x0],r9
80002910:	70 0e       	ld.w	lr,r8[0x0]
80002912:	f7 db c0 04 	bfextu	r11,r11,0x0,0x4
80002916:	2f fe       	sub	lr,-1
80002918:	fc 0b 09 48 	lsl	r8,lr,r11
8000291c:	30 09       	mov	r9,0
8000291e:	49 ae       	lddpc	lr,80002984 <sd_mmc_spi_get_capacity+0x10c>
80002920:	fc e9 00 00 	st.d	lr[0],r8
80002924:	49 98       	lddpc	r8,80002988 <sd_mmc_spi_get_capacity+0x110>
80002926:	b0 09       	st.h	r8[0x0],r9
80002928:	30 98       	mov	r8,9
8000292a:	f0 0b 18 00 	cp.b	r11,r8
8000292e:	e0 88 00 08 	brls	8000293e <sd_mmc_spi_get_capacity+0xc6>
80002932:	49 78       	lddpc	r8,8000298c <sd_mmc_spi_get_capacity+0x114>
80002934:	70 09       	ld.w	r9,r8[0x0]
80002936:	20 9b       	sub	r11,9
80002938:	f2 0b 09 4b 	lsl	r11,r9,r11
8000293c:	91 0b       	st.w	r8[0x0],r11
8000293e:	58 0a       	cp.w	r10,0
80002940:	c0 c1       	brne	80002958 <sd_mmc_spi_get_capacity+0xe0>
80002942:	f1 dc c0 45 	bfextu	r8,r12,0x2,0x5
80002946:	f9 dc c0 02 	bfextu	r12,r12,0x0,0x2
8000294a:	48 d9       	lddpc	r9,8000297c <sd_mmc_spi_get_capacity+0x104>
8000294c:	f3 39 00 0b 	ld.ub	r9,r9[11]
80002950:	a3 7c       	lsl	r12,0x3
80002952:	f9 e9 12 59 	or	r9,r12,r9>>0x5
80002956:	c0 c8       	rjmp	8000296e <sd_mmc_spi_get_capacity+0xf6>
80002958:	48 9a       	lddpc	r10,8000297c <sd_mmc_spi_get_capacity+0x104>
8000295a:	f5 39 00 0a 	ld.ub	r9,r10[10]
8000295e:	f3 d9 c0 06 	bfextu	r9,r9,0x0,0x6
80002962:	f5 38 00 0b 	ld.ub	r8,r10[11]
80002966:	a7 98       	lsr	r8,0x7
80002968:	f0 09 00 18 	add	r8,r8,r9<<0x1
8000296c:	30 09       	mov	r9,0
8000296e:	2f f9       	sub	r9,-1
80002970:	2f f8       	sub	r8,-1
80002972:	b1 39       	mul	r9,r8
80002974:	48 78       	lddpc	r8,80002990 <sd_mmc_spi_get_capacity+0x118>
80002976:	b0 09       	st.h	r8[0x0],r9
80002978:	d8 02       	popm	pc
8000297a:	00 00       	add	r0,r0
8000297c:	00 00       	add	r0,r0
8000297e:	03 9c       	ld.ub	r12,r1[0x1]
80002980:	00 00       	add	r0,r0
80002982:	03 9a       	ld.ub	r10,r1[0x1]
80002984:	00 00       	add	r0,r0
80002986:	03 88       	ld.ub	r8,r1[0x0]
80002988:	00 00       	add	r0,r0
8000298a:	03 90       	ld.ub	r0,r1[0x1]
8000298c:	00 00       	add	r0,r0
8000298e:	03 94       	ld.ub	r4,r1[0x1]
80002990:	00 00       	add	r0,r0
80002992:	03 92       	ld.ub	r2,r1[0x1]

80002994 <sd_mmc_spi_write_close>:
80002994:	5e fc       	retal	r12
80002996:	d7 03       	nop

80002998 <sd_mmc_spi_read_close_PDCA>:
80002998:	d4 01       	pushm	lr
8000299a:	e0 6b 00 ff 	mov	r11,255
8000299e:	fe 7c 24 00 	mov	r12,-56320
800029a2:	f0 1f 00 0e 	mcall	800029d8 <sd_mmc_spi_read_close_PDCA+0x40>
800029a6:	e0 6b 00 ff 	mov	r11,255
800029aa:	fe 7c 24 00 	mov	r12,-56320
800029ae:	f0 1f 00 0b 	mcall	800029d8 <sd_mmc_spi_read_close_PDCA+0x40>
800029b2:	e0 6b 00 ff 	mov	r11,255
800029b6:	fe 7c 24 00 	mov	r12,-56320
800029ba:	f0 1f 00 08 	mcall	800029d8 <sd_mmc_spi_read_close_PDCA+0x40>
800029be:	e0 6b 00 ff 	mov	r11,255
800029c2:	fe 7c 24 00 	mov	r12,-56320
800029c6:	f0 1f 00 05 	mcall	800029d8 <sd_mmc_spi_read_close_PDCA+0x40>
800029ca:	30 1b       	mov	r11,1
800029cc:	fe 7c 24 00 	mov	r12,-56320
800029d0:	f0 1f 00 03 	mcall	800029dc <sd_mmc_spi_read_close_PDCA+0x44>
800029d4:	d8 02       	popm	pc
800029d6:	00 00       	add	r0,r0
800029d8:	80 00       	ld.sh	r0,r0[0x0]
800029da:	3b 56       	mov	r6,-75
800029dc:	80 00       	ld.sh	r0,r0[0x0]
800029de:	3a 72       	mov	r2,-89

800029e0 <sd_mmc_spi_send_and_read>:
800029e0:	d4 01       	pushm	lr
800029e2:	20 1d       	sub	sp,4
800029e4:	18 9b       	mov	r11,r12
800029e6:	fe 7c 24 00 	mov	r12,-56320
800029ea:	f0 1f 00 09 	mcall	80002a0c <sd_mmc_spi_send_and_read+0x2c>
800029ee:	fa cb ff fe 	sub	r11,sp,-2
800029f2:	fe 7c 24 00 	mov	r12,-56320
800029f6:	f0 1f 00 07 	mcall	80002a10 <sd_mmc_spi_send_and_read+0x30>
800029fa:	58 1c       	cp.w	r12,1
800029fc:	c0 41       	brne	80002a04 <sd_mmc_spi_send_and_read+0x24>
800029fe:	e0 6c 00 ff 	mov	r12,255
80002a02:	c0 28       	rjmp	80002a06 <sd_mmc_spi_send_and_read+0x26>
80002a04:	1b bc       	ld.ub	r12,sp[0x3]
80002a06:	2f fd       	sub	sp,-4
80002a08:	d8 02       	popm	pc
80002a0a:	00 00       	add	r0,r0
80002a0c:	80 00       	ld.sh	r0,r0[0x0]
80002a0e:	3b 56       	mov	r6,-75
80002a10:	80 00       	ld.sh	r0,r0[0x0]
80002a12:	3b 72       	mov	r2,-73

80002a14 <sd_mmc_spi_wait_not_busy>:
80002a14:	d4 21       	pushm	r4-r7,lr
80002a16:	30 1b       	mov	r11,1
80002a18:	fe 7c 24 00 	mov	r12,-56320
80002a1c:	f0 1f 00 10 	mcall	80002a5c <sd_mmc_spi_wait_not_busy+0x48>
80002a20:	30 07       	mov	r7,0
80002a22:	e0 65 00 ff 	mov	r5,255
80002a26:	48 f4       	lddpc	r4,80002a60 <sd_mmc_spi_wait_not_busy+0x4c>
80002a28:	3f f6       	mov	r6,-1
80002a2a:	c0 b8       	rjmp	80002a40 <sd_mmc_spi_wait_not_busy+0x2c>
80002a2c:	2f f7       	sub	r7,-1
80002a2e:	e2 57 0d 40 	cp.w	r7,200000
80002a32:	c0 71       	brne	80002a40 <sd_mmc_spi_wait_not_busy+0x2c>
80002a34:	30 1b       	mov	r11,1
80002a36:	fe 7c 24 00 	mov	r12,-56320
80002a3a:	f0 1f 00 0b 	mcall	80002a64 <sd_mmc_spi_wait_not_busy+0x50>
80002a3e:	d8 2a       	popm	r4-r7,pc,r12=0
80002a40:	0a 9c       	mov	r12,r5
80002a42:	f0 1f 00 0a 	mcall	80002a68 <sd_mmc_spi_wait_not_busy+0x54>
80002a46:	a8 8c       	st.b	r4[0x0],r12
80002a48:	ec 0c 18 00 	cp.b	r12,r6
80002a4c:	cf 01       	brne	80002a2c <sd_mmc_spi_wait_not_busy+0x18>
80002a4e:	30 1b       	mov	r11,1
80002a50:	fe 7c 24 00 	mov	r12,-56320
80002a54:	f0 1f 00 04 	mcall	80002a64 <sd_mmc_spi_wait_not_busy+0x50>
80002a58:	da 2a       	popm	r4-r7,pc,r12=1
80002a5a:	00 00       	add	r0,r0
80002a5c:	80 00       	ld.sh	r0,r0[0x0]
80002a5e:	3a 26       	mov	r6,-94
80002a60:	00 00       	add	r0,r0
80002a62:	03 ac       	ld.ub	r12,r1[0x2]
80002a64:	80 00       	ld.sh	r0,r0[0x0]
80002a66:	3a 72       	mov	r2,-89
80002a68:	80 00       	ld.sh	r0,r0[0x0]
80002a6a:	29 e0       	sub	r0,-98

80002a6c <sd_mmc_spi_write_open>:
80002a6c:	d4 01       	pushm	lr
80002a6e:	48 58       	lddpc	r8,80002a80 <sd_mmc_spi_write_open+0x14>
80002a70:	f8 09 16 17 	lsr	r9,r12,0x17
80002a74:	91 09       	st.w	r8[0x0],r9
80002a76:	a9 7c       	lsl	r12,0x9
80002a78:	91 1c       	st.w	r8[0x4],r12
80002a7a:	f0 1f 00 03 	mcall	80002a84 <sd_mmc_spi_write_open+0x18>
80002a7e:	d8 02       	popm	pc
80002a80:	00 00       	add	r0,r0
80002a82:	00 68       	and	r8,r0
80002a84:	80 00       	ld.sh	r0,r0[0x0]
80002a86:	2a 14       	sub	r4,-95

80002a88 <sd_mmc_spi_command>:
80002a88:	eb cd 40 f8 	pushm	r3-r7,lr
80002a8c:	18 96       	mov	r6,r12
80002a8e:	16 97       	mov	r7,r11
80002a90:	e0 6b 00 ff 	mov	r11,255
80002a94:	fe 7c 24 00 	mov	r12,-56320
80002a98:	f0 1f 00 2b 	mcall	80002b44 <sd_mmc_spi_command+0xbc>
80002a9c:	0c 9b       	mov	r11,r6
80002a9e:	a7 ab       	sbr	r11,0x6
80002aa0:	5c 5b       	castu.b	r11
80002aa2:	fe 7c 24 00 	mov	r12,-56320
80002aa6:	f0 1f 00 28 	mcall	80002b44 <sd_mmc_spi_command+0xbc>
80002aaa:	ee 0b 16 18 	lsr	r11,r7,0x18
80002aae:	fe 7c 24 00 	mov	r12,-56320
80002ab2:	f0 1f 00 25 	mcall	80002b44 <sd_mmc_spi_command+0xbc>
80002ab6:	ee 0b 16 10 	lsr	r11,r7,0x10
80002aba:	fe 7c 24 00 	mov	r12,-56320
80002abe:	f0 1f 00 22 	mcall	80002b44 <sd_mmc_spi_command+0xbc>
80002ac2:	f7 d7 c1 10 	bfextu	r11,r7,0x8,0x10
80002ac6:	fe 7c 24 00 	mov	r12,-56320
80002aca:	f0 1f 00 1f 	mcall	80002b44 <sd_mmc_spi_command+0xbc>
80002ace:	0e 9b       	mov	r11,r7
80002ad0:	5c 7b       	castu.h	r11
80002ad2:	fe 7c 24 00 	mov	r12,-56320
80002ad6:	f0 1f 00 1c 	mcall	80002b44 <sd_mmc_spi_command+0xbc>
80002ada:	30 08       	mov	r8,0
80002adc:	f0 06 18 00 	cp.b	r6,r8
80002ae0:	c0 60       	breq	80002aec <sd_mmc_spi_command+0x64>
80002ae2:	30 88       	mov	r8,8
80002ae4:	f0 06 18 00 	cp.b	r6,r8
80002ae8:	c1 01       	brne	80002b08 <sd_mmc_spi_command+0x80>
80002aea:	c0 88       	rjmp	80002afa <sd_mmc_spi_command+0x72>
80002aec:	e0 6b 00 95 	mov	r11,149
80002af0:	fe 7c 24 00 	mov	r12,-56320
80002af4:	f0 1f 00 14 	mcall	80002b44 <sd_mmc_spi_command+0xbc>
80002af8:	c0 e8       	rjmp	80002b14 <sd_mmc_spi_command+0x8c>
80002afa:	e0 6b 00 87 	mov	r11,135
80002afe:	fe 7c 24 00 	mov	r12,-56320
80002b02:	f0 1f 00 11 	mcall	80002b44 <sd_mmc_spi_command+0xbc>
80002b06:	c0 78       	rjmp	80002b14 <sd_mmc_spi_command+0x8c>
80002b08:	e0 6b 00 ff 	mov	r11,255
80002b0c:	fe 7c 24 00 	mov	r12,-56320
80002b10:	f0 1f 00 0d 	mcall	80002b44 <sd_mmc_spi_command+0xbc>
80002b14:	3f f9       	mov	r9,-1
80002b16:	48 d8       	lddpc	r8,80002b48 <sd_mmc_spi_command+0xc0>
80002b18:	b0 89       	st.b	r8[0x0],r9
80002b1a:	30 07       	mov	r7,0
80002b1c:	e0 64 00 ff 	mov	r4,255
80002b20:	10 93       	mov	r3,r8
80002b22:	12 96       	mov	r6,r9
80002b24:	30 b5       	mov	r5,11
80002b26:	c0 68       	rjmp	80002b32 <sd_mmc_spi_command+0xaa>
80002b28:	2f f7       	sub	r7,-1
80002b2a:	5c 57       	castu.b	r7
80002b2c:	ea 07 18 00 	cp.b	r7,r5
80002b30:	c0 80       	breq	80002b40 <sd_mmc_spi_command+0xb8>
80002b32:	08 9c       	mov	r12,r4
80002b34:	f0 1f 00 06 	mcall	80002b4c <sd_mmc_spi_command+0xc4>
80002b38:	a6 8c       	st.b	r3[0x0],r12
80002b3a:	ec 0c 18 00 	cp.b	r12,r6
80002b3e:	cf 50       	breq	80002b28 <sd_mmc_spi_command+0xa0>
80002b40:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
80002b44:	80 00       	ld.sh	r0,r0[0x0]
80002b46:	3b 56       	mov	r6,-75
80002b48:	00 00       	add	r0,r0
80002b4a:	03 ac       	ld.ub	r12,r1[0x2]
80002b4c:	80 00       	ld.sh	r0,r0[0x0]
80002b4e:	29 e0       	sub	r0,-98

80002b50 <sd_mmc_spi_send_command>:
80002b50:	eb cd 40 c0 	pushm	r6-r7,lr
80002b54:	18 97       	mov	r7,r12
80002b56:	16 96       	mov	r6,r11
80002b58:	30 1b       	mov	r11,1
80002b5a:	fe 7c 24 00 	mov	r12,-56320
80002b5e:	f0 1f 00 09 	mcall	80002b80 <sd_mmc_spi_send_command+0x30>
80002b62:	0c 9b       	mov	r11,r6
80002b64:	0e 9c       	mov	r12,r7
80002b66:	f0 1f 00 08 	mcall	80002b84 <sd_mmc_spi_send_command+0x34>
80002b6a:	48 87       	lddpc	r7,80002b88 <sd_mmc_spi_send_command+0x38>
80002b6c:	ae 8c       	st.b	r7[0x0],r12
80002b6e:	30 1b       	mov	r11,1
80002b70:	fe 7c 24 00 	mov	r12,-56320
80002b74:	f0 1f 00 06 	mcall	80002b8c <sd_mmc_spi_send_command+0x3c>
80002b78:	0f 8c       	ld.ub	r12,r7[0x0]
80002b7a:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002b7e:	00 00       	add	r0,r0
80002b80:	80 00       	ld.sh	r0,r0[0x0]
80002b82:	3a 26       	mov	r6,-94
80002b84:	80 00       	ld.sh	r0,r0[0x0]
80002b86:	2a 88       	sub	r8,-88
80002b88:	00 00       	add	r0,r0
80002b8a:	03 ac       	ld.ub	r12,r1[0x2]
80002b8c:	80 00       	ld.sh	r0,r0[0x0]
80002b8e:	3a 72       	mov	r2,-89

80002b90 <sd_mmc_spi_check_presence>:
80002b90:	eb cd 40 fe 	pushm	r1-r7,lr
80002b94:	49 a8       	lddpc	r8,80002bfc <sd_mmc_spi_check_presence+0x6c>
80002b96:	11 89       	ld.ub	r9,r8[0x0]
80002b98:	30 08       	mov	r8,0
80002b9a:	f0 09 18 00 	cp.b	r9,r8
80002b9e:	c1 f1       	brne	80002bdc <sd_mmc_spi_check_presence+0x4c>
80002ba0:	30 07       	mov	r7,0
80002ba2:	0e 94       	mov	r4,r7
80002ba4:	49 73       	lddpc	r3,80002c00 <sd_mmc_spi_check_presence+0x70>
80002ba6:	30 16       	mov	r6,1
80002ba8:	e0 62 00 ff 	mov	r2,255
80002bac:	fe 71 24 00 	mov	r1,-56320
80002bb0:	30 b5       	mov	r5,11
80002bb2:	c0 c8       	rjmp	80002bca <sd_mmc_spi_check_presence+0x3a>
80002bb4:	04 9b       	mov	r11,r2
80002bb6:	02 9c       	mov	r12,r1
80002bb8:	f0 1f 00 13 	mcall	80002c04 <sd_mmc_spi_check_presence+0x74>
80002bbc:	2f f7       	sub	r7,-1
80002bbe:	5c 87       	casts.h	r7
80002bc0:	ea 07 19 00 	cp.h	r7,r5
80002bc4:	c0 31       	brne	80002bca <sd_mmc_spi_check_presence+0x3a>
80002bc6:	e3 cf 80 fe 	ldm	sp++,r1-r7,pc,r12=0
80002bca:	08 9b       	mov	r11,r4
80002bcc:	08 9c       	mov	r12,r4
80002bce:	f0 1f 00 0f 	mcall	80002c08 <sd_mmc_spi_check_presence+0x78>
80002bd2:	a6 8c       	st.b	r3[0x0],r12
80002bd4:	ec 0c 18 00 	cp.b	r12,r6
80002bd8:	ce e1       	brne	80002bb4 <sd_mmc_spi_check_presence+0x24>
80002bda:	c0 e8       	rjmp	80002bf6 <sd_mmc_spi_check_presence+0x66>
80002bdc:	30 0b       	mov	r11,0
80002bde:	33 bc       	mov	r12,59
80002be0:	f0 1f 00 0a 	mcall	80002c08 <sd_mmc_spi_check_presence+0x78>
80002be4:	48 78       	lddpc	r8,80002c00 <sd_mmc_spi_check_presence+0x70>
80002be6:	b0 8c       	st.b	r8[0x0],r12
80002be8:	58 0c       	cp.w	r12,0
80002bea:	c0 60       	breq	80002bf6 <sd_mmc_spi_check_presence+0x66>
80002bec:	30 09       	mov	r9,0
80002bee:	48 48       	lddpc	r8,80002bfc <sd_mmc_spi_check_presence+0x6c>
80002bf0:	b0 89       	st.b	r8[0x0],r9
80002bf2:	e3 cf 80 fe 	ldm	sp++,r1-r7,pc,r12=0
80002bf6:	e3 cf 90 fe 	ldm	sp++,r1-r7,pc,r12=1
80002bfa:	00 00       	add	r0,r0
80002bfc:	00 00       	add	r0,r0
80002bfe:	00 84       	andn	r4,r0
80002c00:	00 00       	add	r0,r0
80002c02:	03 ac       	ld.ub	r12,r1[0x2]
80002c04:	80 00       	ld.sh	r0,r0[0x0]
80002c06:	3b 56       	mov	r6,-75
80002c08:	80 00       	ld.sh	r0,r0[0x0]
80002c0a:	2b 50       	sub	r0,-75

80002c0c <sd_mmc_spi_write_sector_from_ram>:
80002c0c:	eb cd 40 e0 	pushm	r5-r7,lr
80002c10:	18 97       	mov	r7,r12
80002c12:	f0 1f 00 4e 	mcall	80002d48 <sd_mmc_spi_write_sector_from_ram+0x13c>
80002c16:	e0 80 00 96 	breq	80002d42 <sd_mmc_spi_write_sector_from_ram+0x136>
80002c1a:	30 1b       	mov	r11,1
80002c1c:	fe 7c 24 00 	mov	r12,-56320
80002c20:	f0 1f 00 4b 	mcall	80002d4c <sd_mmc_spi_write_sector_from_ram+0x140>
80002c24:	4c b8       	lddpc	r8,80002d50 <sd_mmc_spi_write_sector_from_ram+0x144>
80002c26:	11 89       	ld.ub	r9,r8[0x0]
80002c28:	30 38       	mov	r8,3
80002c2a:	f0 09 18 00 	cp.b	r9,r8
80002c2e:	c0 d1       	brne	80002c48 <sd_mmc_spi_write_sector_from_ram+0x3c>
80002c30:	4c 98       	lddpc	r8,80002d54 <sd_mmc_spi_write_sector_from_ram+0x148>
80002c32:	70 0b       	ld.w	r11,r8[0x0]
80002c34:	70 18       	ld.w	r8,r8[0x4]
80002c36:	a9 98       	lsr	r8,0x9
80002c38:	f1 eb 11 7b 	or	r11,r8,r11<<0x17
80002c3c:	31 8c       	mov	r12,24
80002c3e:	f0 1f 00 47 	mcall	80002d58 <sd_mmc_spi_write_sector_from_ram+0x14c>
80002c42:	4c 78       	lddpc	r8,80002d5c <sd_mmc_spi_write_sector_from_ram+0x150>
80002c44:	b0 8c       	st.b	r8[0x0],r12
80002c46:	c0 88       	rjmp	80002c56 <sd_mmc_spi_write_sector_from_ram+0x4a>
80002c48:	4c 38       	lddpc	r8,80002d54 <sd_mmc_spi_write_sector_from_ram+0x148>
80002c4a:	70 1b       	ld.w	r11,r8[0x4]
80002c4c:	31 8c       	mov	r12,24
80002c4e:	f0 1f 00 43 	mcall	80002d58 <sd_mmc_spi_write_sector_from_ram+0x14c>
80002c52:	4c 38       	lddpc	r8,80002d5c <sd_mmc_spi_write_sector_from_ram+0x150>
80002c54:	b0 8c       	st.b	r8[0x0],r12
80002c56:	4c 28       	lddpc	r8,80002d5c <sd_mmc_spi_write_sector_from_ram+0x150>
80002c58:	11 89       	ld.ub	r9,r8[0x0]
80002c5a:	30 08       	mov	r8,0
80002c5c:	f0 09 18 00 	cp.b	r9,r8
80002c60:	c0 80       	breq	80002c70 <sd_mmc_spi_write_sector_from_ram+0x64>
80002c62:	30 1b       	mov	r11,1
80002c64:	fe 7c 24 00 	mov	r12,-56320
80002c68:	f0 1f 00 3e 	mcall	80002d60 <sd_mmc_spi_write_sector_from_ram+0x154>
80002c6c:	e3 cf 80 e0 	ldm	sp++,r5-r7,pc,r12=0
80002c70:	e0 6b 00 ff 	mov	r11,255
80002c74:	fe 7c 24 00 	mov	r12,-56320
80002c78:	f0 1f 00 3b 	mcall	80002d64 <sd_mmc_spi_write_sector_from_ram+0x158>
80002c7c:	e0 6b 00 fe 	mov	r11,254
80002c80:	fe 7c 24 00 	mov	r12,-56320
80002c84:	f0 1f 00 38 	mcall	80002d64 <sd_mmc_spi_write_sector_from_ram+0x158>
80002c88:	ee c6 fe 00 	sub	r6,r7,-512
80002c8c:	fe 75 24 00 	mov	r5,-56320
80002c90:	0f 3b       	ld.ub	r11,r7++
80002c92:	0a 9c       	mov	r12,r5
80002c94:	f0 1f 00 34 	mcall	80002d64 <sd_mmc_spi_write_sector_from_ram+0x158>
80002c98:	0c 37       	cp.w	r7,r6
80002c9a:	cf b1       	brne	80002c90 <sd_mmc_spi_write_sector_from_ram+0x84>
80002c9c:	e0 6b 00 ff 	mov	r11,255
80002ca0:	fe 7c 24 00 	mov	r12,-56320
80002ca4:	f0 1f 00 30 	mcall	80002d64 <sd_mmc_spi_write_sector_from_ram+0x158>
80002ca8:	e0 6b 00 ff 	mov	r11,255
80002cac:	fe 7c 24 00 	mov	r12,-56320
80002cb0:	f0 1f 00 2d 	mcall	80002d64 <sd_mmc_spi_write_sector_from_ram+0x158>
80002cb4:	e0 6c 00 ff 	mov	r12,255
80002cb8:	f0 1f 00 2c 	mcall	80002d68 <sd_mmc_spi_write_sector_from_ram+0x15c>
80002cbc:	4a 88       	lddpc	r8,80002d5c <sd_mmc_spi_write_sector_from_ram+0x150>
80002cbe:	b0 8c       	st.b	r8[0x0],r12
80002cc0:	f9 dc c0 05 	bfextu	r12,r12,0x0,0x5
80002cc4:	58 5c       	cp.w	r12,5
80002cc6:	c1 40       	breq	80002cee <sd_mmc_spi_write_sector_from_ram+0xe2>
80002cc8:	e0 6b 00 ff 	mov	r11,255
80002ccc:	fe 7c 24 00 	mov	r12,-56320
80002cd0:	f0 1f 00 25 	mcall	80002d64 <sd_mmc_spi_write_sector_from_ram+0x158>
80002cd4:	e0 6b 00 ff 	mov	r11,255
80002cd8:	fe 7c 24 00 	mov	r12,-56320
80002cdc:	f0 1f 00 22 	mcall	80002d64 <sd_mmc_spi_write_sector_from_ram+0x158>
80002ce0:	30 1b       	mov	r11,1
80002ce2:	fe 7c 24 00 	mov	r12,-56320
80002ce6:	f0 1f 00 1f 	mcall	80002d60 <sd_mmc_spi_write_sector_from_ram+0x154>
80002cea:	e3 cf 80 e0 	ldm	sp++,r5-r7,pc,r12=0
80002cee:	e0 6b 00 ff 	mov	r11,255
80002cf2:	fe 7c 24 00 	mov	r12,-56320
80002cf6:	f0 1f 00 1c 	mcall	80002d64 <sd_mmc_spi_write_sector_from_ram+0x158>
80002cfa:	e0 6b 00 ff 	mov	r11,255
80002cfe:	fe 7c 24 00 	mov	r12,-56320
80002d02:	f0 1f 00 19 	mcall	80002d64 <sd_mmc_spi_write_sector_from_ram+0x158>
80002d06:	30 1b       	mov	r11,1
80002d08:	fe 7c 24 00 	mov	r12,-56320
80002d0c:	f0 1f 00 15 	mcall	80002d60 <sd_mmc_spi_write_sector_from_ram+0x154>
80002d10:	49 18       	lddpc	r8,80002d54 <sd_mmc_spi_write_sector_from_ram+0x148>
80002d12:	f0 e6 00 00 	ld.d	r6,r8[0]
80002d16:	e0 6a 02 00 	mov	r10,512
80002d1a:	30 0b       	mov	r11,0
80002d1c:	ec 0a 00 0a 	add	r10,r6,r10
80002d20:	ee 0b 00 4b 	adc	r11,r7,r11
80002d24:	f0 eb 00 00 	st.d	r8[0],r10
80002d28:	30 07       	mov	r7,0
80002d2a:	30 a6       	mov	r6,10
80002d2c:	c0 68       	rjmp	80002d38 <sd_mmc_spi_write_sector_from_ram+0x12c>
80002d2e:	2f f7       	sub	r7,-1
80002d30:	5c 87       	casts.h	r7
80002d32:	ec 07 19 00 	cp.h	r7,r6
80002d36:	c0 60       	breq	80002d42 <sd_mmc_spi_write_sector_from_ram+0x136>
80002d38:	f0 1f 00 04 	mcall	80002d48 <sd_mmc_spi_write_sector_from_ram+0x13c>
80002d3c:	cf 90       	breq	80002d2e <sd_mmc_spi_write_sector_from_ram+0x122>
80002d3e:	e3 cf 90 e0 	ldm	sp++,r5-r7,pc,r12=1
80002d42:	e3 cf 80 e0 	ldm	sp++,r5-r7,pc,r12=0
80002d46:	00 00       	add	r0,r0
80002d48:	80 00       	ld.sh	r0,r0[0x0]
80002d4a:	2a 14       	sub	r4,-95
80002d4c:	80 00       	ld.sh	r0,r0[0x0]
80002d4e:	3a 26       	mov	r6,-94
80002d50:	00 00       	add	r0,r0
80002d52:	03 9a       	ld.ub	r10,r1[0x1]
80002d54:	00 00       	add	r0,r0
80002d56:	00 68       	and	r8,r0
80002d58:	80 00       	ld.sh	r0,r0[0x0]
80002d5a:	2a 88       	sub	r8,-88
80002d5c:	00 00       	add	r0,r0
80002d5e:	03 ac       	ld.ub	r12,r1[0x2]
80002d60:	80 00       	ld.sh	r0,r0[0x0]
80002d62:	3a 72       	mov	r2,-89
80002d64:	80 00       	ld.sh	r0,r0[0x0]
80002d66:	3b 56       	mov	r6,-75
80002d68:	80 00       	ld.sh	r0,r0[0x0]
80002d6a:	29 e0       	sub	r0,-98

80002d6c <sd_mmc_spi_read_open_PDCA>:
80002d6c:	d4 21       	pushm	r4-r7,lr
80002d6e:	4a e8       	lddpc	r8,80002e24 <sd_mmc_spi_read_open_PDCA+0xb8>
80002d70:	f8 09 16 17 	lsr	r9,r12,0x17
80002d74:	91 09       	st.w	r8[0x0],r9
80002d76:	a9 7c       	lsl	r12,0x9
80002d78:	91 1c       	st.w	r8[0x4],r12
80002d7a:	f0 1f 00 2c 	mcall	80002e28 <sd_mmc_spi_read_open_PDCA+0xbc>
80002d7e:	c5 20       	breq	80002e22 <sd_mmc_spi_read_open_PDCA+0xb6>
80002d80:	30 1b       	mov	r11,1
80002d82:	fe 7c 24 00 	mov	r12,-56320
80002d86:	f0 1f 00 2a 	mcall	80002e2c <sd_mmc_spi_read_open_PDCA+0xc0>
80002d8a:	4a a8       	lddpc	r8,80002e30 <sd_mmc_spi_read_open_PDCA+0xc4>
80002d8c:	11 89       	ld.ub	r9,r8[0x0]
80002d8e:	30 38       	mov	r8,3
80002d90:	f0 09 18 00 	cp.b	r9,r8
80002d94:	c0 d1       	brne	80002dae <sd_mmc_spi_read_open_PDCA+0x42>
80002d96:	4a 48       	lddpc	r8,80002e24 <sd_mmc_spi_read_open_PDCA+0xb8>
80002d98:	70 0b       	ld.w	r11,r8[0x0]
80002d9a:	70 18       	ld.w	r8,r8[0x4]
80002d9c:	a9 98       	lsr	r8,0x9
80002d9e:	f1 eb 11 7b 	or	r11,r8,r11<<0x17
80002da2:	31 1c       	mov	r12,17
80002da4:	f0 1f 00 24 	mcall	80002e34 <sd_mmc_spi_read_open_PDCA+0xc8>
80002da8:	4a 48       	lddpc	r8,80002e38 <sd_mmc_spi_read_open_PDCA+0xcc>
80002daa:	b0 8c       	st.b	r8[0x0],r12
80002dac:	c0 88       	rjmp	80002dbc <sd_mmc_spi_read_open_PDCA+0x50>
80002dae:	49 e8       	lddpc	r8,80002e24 <sd_mmc_spi_read_open_PDCA+0xb8>
80002db0:	70 1b       	ld.w	r11,r8[0x4]
80002db2:	31 1c       	mov	r12,17
80002db4:	f0 1f 00 20 	mcall	80002e34 <sd_mmc_spi_read_open_PDCA+0xc8>
80002db8:	4a 08       	lddpc	r8,80002e38 <sd_mmc_spi_read_open_PDCA+0xcc>
80002dba:	b0 8c       	st.b	r8[0x0],r12
80002dbc:	49 f8       	lddpc	r8,80002e38 <sd_mmc_spi_read_open_PDCA+0xcc>
80002dbe:	11 89       	ld.ub	r9,r8[0x0]
80002dc0:	30 08       	mov	r8,0
80002dc2:	f0 09 18 00 	cp.b	r9,r8
80002dc6:	c1 00       	breq	80002de6 <sd_mmc_spi_read_open_PDCA+0x7a>
80002dc8:	30 1b       	mov	r11,1
80002dca:	fe 7c 24 00 	mov	r12,-56320
80002dce:	f0 1f 00 1c 	mcall	80002e3c <sd_mmc_spi_read_open_PDCA+0xd0>
80002dd2:	d8 2a       	popm	r4-r7,pc,r12=0
80002dd4:	20 17       	sub	r7,1
80002dd6:	5c 87       	casts.h	r7
80002dd8:	c0 d1       	brne	80002df2 <sd_mmc_spi_read_open_PDCA+0x86>
80002dda:	30 1b       	mov	r11,1
80002ddc:	fe 7c 24 00 	mov	r12,-56320
80002de0:	f0 1f 00 17 	mcall	80002e3c <sd_mmc_spi_read_open_PDCA+0xd0>
80002de4:	d8 2a       	popm	r4-r7,pc,r12=0
80002de6:	e0 67 75 30 	mov	r7,30000
80002dea:	e0 65 00 ff 	mov	r5,255
80002dee:	49 34       	lddpc	r4,80002e38 <sd_mmc_spi_read_open_PDCA+0xcc>
80002df0:	3f f6       	mov	r6,-1
80002df2:	0a 9c       	mov	r12,r5
80002df4:	f0 1f 00 13 	mcall	80002e40 <sd_mmc_spi_read_open_PDCA+0xd4>
80002df8:	a8 8c       	st.b	r4[0x0],r12
80002dfa:	ec 0c 18 00 	cp.b	r12,r6
80002dfe:	ce b0       	breq	80002dd4 <sd_mmc_spi_read_open_PDCA+0x68>
80002e00:	3f e8       	mov	r8,-2
80002e02:	f0 0c 18 00 	cp.b	r12,r8
80002e06:	c0 21       	brne	80002e0a <sd_mmc_spi_read_open_PDCA+0x9e>
80002e08:	da 2a       	popm	r4-r7,pc,r12=1
80002e0a:	e0 6b 00 ff 	mov	r11,255
80002e0e:	fe 7c 24 00 	mov	r12,-56320
80002e12:	f0 1f 00 0d 	mcall	80002e44 <sd_mmc_spi_read_open_PDCA+0xd8>
80002e16:	30 1b       	mov	r11,1
80002e18:	fe 7c 24 00 	mov	r12,-56320
80002e1c:	f0 1f 00 08 	mcall	80002e3c <sd_mmc_spi_read_open_PDCA+0xd0>
80002e20:	30 0c       	mov	r12,0
80002e22:	d8 22       	popm	r4-r7,pc
80002e24:	00 00       	add	r0,r0
80002e26:	00 68       	and	r8,r0
80002e28:	80 00       	ld.sh	r0,r0[0x0]
80002e2a:	2a 14       	sub	r4,-95
80002e2c:	80 00       	ld.sh	r0,r0[0x0]
80002e2e:	3a 26       	mov	r6,-94
80002e30:	00 00       	add	r0,r0
80002e32:	03 9a       	ld.ub	r10,r1[0x1]
80002e34:	80 00       	ld.sh	r0,r0[0x0]
80002e36:	2a 88       	sub	r8,-88
80002e38:	00 00       	add	r0,r0
80002e3a:	03 ac       	ld.ub	r12,r1[0x2]
80002e3c:	80 00       	ld.sh	r0,r0[0x0]
80002e3e:	3a 72       	mov	r2,-89
80002e40:	80 00       	ld.sh	r0,r0[0x0]
80002e42:	29 e0       	sub	r0,-98
80002e44:	80 00       	ld.sh	r0,r0[0x0]
80002e46:	3b 56       	mov	r6,-75

80002e48 <sd_mmc_spi_check_hc>:
80002e48:	eb cd 40 c0 	pushm	r6-r7,lr
80002e4c:	f0 1f 00 1c 	mcall	80002ebc <sd_mmc_spi_check_hc+0x74>
80002e50:	c0 31       	brne	80002e56 <sd_mmc_spi_check_hc+0xe>
80002e52:	e3 cf c0 c0 	ldm	sp++,r6-r7,pc,r12=-1
80002e56:	30 1b       	mov	r11,1
80002e58:	fe 7c 24 00 	mov	r12,-56320
80002e5c:	f0 1f 00 19 	mcall	80002ec0 <sd_mmc_spi_check_hc+0x78>
80002e60:	30 0b       	mov	r11,0
80002e62:	33 ac       	mov	r12,58
80002e64:	f0 1f 00 18 	mcall	80002ec4 <sd_mmc_spi_check_hc+0x7c>
80002e68:	49 88       	lddpc	r8,80002ec8 <sd_mmc_spi_check_hc+0x80>
80002e6a:	b0 8c       	st.b	r8[0x0],r12
80002e6c:	58 0c       	cp.w	r12,0
80002e6e:	c0 80       	breq	80002e7e <sd_mmc_spi_check_hc+0x36>
80002e70:	30 1b       	mov	r11,1
80002e72:	fe 7c 24 00 	mov	r12,-56320
80002e76:	f0 1f 00 16 	mcall	80002ecc <sd_mmc_spi_check_hc+0x84>
80002e7a:	e3 cf c0 c0 	ldm	sp++,r6-r7,pc,r12=-1
80002e7e:	e0 6c 00 ff 	mov	r12,255
80002e82:	f0 1f 00 14 	mcall	80002ed0 <sd_mmc_spi_check_hc+0x88>
80002e86:	18 96       	mov	r6,r12
80002e88:	e0 6c 00 ff 	mov	r12,255
80002e8c:	f0 1f 00 11 	mcall	80002ed0 <sd_mmc_spi_check_hc+0x88>
80002e90:	48 e7       	lddpc	r7,80002ec8 <sd_mmc_spi_check_hc+0x80>
80002e92:	ae 8c       	st.b	r7[0x0],r12
80002e94:	e0 6c 00 ff 	mov	r12,255
80002e98:	f0 1f 00 0e 	mcall	80002ed0 <sd_mmc_spi_check_hc+0x88>
80002e9c:	ae 8c       	st.b	r7[0x0],r12
80002e9e:	e0 6c 00 ff 	mov	r12,255
80002ea2:	f0 1f 00 0c 	mcall	80002ed0 <sd_mmc_spi_check_hc+0x88>
80002ea6:	ae 8c       	st.b	r7[0x0],r12
80002ea8:	30 1b       	mov	r11,1
80002eaa:	fe 7c 24 00 	mov	r12,-56320
80002eae:	f0 1f 00 08 	mcall	80002ecc <sd_mmc_spi_check_hc+0x84>
80002eb2:	f9 d6 c0 c1 	bfextu	r12,r6,0x6,0x1
80002eb6:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002eba:	00 00       	add	r0,r0
80002ebc:	80 00       	ld.sh	r0,r0[0x0]
80002ebe:	2a 14       	sub	r4,-95
80002ec0:	80 00       	ld.sh	r0,r0[0x0]
80002ec2:	3a 26       	mov	r6,-94
80002ec4:	80 00       	ld.sh	r0,r0[0x0]
80002ec6:	2a 88       	sub	r8,-88
80002ec8:	00 00       	add	r0,r0
80002eca:	03 ac       	ld.ub	r12,r1[0x2]
80002ecc:	80 00       	ld.sh	r0,r0[0x0]
80002ece:	3a 72       	mov	r2,-89
80002ed0:	80 00       	ld.sh	r0,r0[0x0]
80002ed2:	29 e0       	sub	r0,-98

80002ed4 <sd_mmc_spi_get_if>:
80002ed4:	eb cd 40 80 	pushm	r7,lr
80002ed8:	f0 1f 00 27 	mcall	80002f74 <sd_mmc_spi_get_if+0xa0>
80002edc:	c0 31       	brne	80002ee2 <sd_mmc_spi_get_if+0xe>
80002ede:	e3 cf c0 80 	ldm	sp++,r7,pc,r12=-1
80002ee2:	30 1b       	mov	r11,1
80002ee4:	fe 7c 24 00 	mov	r12,-56320
80002ee8:	f0 1f 00 24 	mcall	80002f78 <sd_mmc_spi_get_if+0xa4>
80002eec:	e0 6b 01 aa 	mov	r11,426
80002ef0:	30 8c       	mov	r12,8
80002ef2:	f0 1f 00 23 	mcall	80002f7c <sd_mmc_spi_get_if+0xa8>
80002ef6:	4a 38       	lddpc	r8,80002f80 <sd_mmc_spi_get_if+0xac>
80002ef8:	b0 8c       	st.b	r8[0x0],r12
80002efa:	e2 1c 00 04 	andl	r12,0x4,COH
80002efe:	c0 80       	breq	80002f0e <sd_mmc_spi_get_if+0x3a>
80002f00:	30 1b       	mov	r11,1
80002f02:	fe 7c 24 00 	mov	r12,-56320
80002f06:	f0 1f 00 20 	mcall	80002f84 <sd_mmc_spi_get_if+0xb0>
80002f0a:	e3 cf 80 80 	ldm	sp++,r7,pc,r12=0
80002f0e:	e0 6c 00 ff 	mov	r12,255
80002f12:	f0 1f 00 1e 	mcall	80002f88 <sd_mmc_spi_get_if+0xb4>
80002f16:	49 b7       	lddpc	r7,80002f80 <sd_mmc_spi_get_if+0xac>
80002f18:	ae 8c       	st.b	r7[0x0],r12
80002f1a:	e0 6c 00 ff 	mov	r12,255
80002f1e:	f0 1f 00 1b 	mcall	80002f88 <sd_mmc_spi_get_if+0xb4>
80002f22:	ae 8c       	st.b	r7[0x0],r12
80002f24:	e0 6c 00 ff 	mov	r12,255
80002f28:	f0 1f 00 18 	mcall	80002f88 <sd_mmc_spi_get_if+0xb4>
80002f2c:	ae 8c       	st.b	r7[0x0],r12
80002f2e:	f9 dc c0 01 	bfextu	r12,r12,0x0,0x1
80002f32:	c0 81       	brne	80002f42 <sd_mmc_spi_get_if+0x6e>
80002f34:	30 1b       	mov	r11,1
80002f36:	fe 7c 24 00 	mov	r12,-56320
80002f3a:	f0 1f 00 13 	mcall	80002f84 <sd_mmc_spi_get_if+0xb0>
80002f3e:	e3 cf c0 80 	ldm	sp++,r7,pc,r12=-1
80002f42:	e0 6c 00 ff 	mov	r12,255
80002f46:	f0 1f 00 11 	mcall	80002f88 <sd_mmc_spi_get_if+0xb4>
80002f4a:	48 e8       	lddpc	r8,80002f80 <sd_mmc_spi_get_if+0xac>
80002f4c:	b0 8c       	st.b	r8[0x0],r12
80002f4e:	3a a8       	mov	r8,-86
80002f50:	f0 0c 18 00 	cp.b	r12,r8
80002f54:	c0 80       	breq	80002f64 <sd_mmc_spi_get_if+0x90>
80002f56:	30 1b       	mov	r11,1
80002f58:	fe 7c 24 00 	mov	r12,-56320
80002f5c:	f0 1f 00 0a 	mcall	80002f84 <sd_mmc_spi_get_if+0xb0>
80002f60:	e3 cf c0 80 	ldm	sp++,r7,pc,r12=-1
80002f64:	30 1b       	mov	r11,1
80002f66:	fe 7c 24 00 	mov	r12,-56320
80002f6a:	f0 1f 00 07 	mcall	80002f84 <sd_mmc_spi_get_if+0xb0>
80002f6e:	e3 cf 90 80 	ldm	sp++,r7,pc,r12=1
80002f72:	00 00       	add	r0,r0
80002f74:	80 00       	ld.sh	r0,r0[0x0]
80002f76:	2a 14       	sub	r4,-95
80002f78:	80 00       	ld.sh	r0,r0[0x0]
80002f7a:	3a 26       	mov	r6,-94
80002f7c:	80 00       	ld.sh	r0,r0[0x0]
80002f7e:	2a 88       	sub	r8,-88
80002f80:	00 00       	add	r0,r0
80002f82:	03 ac       	ld.ub	r12,r1[0x2]
80002f84:	80 00       	ld.sh	r0,r0[0x0]
80002f86:	3a 72       	mov	r2,-89
80002f88:	80 00       	ld.sh	r0,r0[0x0]
80002f8a:	29 e0       	sub	r0,-98

80002f8c <sd_mmc_spi_get_csd>:
80002f8c:	eb cd 40 fc 	pushm	r2-r7,lr
80002f90:	20 1d       	sub	sp,4
80002f92:	18 92       	mov	r2,r12
80002f94:	f0 1f 00 32 	mcall	8000305c <sd_mmc_spi_get_csd+0xd0>
80002f98:	c5 f0       	breq	80003056 <sd_mmc_spi_get_csd+0xca>
80002f9a:	30 1b       	mov	r11,1
80002f9c:	fe 7c 24 00 	mov	r12,-56320
80002fa0:	f0 1f 00 30 	mcall	80003060 <sd_mmc_spi_get_csd+0xd4>
80002fa4:	30 0b       	mov	r11,0
80002fa6:	30 9c       	mov	r12,9
80002fa8:	f0 1f 00 2f 	mcall	80003064 <sd_mmc_spi_get_csd+0xd8>
80002fac:	4a f8       	lddpc	r8,80003068 <sd_mmc_spi_get_csd+0xdc>
80002fae:	b0 8c       	st.b	r8[0x0],r12
80002fb0:	58 0c       	cp.w	r12,0
80002fb2:	c0 81       	brne	80002fc2 <sd_mmc_spi_get_csd+0x36>
80002fb4:	30 07       	mov	r7,0
80002fb6:	e0 64 00 ff 	mov	r4,255
80002fba:	10 93       	mov	r3,r8
80002fbc:	3f e6       	mov	r6,-2
80002fbe:	30 95       	mov	r5,9
80002fc0:	c1 78       	rjmp	80002fee <sd_mmc_spi_get_csd+0x62>
80002fc2:	30 1b       	mov	r11,1
80002fc4:	fe 7c 24 00 	mov	r12,-56320
80002fc8:	f0 1f 00 29 	mcall	8000306c <sd_mmc_spi_get_csd+0xe0>
80002fcc:	30 09       	mov	r9,0
80002fce:	4a 98       	lddpc	r8,80003070 <sd_mmc_spi_get_csd+0xe4>
80002fd0:	b0 89       	st.b	r8[0x0],r9
80002fd2:	30 0c       	mov	r12,0
80002fd4:	c4 18       	rjmp	80003056 <sd_mmc_spi_get_csd+0xca>
80002fd6:	ea 07 18 00 	cp.b	r7,r5
80002fda:	c0 81       	brne	80002fea <sd_mmc_spi_get_csd+0x5e>
80002fdc:	30 1b       	mov	r11,1
80002fde:	fe 7c 24 00 	mov	r12,-56320
80002fe2:	f0 1f 00 23 	mcall	8000306c <sd_mmc_spi_get_csd+0xe0>
80002fe6:	30 0c       	mov	r12,0
80002fe8:	c3 78       	rjmp	80003056 <sd_mmc_spi_get_csd+0xca>
80002fea:	2f f7       	sub	r7,-1
80002fec:	5c 57       	castu.b	r7
80002fee:	08 9c       	mov	r12,r4
80002ff0:	f0 1f 00 21 	mcall	80003074 <sd_mmc_spi_get_csd+0xe8>
80002ff4:	a6 8c       	st.b	r3[0x0],r12
80002ff6:	ec 0c 18 00 	cp.b	r12,r6
80002ffa:	ce e1       	brne	80002fd6 <sd_mmc_spi_get_csd+0x4a>
80002ffc:	30 07       	mov	r7,0
80002ffe:	e0 65 00 ff 	mov	r5,255
80003002:	fe 76 24 00 	mov	r6,-56320
80003006:	fa c4 ff fe 	sub	r4,sp,-2
8000300a:	0a 9b       	mov	r11,r5
8000300c:	0c 9c       	mov	r12,r6
8000300e:	f0 1f 00 1b 	mcall	80003078 <sd_mmc_spi_get_csd+0xec>
80003012:	08 9b       	mov	r11,r4
80003014:	0c 9c       	mov	r12,r6
80003016:	f0 1f 00 1a 	mcall	8000307c <sd_mmc_spi_get_csd+0xf0>
8000301a:	9a 18       	ld.sh	r8,sp[0x2]
8000301c:	e4 07 0b 08 	st.b	r2[r7],r8
80003020:	2f f7       	sub	r7,-1
80003022:	59 07       	cp.w	r7,16
80003024:	cf 31       	brne	8000300a <sd_mmc_spi_get_csd+0x7e>
80003026:	e0 6b 00 ff 	mov	r11,255
8000302a:	fe 7c 24 00 	mov	r12,-56320
8000302e:	f0 1f 00 13 	mcall	80003078 <sd_mmc_spi_get_csd+0xec>
80003032:	e0 6b 00 ff 	mov	r11,255
80003036:	fe 7c 24 00 	mov	r12,-56320
8000303a:	f0 1f 00 10 	mcall	80003078 <sd_mmc_spi_get_csd+0xec>
8000303e:	e0 6b 00 ff 	mov	r11,255
80003042:	fe 7c 24 00 	mov	r12,-56320
80003046:	f0 1f 00 0d 	mcall	80003078 <sd_mmc_spi_get_csd+0xec>
8000304a:	30 1b       	mov	r11,1
8000304c:	fe 7c 24 00 	mov	r12,-56320
80003050:	f0 1f 00 07 	mcall	8000306c <sd_mmc_spi_get_csd+0xe0>
80003054:	30 1c       	mov	r12,1
80003056:	2f fd       	sub	sp,-4
80003058:	e3 cd 80 fc 	ldm	sp++,r2-r7,pc
8000305c:	80 00       	ld.sh	r0,r0[0x0]
8000305e:	2a 14       	sub	r4,-95
80003060:	80 00       	ld.sh	r0,r0[0x0]
80003062:	3a 26       	mov	r6,-94
80003064:	80 00       	ld.sh	r0,r0[0x0]
80003066:	2a 88       	sub	r8,-88
80003068:	00 00       	add	r0,r0
8000306a:	03 ac       	ld.ub	r12,r1[0x2]
8000306c:	80 00       	ld.sh	r0,r0[0x0]
8000306e:	3a 72       	mov	r2,-89
80003070:	00 00       	add	r0,r0
80003072:	00 84       	andn	r4,r0
80003074:	80 00       	ld.sh	r0,r0[0x0]
80003076:	29 e0       	sub	r0,-98
80003078:	80 00       	ld.sh	r0,r0[0x0]
8000307a:	3b 56       	mov	r6,-75
8000307c:	80 00       	ld.sh	r0,r0[0x0]
8000307e:	3b 72       	mov	r2,-73

80003080 <sd_mmc_spi_internal_init>:
80003080:	d4 31       	pushm	r0-r7,lr
80003082:	fe fb 02 66 	ld.w	r11,pc[614]
80003086:	e6 68 1a 80 	mov	r8,400000
8000308a:	97 18       	st.w	r11[0x4],r8
8000308c:	fe f8 02 60 	ld.w	r8,pc[608]
80003090:	70 0a       	ld.w	r10,r8[0x0]
80003092:	fe 7c 24 00 	mov	r12,-56320
80003096:	f0 1f 00 97 	mcall	800032f0 <sd_mmc_spi_internal_init+0x270>
8000309a:	30 1b       	mov	r11,1
8000309c:	fe 7c 24 00 	mov	r12,-56320
800030a0:	f0 1f 00 95 	mcall	800032f4 <sd_mmc_spi_internal_init+0x274>
800030a4:	30 07       	mov	r7,0
800030a6:	e0 66 00 ff 	mov	r6,255
800030aa:	fe 75 24 00 	mov	r5,-56320
800030ae:	0c 9b       	mov	r11,r6
800030b0:	0a 9c       	mov	r12,r5
800030b2:	f0 1f 00 92 	mcall	800032f8 <sd_mmc_spi_internal_init+0x278>
800030b6:	2f f7       	sub	r7,-1
800030b8:	58 a7       	cp.w	r7,10
800030ba:	cf a1       	brne	800030ae <sd_mmc_spi_internal_init+0x2e>
800030bc:	30 1b       	mov	r11,1
800030be:	fe 7c 24 00 	mov	r12,-56320
800030c2:	f0 1f 00 8f 	mcall	800032fc <sd_mmc_spi_internal_init+0x27c>
800030c6:	30 08       	mov	r8,0
800030c8:	fe f9 02 38 	ld.w	r9,pc[568]
800030cc:	b2 88       	st.b	r9[0x0],r8
800030ce:	fe f9 02 36 	ld.w	r9,pc[566]
800030d2:	b2 88       	st.b	r9[0x0],r8
800030d4:	30 0b       	mov	r11,0
800030d6:	16 9c       	mov	r12,r11
800030d8:	f0 1f 00 8c 	mcall	80003308 <sd_mmc_spi_internal_init+0x288>
800030dc:	fe f8 02 30 	ld.w	r8,pc[560]
800030e0:	b0 8c       	st.b	r8[0x0],r12
800030e2:	e0 6b 00 ff 	mov	r11,255
800030e6:	fe 7c 24 00 	mov	r12,-56320
800030ea:	f0 1f 00 84 	mcall	800032f8 <sd_mmc_spi_internal_init+0x278>
800030ee:	30 17       	mov	r7,1
800030f0:	fe f6 02 1c 	ld.w	r6,pc[540]
800030f4:	30 15       	mov	r5,1
800030f6:	30 03       	mov	r3,0
800030f8:	e0 62 00 ff 	mov	r2,255
800030fc:	fe 71 24 00 	mov	r1,-56320
80003100:	36 54       	mov	r4,101
80003102:	c1 08       	rjmp	80003122 <sd_mmc_spi_internal_init+0xa2>
80003104:	06 9b       	mov	r11,r3
80003106:	06 9c       	mov	r12,r3
80003108:	f0 1f 00 80 	mcall	80003308 <sd_mmc_spi_internal_init+0x288>
8000310c:	ac 8c       	st.b	r6[0x0],r12
8000310e:	04 9b       	mov	r11,r2
80003110:	02 9c       	mov	r12,r1
80003112:	f0 1f 00 7a 	mcall	800032f8 <sd_mmc_spi_internal_init+0x278>
80003116:	2f f7       	sub	r7,-1
80003118:	5c 87       	casts.h	r7
8000311a:	e8 07 19 00 	cp.h	r7,r4
8000311e:	e0 80 00 e4 	breq	800032e6 <sd_mmc_spi_internal_init+0x266>
80003122:	0d 88       	ld.ub	r8,r6[0x0]
80003124:	ea 08 18 00 	cp.b	r8,r5
80003128:	ce e1       	brne	80003104 <sd_mmc_spi_internal_init+0x84>
8000312a:	f0 1f 00 7a 	mcall	80003310 <sd_mmc_spi_internal_init+0x290>
8000312e:	5b fc       	cp.w	r12,-1
80003130:	e0 80 00 db 	breq	800032e6 <sd_mmc_spi_internal_init+0x266>
80003134:	58 1c       	cp.w	r12,1
80003136:	c0 51       	brne	80003140 <sd_mmc_spi_internal_init+0xc0>
80003138:	30 29       	mov	r9,2
8000313a:	4f 38       	lddpc	r8,80003304 <sd_mmc_spi_internal_init+0x284>
8000313c:	b0 89       	st.b	r8[0x0],r9
8000313e:	c4 c8       	rjmp	800031d6 <sd_mmc_spi_internal_init+0x156>
80003140:	30 0b       	mov	r11,0
80003142:	33 7c       	mov	r12,55
80003144:	f0 1f 00 71 	mcall	80003308 <sd_mmc_spi_internal_init+0x288>
80003148:	4f 17       	lddpc	r7,8000330c <sd_mmc_spi_internal_init+0x28c>
8000314a:	ae 8c       	st.b	r7[0x0],r12
8000314c:	e0 6b 00 ff 	mov	r11,255
80003150:	fe 7c 24 00 	mov	r12,-56320
80003154:	f0 1f 00 69 	mcall	800032f8 <sd_mmc_spi_internal_init+0x278>
80003158:	30 0b       	mov	r11,0
8000315a:	32 9c       	mov	r12,41
8000315c:	f0 1f 00 6b 	mcall	80003308 <sd_mmc_spi_internal_init+0x288>
80003160:	ae 8c       	st.b	r7[0x0],r12
80003162:	e0 6b 00 ff 	mov	r11,255
80003166:	fe 7c 24 00 	mov	r12,-56320
8000316a:	f0 1f 00 64 	mcall	800032f8 <sd_mmc_spi_internal_init+0x278>
8000316e:	0f 88       	ld.ub	r8,r7[0x0]
80003170:	e2 18 00 fe 	andl	r8,0xfe,COH
80003174:	c0 51       	brne	8000317e <sd_mmc_spi_internal_init+0xfe>
80003176:	30 19       	mov	r9,1
80003178:	4e 38       	lddpc	r8,80003304 <sd_mmc_spi_internal_init+0x284>
8000317a:	b0 89       	st.b	r8[0x0],r9
8000317c:	c2 d8       	rjmp	800031d6 <sd_mmc_spi_internal_init+0x156>
8000317e:	30 09       	mov	r9,0
80003180:	4e 18       	lddpc	r8,80003304 <sd_mmc_spi_internal_init+0x284>
80003182:	b0 89       	st.b	r8[0x0],r9
80003184:	30 0b       	mov	r11,0
80003186:	16 9c       	mov	r12,r11
80003188:	f0 1f 00 60 	mcall	80003308 <sd_mmc_spi_internal_init+0x288>
8000318c:	4e 08       	lddpc	r8,8000330c <sd_mmc_spi_internal_init+0x28c>
8000318e:	b0 8c       	st.b	r8[0x0],r12
80003190:	e0 6b 00 ff 	mov	r11,255
80003194:	fe 7c 24 00 	mov	r12,-56320
80003198:	f0 1f 00 58 	mcall	800032f8 <sd_mmc_spi_internal_init+0x278>
8000319c:	30 17       	mov	r7,1
8000319e:	4d c6       	lddpc	r6,8000330c <sd_mmc_spi_internal_init+0x28c>
800031a0:	30 15       	mov	r5,1
800031a2:	30 03       	mov	r3,0
800031a4:	e0 62 00 ff 	mov	r2,255
800031a8:	fe 71 24 00 	mov	r1,-56320
800031ac:	36 54       	mov	r4,101
800031ae:	c1 08       	rjmp	800031ce <sd_mmc_spi_internal_init+0x14e>
800031b0:	06 9b       	mov	r11,r3
800031b2:	06 9c       	mov	r12,r3
800031b4:	f0 1f 00 55 	mcall	80003308 <sd_mmc_spi_internal_init+0x288>
800031b8:	ac 8c       	st.b	r6[0x0],r12
800031ba:	04 9b       	mov	r11,r2
800031bc:	02 9c       	mov	r12,r1
800031be:	f0 1f 00 4f 	mcall	800032f8 <sd_mmc_spi_internal_init+0x278>
800031c2:	2f f7       	sub	r7,-1
800031c4:	5c 87       	casts.h	r7
800031c6:	e8 07 19 00 	cp.h	r7,r4
800031ca:	e0 80 00 8e 	breq	800032e6 <sd_mmc_spi_internal_init+0x266>
800031ce:	0d 88       	ld.ub	r8,r6[0x0]
800031d0:	ea 08 18 00 	cp.b	r8,r5
800031d4:	ce e1       	brne	800031b0 <sd_mmc_spi_internal_init+0x130>
800031d6:	30 07       	mov	r7,0
800031d8:	4c b4       	lddpc	r4,80003304 <sd_mmc_spi_internal_init+0x284>
800031da:	30 15       	mov	r5,1
800031dc:	0e 93       	mov	r3,r7
800031de:	33 70       	mov	r0,55
800031e0:	4c b6       	lddpc	r6,8000330c <sd_mmc_spi_internal_init+0x28c>
800031e2:	e0 62 00 ff 	mov	r2,255
800031e6:	fe 71 24 00 	mov	r1,-56320
800031ea:	09 88       	ld.ub	r8,r4[0x0]
800031ec:	ea 08 18 00 	cp.b	r8,r5
800031f0:	c1 10       	breq	80003212 <sd_mmc_spi_internal_init+0x192>
800031f2:	c0 63       	brcs	800031fe <sd_mmc_spi_internal_init+0x17e>
800031f4:	30 29       	mov	r9,2
800031f6:	f2 08 18 00 	cp.b	r8,r9
800031fa:	c2 81       	brne	8000324a <sd_mmc_spi_internal_init+0x1ca>
800031fc:	c1 98       	rjmp	8000322e <sd_mmc_spi_internal_init+0x1ae>
800031fe:	06 9b       	mov	r11,r3
80003200:	30 1c       	mov	r12,1
80003202:	f0 1f 00 42 	mcall	80003308 <sd_mmc_spi_internal_init+0x288>
80003206:	ac 8c       	st.b	r6[0x0],r12
80003208:	04 9b       	mov	r11,r2
8000320a:	02 9c       	mov	r12,r1
8000320c:	f0 1f 00 3b 	mcall	800032f8 <sd_mmc_spi_internal_init+0x278>
80003210:	c1 d8       	rjmp	8000324a <sd_mmc_spi_internal_init+0x1ca>
80003212:	06 9b       	mov	r11,r3
80003214:	00 9c       	mov	r12,r0
80003216:	f0 1f 00 3d 	mcall	80003308 <sd_mmc_spi_internal_init+0x288>
8000321a:	06 9b       	mov	r11,r3
8000321c:	32 9c       	mov	r12,41
8000321e:	f0 1f 00 3b 	mcall	80003308 <sd_mmc_spi_internal_init+0x288>
80003222:	ac 8c       	st.b	r6[0x0],r12
80003224:	04 9b       	mov	r11,r2
80003226:	02 9c       	mov	r12,r1
80003228:	f0 1f 00 34 	mcall	800032f8 <sd_mmc_spi_internal_init+0x278>
8000322c:	c0 f8       	rjmp	8000324a <sd_mmc_spi_internal_init+0x1ca>
8000322e:	06 9b       	mov	r11,r3
80003230:	00 9c       	mov	r12,r0
80003232:	f0 1f 00 36 	mcall	80003308 <sd_mmc_spi_internal_init+0x288>
80003236:	fc 1b 40 00 	movh	r11,0x4000
8000323a:	32 9c       	mov	r12,41
8000323c:	f0 1f 00 33 	mcall	80003308 <sd_mmc_spi_internal_init+0x288>
80003240:	ac 8c       	st.b	r6[0x0],r12
80003242:	04 9b       	mov	r11,r2
80003244:	02 9c       	mov	r12,r1
80003246:	f0 1f 00 2d 	mcall	800032f8 <sd_mmc_spi_internal_init+0x278>
8000324a:	2f f7       	sub	r7,-1
8000324c:	5c 87       	casts.h	r7
8000324e:	fe 78 c3 50 	mov	r8,-15536
80003252:	f0 07 19 00 	cp.h	r7,r8
80003256:	c4 80       	breq	800032e6 <sd_mmc_spi_internal_init+0x266>
80003258:	0d 89       	ld.ub	r9,r6[0x0]
8000325a:	30 08       	mov	r8,0
8000325c:	f0 09 18 00 	cp.b	r9,r8
80003260:	cc 51       	brne	800031ea <sd_mmc_spi_internal_init+0x16a>
80003262:	4a 98       	lddpc	r8,80003304 <sd_mmc_spi_internal_init+0x284>
80003264:	11 89       	ld.ub	r9,r8[0x0]
80003266:	30 28       	mov	r8,2
80003268:	f0 09 18 00 	cp.b	r9,r8
8000326c:	c0 a1       	brne	80003280 <sd_mmc_spi_internal_init+0x200>
8000326e:	f0 1f 00 2a 	mcall	80003314 <sd_mmc_spi_internal_init+0x294>
80003272:	5b fc       	cp.w	r12,-1
80003274:	c3 90       	breq	800032e6 <sd_mmc_spi_internal_init+0x266>
80003276:	58 1c       	cp.w	r12,1
80003278:	c0 41       	brne	80003280 <sd_mmc_spi_internal_init+0x200>
8000327a:	30 39       	mov	r9,3
8000327c:	4a 28       	lddpc	r8,80003304 <sd_mmc_spi_internal_init+0x284>
8000327e:	b0 89       	st.b	r8[0x0],r9
80003280:	30 0b       	mov	r11,0
80003282:	33 bc       	mov	r12,59
80003284:	f0 1f 00 21 	mcall	80003308 <sd_mmc_spi_internal_init+0x288>
80003288:	4a 17       	lddpc	r7,8000330c <sd_mmc_spi_internal_init+0x28c>
8000328a:	ae 8c       	st.b	r7[0x0],r12
8000328c:	e0 6b 00 ff 	mov	r11,255
80003290:	fe 7c 24 00 	mov	r12,-56320
80003294:	f0 1f 00 19 	mcall	800032f8 <sd_mmc_spi_internal_init+0x278>
80003298:	e0 6b 02 00 	mov	r11,512
8000329c:	31 0c       	mov	r12,16
8000329e:	f0 1f 00 1b 	mcall	80003308 <sd_mmc_spi_internal_init+0x288>
800032a2:	ae 8c       	st.b	r7[0x0],r12
800032a4:	e0 6b 00 ff 	mov	r11,255
800032a8:	fe 7c 24 00 	mov	r12,-56320
800032ac:	f0 1f 00 13 	mcall	800032f8 <sd_mmc_spi_internal_init+0x278>
800032b0:	0f 89       	ld.ub	r9,r7[0x0]
800032b2:	30 08       	mov	r8,0
800032b4:	f0 09 18 00 	cp.b	r9,r8
800032b8:	c1 71       	brne	800032e6 <sd_mmc_spi_internal_init+0x266>
800032ba:	49 8c       	lddpc	r12,80003318 <sd_mmc_spi_internal_init+0x298>
800032bc:	f0 1f 00 18 	mcall	8000331c <sd_mmc_spi_internal_init+0x29c>
800032c0:	c1 30       	breq	800032e6 <sd_mmc_spi_internal_init+0x266>
800032c2:	f0 1f 00 18 	mcall	80003320 <sd_mmc_spi_internal_init+0x2a0>
800032c6:	30 19       	mov	r9,1
800032c8:	48 e8       	lddpc	r8,80003300 <sd_mmc_spi_internal_init+0x280>
800032ca:	b0 89       	st.b	r8[0x0],r9
800032cc:	48 7b       	lddpc	r11,800032e8 <sd_mmc_spi_internal_init+0x268>
800032ce:	e0 68 1b 00 	mov	r8,6912
800032d2:	ea 18 00 b7 	orh	r8,0xb7
800032d6:	97 18       	st.w	r11[0x4],r8
800032d8:	48 58       	lddpc	r8,800032ec <sd_mmc_spi_internal_init+0x26c>
800032da:	70 0a       	ld.w	r10,r8[0x0]
800032dc:	fe 7c 24 00 	mov	r12,-56320
800032e0:	f0 1f 00 04 	mcall	800032f0 <sd_mmc_spi_internal_init+0x270>
800032e4:	da 3a       	popm	r0-r7,pc,r12=1
800032e6:	d8 3a       	popm	r0-r7,pc,r12=0
800032e8:	00 00       	add	r0,r0
800032ea:	00 70       	tst	r0,r0
800032ec:	00 00       	add	r0,r0
800032ee:	00 80       	andn	r0,r0
800032f0:	80 00       	ld.sh	r0,r0[0x0]
800032f2:	3a 98       	mov	r8,-87
800032f4:	80 00       	ld.sh	r0,r0[0x0]
800032f6:	3a 26       	mov	r6,-94
800032f8:	80 00       	ld.sh	r0,r0[0x0]
800032fa:	3b 56       	mov	r6,-75
800032fc:	80 00       	ld.sh	r0,r0[0x0]
800032fe:	3a 72       	mov	r2,-89
80003300:	00 00       	add	r0,r0
80003302:	00 84       	andn	r4,r0
80003304:	00 00       	add	r0,r0
80003306:	03 9a       	ld.ub	r10,r1[0x1]
80003308:	80 00       	ld.sh	r0,r0[0x0]
8000330a:	2b 50       	sub	r0,-75
8000330c:	00 00       	add	r0,r0
8000330e:	03 ac       	ld.ub	r12,r1[0x2]
80003310:	80 00       	ld.sh	r0,r0[0x0]
80003312:	2e d4       	sub	r4,-19
80003314:	80 00       	ld.sh	r0,r0[0x0]
80003316:	2e 48       	sub	r8,-28
80003318:	00 00       	add	r0,r0
8000331a:	03 9c       	ld.ub	r12,r1[0x1]
8000331c:	80 00       	ld.sh	r0,r0[0x0]
8000331e:	2f 8c       	sub	r12,-8
80003320:	80 00       	ld.sh	r0,r0[0x0]
80003322:	28 78       	sub	r8,-121

80003324 <sd_mmc_spi_mem_check>:
80003324:	d4 01       	pushm	lr
80003326:	f0 1f 00 07 	mcall	80003340 <sd_mmc_spi_mem_check+0x1c>
8000332a:	c0 a0       	breq	8000333e <sd_mmc_spi_mem_check+0x1a>
8000332c:	48 68       	lddpc	r8,80003344 <sd_mmc_spi_mem_check+0x20>
8000332e:	11 89       	ld.ub	r9,r8[0x0]
80003330:	30 08       	mov	r8,0
80003332:	f0 09 18 00 	cp.b	r9,r8
80003336:	c0 20       	breq	8000333a <sd_mmc_spi_mem_check+0x16>
80003338:	da 0a       	popm	pc,r12=1
8000333a:	f0 1f 00 04 	mcall	80003348 <sd_mmc_spi_mem_check+0x24>
8000333e:	d8 02       	popm	pc
80003340:	80 00       	ld.sh	r0,r0[0x0]
80003342:	2b 90       	sub	r0,-71
80003344:	00 00       	add	r0,r0
80003346:	00 84       	andn	r4,r0
80003348:	80 00       	ld.sh	r0,r0[0x0]
8000334a:	30 80       	mov	r0,8

8000334c <sd_mmc_spi_init>:
8000334c:	eb cd 40 10 	pushm	r4,lr
80003350:	fa c4 ff f8 	sub	r4,sp,-8
80003354:	48 88       	lddpc	r8,80003374 <sd_mmc_spi_init+0x28>
80003356:	91 0c       	st.w	r8[0x0],r12
80003358:	48 88       	lddpc	r8,80003378 <sd_mmc_spi_init+0x2c>
8000335a:	e8 ea 00 00 	ld.d	r10,r4[0]
8000335e:	f0 eb 00 00 	st.d	r8[0],r10
80003362:	e8 ea 00 08 	ld.d	r10,r4[8]
80003366:	f0 eb 00 08 	st.d	r8[8],r10
8000336a:	f0 1f 00 05 	mcall	8000337c <sd_mmc_spi_init+0x30>
8000336e:	e3 cd 80 10 	ldm	sp++,r4,pc
80003372:	00 00       	add	r0,r0
80003374:	00 00       	add	r0,r0
80003376:	00 80       	andn	r0,r0
80003378:	00 00       	add	r0,r0
8000337a:	00 70       	tst	r0,r0
8000337c:	80 00       	ld.sh	r0,r0[0x0]
8000337e:	30 80       	mov	r0,8

80003380 <smc_init>:
80003380:	eb cd 40 fc 	pushm	r2-r7,lr
80003384:	ee 78 42 3f 	mov	r8,999999
80003388:	f8 08 00 09 	add	r9,r12,r8
8000338c:	e0 68 de 83 	mov	r8,56963
80003390:	ea 18 43 1b 	orh	r8,0x431b
80003394:	f2 08 06 48 	mulu.d	r8,r9,r8
80003398:	f2 08 16 12 	lsr	r8,r9,0x12
8000339c:	f0 08 00 25 	add	r5,r8,r8<<0x2
800033a0:	a3 65       	lsl	r5,0x2
800033a2:	ea c5 fc 19 	sub	r5,r5,-999
800033a6:	e0 69 4d d3 	mov	r9,19923
800033aa:	ea 19 10 62 	orh	r9,0x1062
800033ae:	ea 09 06 44 	mulu.d	r4,r5,r9
800033b2:	a7 85       	lsr	r5,0x6
800033b4:	f0 0a 15 04 	lsl	r10,r8,0x4
800033b8:	f4 08 01 07 	sub	r7,r10,r8
800033bc:	a1 77       	lsl	r7,0x1
800033be:	ee c7 fc 19 	sub	r7,r7,-999
800033c2:	ee 09 06 46 	mulu.d	r6,r7,r9
800033c6:	0e 94       	mov	r4,r7
800033c8:	a7 84       	lsr	r4,0x6
800033ca:	f4 08 01 07 	sub	r7,r10,r8
800033ce:	a3 67       	lsl	r7,0x2
800033d0:	ee c7 fc 19 	sub	r7,r7,-999
800033d4:	ee 09 06 46 	mulu.d	r6,r7,r9
800033d8:	a7 87       	lsr	r7,0x6
800033da:	f0 03 10 5a 	mul	r3,r8,90
800033de:	e6 c3 fc 19 	sub	r3,r3,-999
800033e2:	e6 09 06 42 	mulu.d	r2,r3,r9
800033e6:	e6 0c 16 06 	lsr	r12,r3,0x6
800033ea:	e0 63 00 d2 	mov	r3,210
800033ee:	f0 03 02 43 	mul	r3,r8,r3
800033f2:	e6 c3 fc 19 	sub	r3,r3,-999
800033f6:	e6 09 06 42 	mulu.d	r2,r3,r9
800033fa:	e6 06 16 06 	lsr	r6,r3,0x6
800033fe:	f4 08 01 0b 	sub	r11,r10,r8
80003402:	a5 6b       	lsl	r11,0x4
80003404:	f6 cb fc 19 	sub	r11,r11,-999
80003408:	f6 09 06 4a 	mulu.d	r10,r11,r9
8000340c:	f6 0e 16 06 	lsr	lr,r11,0x6
80003410:	f0 03 10 64 	mul	r3,r8,100
80003414:	e6 c3 fc 19 	sub	r3,r3,-999
80003418:	e6 09 06 42 	mulu.d	r2,r3,r9
8000341c:	a7 83       	lsr	r3,0x6
8000341e:	e0 6a 01 0e 	mov	r10,270
80003422:	b5 38       	mul	r8,r10
80003424:	f0 c8 fc 19 	sub	r8,r8,-999
80003428:	f0 09 06 48 	mulu.d	r8,r8,r9
8000342c:	a7 89       	lsr	r9,0x6
8000342e:	ec 04 00 0a 	add	r10,r6,r4
80003432:	1c 3a       	cp.w	r10,lr
80003434:	f4 0e 17 20 	movhs	lr,r10
80003438:	ee 05 00 0b 	add	r11,r7,r5
8000343c:	18 3b       	cp.w	r11,r12
8000343e:	f6 0c 17 20 	movhs	r12,r11
80003442:	06 3b       	cp.w	r11,r3
80003444:	e6 0b 17 30 	movlo	r11,r3
80003448:	12 3a       	cp.w	r10,r9
8000344a:	f4 09 17 20 	movhs	r9,r10
8000344e:	eb e4 11 05 	or	r5,r5,r4<<0x10
80003452:	fe 6a 1c 00 	mov	r10,-123904
80003456:	95 05       	st.w	r10[0x0],r5
80003458:	ef e6 11 07 	or	r7,r7,r6<<0x10
8000345c:	ef ec 10 87 	or	r7,r7,r12<<0x8
80003460:	ef ee 11 87 	or	r7,r7,lr<<0x18
80003464:	95 17       	st.w	r10[0x4],r7
80003466:	1c 39       	cp.w	r9,lr
80003468:	f2 0e 17 20 	movhs	lr,r9
8000346c:	18 3b       	cp.w	r11,r12
8000346e:	f8 0b 17 30 	movlo	r11,r12
80003472:	f7 ee 11 0b 	or	r11,r11,lr<<0x10
80003476:	95 2b       	st.w	r10[0x8],r11
80003478:	e0 68 10 03 	mov	r8,4099
8000347c:	95 38       	st.w	r10[0xc],r8
8000347e:	30 19       	mov	r9,1
80003480:	48 48       	lddpc	r8,80003490 <smc_init+0x110>
80003482:	b0 89       	st.b	r8[0x0],r9
80003484:	31 4b       	mov	r11,20
80003486:	48 4c       	lddpc	r12,80003494 <smc_init+0x114>
80003488:	f0 1f 00 04 	mcall	80003498 <smc_init+0x118>
8000348c:	e3 cd 80 fc 	ldm	sp++,r2-r7,pc
80003490:	00 00       	add	r0,r0
80003492:	00 88       	andn	r8,r0
80003494:	80 00       	ld.sh	r0,r0[0x0]
80003496:	4f 08       	lddpc	r8,80003654 <INTC_register_interrupt+0x58>
80003498:	80 00       	ld.sh	r0,r0[0x0]
8000349a:	34 f0       	mov	r0,79

8000349c <gpio_enable_module_pin>:
8000349c:	f8 08 16 05 	lsr	r8,r12,0x5
800034a0:	a9 68       	lsl	r8,0x8
800034a2:	e0 28 f0 00 	sub	r8,61440
800034a6:	58 1b       	cp.w	r11,1
800034a8:	c0 d0       	breq	800034c2 <gpio_enable_module_pin+0x26>
800034aa:	c0 63       	brcs	800034b6 <gpio_enable_module_pin+0x1a>
800034ac:	58 2b       	cp.w	r11,2
800034ae:	c1 00       	breq	800034ce <gpio_enable_module_pin+0x32>
800034b0:	58 3b       	cp.w	r11,3
800034b2:	c1 40       	breq	800034da <gpio_enable_module_pin+0x3e>
800034b4:	5e ff       	retal	1
800034b6:	30 19       	mov	r9,1
800034b8:	f2 0c 09 49 	lsl	r9,r9,r12
800034bc:	91 69       	st.w	r8[0x18],r9
800034be:	91 a9       	st.w	r8[0x28],r9
800034c0:	c1 28       	rjmp	800034e4 <gpio_enable_module_pin+0x48>
800034c2:	30 19       	mov	r9,1
800034c4:	f2 0c 09 49 	lsl	r9,r9,r12
800034c8:	91 59       	st.w	r8[0x14],r9
800034ca:	91 a9       	st.w	r8[0x28],r9
800034cc:	c0 c8       	rjmp	800034e4 <gpio_enable_module_pin+0x48>
800034ce:	30 19       	mov	r9,1
800034d0:	f2 0c 09 49 	lsl	r9,r9,r12
800034d4:	91 69       	st.w	r8[0x18],r9
800034d6:	91 99       	st.w	r8[0x24],r9
800034d8:	c0 68       	rjmp	800034e4 <gpio_enable_module_pin+0x48>
800034da:	30 19       	mov	r9,1
800034dc:	f2 0c 09 49 	lsl	r9,r9,r12
800034e0:	91 59       	st.w	r8[0x14],r9
800034e2:	91 99       	st.w	r8[0x24],r9
800034e4:	30 19       	mov	r9,1
800034e6:	f2 0c 09 4c 	lsl	r12,r9,r12
800034ea:	91 2c       	st.w	r8[0x8],r12
800034ec:	5e fd       	retal	0
800034ee:	d7 03       	nop

800034f0 <gpio_enable_module>:
800034f0:	d4 21       	pushm	r4-r7,lr
800034f2:	18 97       	mov	r7,r12
800034f4:	16 94       	mov	r4,r11
800034f6:	58 0b       	cp.w	r11,0
800034f8:	c0 31       	brne	800034fe <gpio_enable_module+0xe>
800034fa:	30 05       	mov	r5,0
800034fc:	c0 d8       	rjmp	80003516 <gpio_enable_module+0x26>
800034fe:	30 06       	mov	r6,0
80003500:	0c 95       	mov	r5,r6
80003502:	6e 1b       	ld.w	r11,r7[0x4]
80003504:	6e 0c       	ld.w	r12,r7[0x0]
80003506:	f0 1f 00 06 	mcall	8000351c <gpio_enable_module+0x2c>
8000350a:	18 45       	or	r5,r12
8000350c:	2f 87       	sub	r7,-8
8000350e:	2f f6       	sub	r6,-1
80003510:	0c 34       	cp.w	r4,r6
80003512:	fe 9b ff f8 	brhi	80003502 <gpio_enable_module+0x12>
80003516:	0a 9c       	mov	r12,r5
80003518:	d8 22       	popm	r4-r7,pc
8000351a:	00 00       	add	r0,r0
8000351c:	80 00       	ld.sh	r0,r0[0x0]
8000351e:	34 9c       	mov	r12,73

80003520 <gpio_enable_gpio_pin>:
80003520:	f8 08 16 05 	lsr	r8,r12,0x5
80003524:	a9 68       	lsl	r8,0x8
80003526:	e0 28 f0 00 	sub	r8,61440
8000352a:	30 19       	mov	r9,1
8000352c:	f2 0c 09 4c 	lsl	r12,r9,r12
80003530:	f1 4c 00 48 	st.w	r8[72],r12
80003534:	91 1c       	st.w	r8[0x4],r12
80003536:	5e fc       	retal	r12

80003538 <gpio_enable_pin_pull_up>:
80003538:	f8 08 16 05 	lsr	r8,r12,0x5
8000353c:	a9 68       	lsl	r8,0x8
8000353e:	e0 28 f0 00 	sub	r8,61440
80003542:	30 19       	mov	r9,1
80003544:	f2 0c 09 4c 	lsl	r12,r9,r12
80003548:	f1 4c 00 74 	st.w	r8[116],r12
8000354c:	5e fc       	retal	r12

8000354e <gpio_set_gpio_pin>:
8000354e:	f8 08 16 05 	lsr	r8,r12,0x5
80003552:	a9 68       	lsl	r8,0x8
80003554:	e0 28 f0 00 	sub	r8,61440
80003558:	30 19       	mov	r9,1
8000355a:	f2 0c 09 4c 	lsl	r12,r9,r12
8000355e:	f1 4c 00 54 	st.w	r8[84],r12
80003562:	f1 4c 00 44 	st.w	r8[68],r12
80003566:	91 1c       	st.w	r8[0x4],r12
80003568:	5e fc       	retal	r12

8000356a <gpio_clr_gpio_pin>:
8000356a:	f8 08 16 05 	lsr	r8,r12,0x5
8000356e:	a9 68       	lsl	r8,0x8
80003570:	e0 28 f0 00 	sub	r8,61440
80003574:	30 19       	mov	r9,1
80003576:	f2 0c 09 4c 	lsl	r12,r9,r12
8000357a:	f1 4c 00 58 	st.w	r8[88],r12
8000357e:	f1 4c 00 44 	st.w	r8[68],r12
80003582:	91 1c       	st.w	r8[0x4],r12
80003584:	5e fc       	retal	r12

80003586 <gpio_enable_pin_interrupt>:
80003586:	f8 08 16 05 	lsr	r8,r12,0x5
8000358a:	a9 68       	lsl	r8,0x8
8000358c:	e0 28 f0 00 	sub	r8,61440
80003590:	30 19       	mov	r9,1
80003592:	f2 0c 09 4c 	lsl	r12,r9,r12
80003596:	f1 4c 00 c4 	st.w	r8[196],r12
8000359a:	12 3b       	cp.w	r11,r9
8000359c:	c0 a0       	breq	800035b0 <gpio_enable_pin_interrupt+0x2a>
8000359e:	c0 43       	brcs	800035a6 <gpio_enable_pin_interrupt+0x20>
800035a0:	58 2b       	cp.w	r11,2
800035a2:	c1 11       	brne	800035c4 <gpio_enable_pin_interrupt+0x3e>
800035a4:	c0 b8       	rjmp	800035ba <gpio_enable_pin_interrupt+0x34>
800035a6:	f1 4c 00 a8 	st.w	r8[168],r12
800035aa:	f1 4c 00 b8 	st.w	r8[184],r12
800035ae:	c0 c8       	rjmp	800035c6 <gpio_enable_pin_interrupt+0x40>
800035b0:	f1 4c 00 a4 	st.w	r8[164],r12
800035b4:	f1 4c 00 b8 	st.w	r8[184],r12
800035b8:	c0 78       	rjmp	800035c6 <gpio_enable_pin_interrupt+0x40>
800035ba:	f1 4c 00 a8 	st.w	r8[168],r12
800035be:	f1 4c 00 b4 	st.w	r8[180],r12
800035c2:	c0 28       	rjmp	800035c6 <gpio_enable_pin_interrupt+0x40>
800035c4:	5e ff       	retal	1
800035c6:	f1 4c 00 94 	st.w	r8[148],r12
800035ca:	5e fd       	retal	0

800035cc <gpio_get_pin_interrupt_flag>:
800035cc:	f8 08 16 05 	lsr	r8,r12,0x5
800035d0:	a9 68       	lsl	r8,0x8
800035d2:	e0 28 f0 00 	sub	r8,61440
800035d6:	f0 f8 00 d0 	ld.w	r8,r8[208]
800035da:	f0 0c 0a 4c 	lsr	r12,r8,r12
800035de:	f9 dc c0 01 	bfextu	r12,r12,0x0,0x1
800035e2:	5e fc       	retal	r12

800035e4 <gpio_clear_pin_interrupt_flag>:
800035e4:	f8 08 16 05 	lsr	r8,r12,0x5
800035e8:	a9 68       	lsl	r8,0x8
800035ea:	e0 28 f0 00 	sub	r8,61440
800035ee:	30 19       	mov	r9,1
800035f0:	f2 0c 09 4c 	lsl	r12,r9,r12
800035f4:	f1 4c 00 d8 	st.w	r8[216],r12
800035f8:	5e fc       	retal	r12

800035fa <_unhandled_interrupt>:
800035fa:	c0 08       	rjmp	800035fa <_unhandled_interrupt>

800035fc <INTC_register_interrupt>:
800035fc:	f6 08 16 05 	lsr	r8,r11,0x5
80003600:	49 99       	lddpc	r9,80003664 <INTC_register_interrupt+0x68>
80003602:	f2 08 00 39 	add	r9,r9,r8<<0x3
80003606:	f7 db c0 05 	bfextu	r11,r11,0x0,0x5
8000360a:	72 19       	ld.w	r9,r9[0x4]
8000360c:	f2 0b 09 2c 	st.w	r9[r11<<0x2],r12
80003610:	58 0a       	cp.w	r10,0
80003612:	c0 91       	brne	80003624 <INTC_register_interrupt+0x28>
80003614:	49 59       	lddpc	r9,80003668 <INTC_register_interrupt+0x6c>
80003616:	49 6a       	lddpc	r10,8000366c <INTC_register_interrupt+0x70>
80003618:	12 1a       	sub	r10,r9
8000361a:	fe 79 08 00 	mov	r9,-63488
8000361e:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
80003622:	5e fc       	retal	r12
80003624:	58 1a       	cp.w	r10,1
80003626:	c0 a1       	brne	8000363a <INTC_register_interrupt+0x3e>
80003628:	49 09       	lddpc	r9,80003668 <INTC_register_interrupt+0x6c>
8000362a:	49 2a       	lddpc	r10,80003670 <INTC_register_interrupt+0x74>
8000362c:	12 1a       	sub	r10,r9
8000362e:	bf aa       	sbr	r10,0x1e
80003630:	fe 79 08 00 	mov	r9,-63488
80003634:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
80003638:	5e fc       	retal	r12
8000363a:	58 2a       	cp.w	r10,2
8000363c:	c0 a1       	brne	80003650 <INTC_register_interrupt+0x54>
8000363e:	48 b9       	lddpc	r9,80003668 <INTC_register_interrupt+0x6c>
80003640:	48 da       	lddpc	r10,80003674 <INTC_register_interrupt+0x78>
80003642:	12 1a       	sub	r10,r9
80003644:	bf ba       	sbr	r10,0x1f
80003646:	fe 79 08 00 	mov	r9,-63488
8000364a:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
8000364e:	5e fc       	retal	r12
80003650:	48 69       	lddpc	r9,80003668 <INTC_register_interrupt+0x6c>
80003652:	48 aa       	lddpc	r10,80003678 <INTC_register_interrupt+0x7c>
80003654:	12 1a       	sub	r10,r9
80003656:	ea 1a c0 00 	orh	r10,0xc000
8000365a:	fe 79 08 00 	mov	r9,-63488
8000365e:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
80003662:	5e fc       	retal	r12
80003664:	80 00       	ld.sh	r0,r0[0x0]
80003666:	4f a8       	lddpc	r8,8000384c <pm_enable_osc0_crystal+0xc>
80003668:	80 00       	ld.sh	r0,r0[0x0]
8000366a:	4a 00       	lddpc	r0,800036e8 <_get_interrupt_handler+0x18>
8000366c:	80 00       	ld.sh	r0,r0[0x0]
8000366e:	4b 04       	lddpc	r4,8000372c <pdca_enable>
80003670:	80 00       	ld.sh	r0,r0[0x0]
80003672:	4b 12       	lddpc	r2,80003734 <pdca_enable+0x8>
80003674:	80 00       	ld.sh	r0,r0[0x0]
80003676:	4b 20       	lddpc	r0,8000373c <pdca_enable_interrupt_transfer_complete>
80003678:	80 00       	ld.sh	r0,r0[0x0]
8000367a:	4b 2e       	lddpc	lr,80003740 <pdca_enable_interrupt_transfer_complete+0x4>

8000367c <INTC_init_interrupts>:
8000367c:	d4 21       	pushm	r4-r7,lr
8000367e:	49 18       	lddpc	r8,800036c0 <INTC_init_interrupts+0x44>
80003680:	e3 b8 00 01 	mtsr	0x4,r8
80003684:	49 0e       	lddpc	lr,800036c4 <INTC_init_interrupts+0x48>
80003686:	30 07       	mov	r7,0
80003688:	0e 94       	mov	r4,r7
8000368a:	49 0c       	lddpc	r12,800036c8 <INTC_init_interrupts+0x4c>
8000368c:	49 05       	lddpc	r5,800036cc <INTC_init_interrupts+0x50>
8000368e:	10 15       	sub	r5,r8
80003690:	fe 76 08 00 	mov	r6,-63488
80003694:	c1 08       	rjmp	800036b4 <INTC_init_interrupts+0x38>
80003696:	08 98       	mov	r8,r4
80003698:	7c 1b       	ld.w	r11,lr[0x4]
8000369a:	7c 0a       	ld.w	r10,lr[0x0]
8000369c:	f6 08 09 2c 	st.w	r11[r8<<0x2],r12
800036a0:	2f f8       	sub	r8,-1
800036a2:	10 3a       	cp.w	r10,r8
800036a4:	fe 9b ff fc 	brhi	8000369c <INTC_init_interrupts+0x20>
800036a8:	ec 07 09 25 	st.w	r6[r7<<0x2],r5
800036ac:	2f f7       	sub	r7,-1
800036ae:	2f 8e       	sub	lr,-8
800036b0:	59 47       	cp.w	r7,20
800036b2:	c0 50       	breq	800036bc <INTC_init_interrupts+0x40>
800036b4:	7c 08       	ld.w	r8,lr[0x0]
800036b6:	58 08       	cp.w	r8,0
800036b8:	ce f1       	brne	80003696 <INTC_init_interrupts+0x1a>
800036ba:	cf 7b       	rjmp	800036a8 <INTC_init_interrupts+0x2c>
800036bc:	d8 22       	popm	r4-r7,pc
800036be:	00 00       	add	r0,r0
800036c0:	80 00       	ld.sh	r0,r0[0x0]
800036c2:	4a 00       	lddpc	r0,80003740 <pdca_enable_interrupt_transfer_complete+0x4>
800036c4:	80 00       	ld.sh	r0,r0[0x0]
800036c6:	4f a8       	lddpc	r8,800038ac <pm_enable_clk0+0x14>
800036c8:	80 00       	ld.sh	r0,r0[0x0]
800036ca:	35 fa       	mov	r10,95
800036cc:	80 00       	ld.sh	r0,r0[0x0]
800036ce:	4b 04       	lddpc	r4,8000378c <pdca_disable_interrupt_transfer_complete+0x18>

800036d0 <_get_interrupt_handler>:
800036d0:	fe 78 08 00 	mov	r8,-63488
800036d4:	e0 69 00 83 	mov	r9,131
800036d8:	f2 0c 01 0c 	sub	r12,r9,r12
800036dc:	f0 0c 03 29 	ld.w	r9,r8[r12<<0x2]
800036e0:	f2 ca ff c0 	sub	r10,r9,-64
800036e4:	f0 0a 03 28 	ld.w	r8,r8[r10<<0x2]
800036e8:	58 08       	cp.w	r8,0
800036ea:	c0 21       	brne	800036ee <_get_interrupt_handler+0x1e>
800036ec:	5e fd       	retal	0
800036ee:	f0 08 12 00 	clz	r8,r8
800036f2:	48 5a       	lddpc	r10,80003704 <_get_interrupt_handler+0x34>
800036f4:	f4 09 00 39 	add	r9,r10,r9<<0x3
800036f8:	f0 08 11 1f 	rsub	r8,r8,31
800036fc:	72 19       	ld.w	r9,r9[0x4]
800036fe:	f2 08 03 2c 	ld.w	r12,r9[r8<<0x2]
80003702:	5e fc       	retal	r12
80003704:	80 00       	ld.sh	r0,r0[0x0]
80003706:	4f a8       	lddpc	r8,800038ec <pwm_channel_init>

80003708 <pdca_get_handler>:
80003708:	30 e8       	mov	r8,14
8000370a:	f0 0c 18 00 	cp.b	r12,r8
8000370e:	e0 88 00 03 	brls	80003714 <pdca_get_handler+0xc>
80003712:	5e fe       	retal	-1
80003714:	a7 6c       	lsl	r12,0x6
80003716:	e0 3c 00 00 	sub	r12,65536
8000371a:	5e fc       	retal	r12

8000371c <pdca_disable>:
8000371c:	d4 01       	pushm	lr
8000371e:	f0 1f 00 03 	mcall	80003728 <pdca_disable+0xc>
80003722:	30 28       	mov	r8,2
80003724:	99 58       	st.w	r12[0x14],r8
80003726:	d8 02       	popm	pc
80003728:	80 00       	ld.sh	r0,r0[0x0]
8000372a:	37 08       	mov	r8,112

8000372c <pdca_enable>:
8000372c:	d4 01       	pushm	lr
8000372e:	f0 1f 00 03 	mcall	80003738 <pdca_enable+0xc>
80003732:	30 18       	mov	r8,1
80003734:	99 58       	st.w	r12[0x14],r8
80003736:	d8 02       	popm	pc
80003738:	80 00       	ld.sh	r0,r0[0x0]
8000373a:	37 08       	mov	r8,112

8000373c <pdca_enable_interrupt_transfer_complete>:
8000373c:	d4 01       	pushm	lr
8000373e:	f0 1f 00 03 	mcall	80003748 <pdca_enable_interrupt_transfer_complete+0xc>
80003742:	30 28       	mov	r8,2
80003744:	99 88       	st.w	r12[0x20],r8
80003746:	d8 02       	popm	pc
80003748:	80 00       	ld.sh	r0,r0[0x0]
8000374a:	37 08       	mov	r8,112

8000374c <pdca_disable_interrupt_reload_counter_zero>:
8000374c:	d4 01       	pushm	lr
8000374e:	20 1d       	sub	sp,4
80003750:	f0 1f 00 08 	mcall	80003770 <pdca_disable_interrupt_reload_counter_zero+0x24>
80003754:	e1 b8 00 00 	mfsr	r8,0x0
80003758:	50 08       	stdsp	sp[0x0],r8
8000375a:	d3 03       	ssrf	0x10
8000375c:	40 08       	lddsp	r8,sp[0x0]
8000375e:	30 19       	mov	r9,1
80003760:	99 99       	st.w	r12[0x24],r9
80003762:	78 b9       	ld.w	r9,r12[0x2c]
80003764:	e6 18 00 01 	andh	r8,0x1,COH
80003768:	c0 21       	brne	8000376c <pdca_disable_interrupt_reload_counter_zero+0x20>
8000376a:	d5 03       	csrf	0x10
8000376c:	2f fd       	sub	sp,-4
8000376e:	d8 02       	popm	pc
80003770:	80 00       	ld.sh	r0,r0[0x0]
80003772:	37 08       	mov	r8,112

80003774 <pdca_disable_interrupt_transfer_complete>:
80003774:	d4 01       	pushm	lr
80003776:	20 1d       	sub	sp,4
80003778:	f0 1f 00 08 	mcall	80003798 <pdca_disable_interrupt_transfer_complete+0x24>
8000377c:	e1 b8 00 00 	mfsr	r8,0x0
80003780:	50 08       	stdsp	sp[0x0],r8
80003782:	d3 03       	ssrf	0x10
80003784:	40 08       	lddsp	r8,sp[0x0]
80003786:	30 29       	mov	r9,2
80003788:	99 99       	st.w	r12[0x24],r9
8000378a:	78 b9       	ld.w	r9,r12[0x2c]
8000378c:	e6 18 00 01 	andh	r8,0x1,COH
80003790:	c0 21       	brne	80003794 <pdca_disable_interrupt_transfer_complete+0x20>
80003792:	d5 03       	csrf	0x10
80003794:	2f fd       	sub	sp,-4
80003796:	d8 02       	popm	pc
80003798:	80 00       	ld.sh	r0,r0[0x0]
8000379a:	37 08       	mov	r8,112

8000379c <pdca_load_channel>:
8000379c:	eb cd 40 c0 	pushm	r6-r7,lr
800037a0:	20 1d       	sub	sp,4
800037a2:	16 96       	mov	r6,r11
800037a4:	14 97       	mov	r7,r10
800037a6:	f0 1f 00 0b 	mcall	800037d0 <pdca_load_channel+0x34>
800037aa:	e1 b8 00 00 	mfsr	r8,0x0
800037ae:	50 08       	stdsp	sp[0x0],r8
800037b0:	d3 03       	ssrf	0x10
800037b2:	40 08       	lddsp	r8,sp[0x0]
800037b4:	99 06       	st.w	r12[0x0],r6
800037b6:	99 27       	st.w	r12[0x8],r7
800037b8:	e0 69 01 00 	mov	r9,256
800037bc:	99 59       	st.w	r12[0x14],r9
800037be:	78 b9       	ld.w	r9,r12[0x2c]
800037c0:	e6 18 00 01 	andh	r8,0x1,COH
800037c4:	c0 21       	brne	800037c8 <pdca_load_channel+0x2c>
800037c6:	d5 03       	csrf	0x10
800037c8:	2f fd       	sub	sp,-4
800037ca:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800037ce:	00 00       	add	r0,r0
800037d0:	80 00       	ld.sh	r0,r0[0x0]
800037d2:	37 08       	mov	r8,112

800037d4 <pdca_init_channel>:
800037d4:	eb cd 40 e0 	pushm	r5-r7,lr
800037d8:	20 1d       	sub	sp,4
800037da:	18 95       	mov	r5,r12
800037dc:	16 96       	mov	r6,r11
800037de:	f0 1f 00 13 	mcall	80003828 <pdca_init_channel+0x54>
800037e2:	18 97       	mov	r7,r12
800037e4:	0a 9c       	mov	r12,r5
800037e6:	f0 1f 00 12 	mcall	8000382c <pdca_init_channel+0x58>
800037ea:	0a 9c       	mov	r12,r5
800037ec:	f0 1f 00 11 	mcall	80003830 <pdca_init_channel+0x5c>
800037f0:	e1 b8 00 00 	mfsr	r8,0x0
800037f4:	50 08       	stdsp	sp[0x0],r8
800037f6:	d3 03       	ssrf	0x10
800037f8:	40 08       	lddsp	r8,sp[0x0]
800037fa:	6c 09       	ld.w	r9,r6[0x0]
800037fc:	8f 09       	st.w	r7[0x0],r9
800037fe:	6c 19       	ld.w	r9,r6[0x4]
80003800:	8f 29       	st.w	r7[0x8],r9
80003802:	6c 49       	ld.w	r9,r6[0x10]
80003804:	8f 19       	st.w	r7[0x4],r9
80003806:	6c 29       	ld.w	r9,r6[0x8]
80003808:	8f 39       	st.w	r7[0xc],r9
8000380a:	6c 39       	ld.w	r9,r6[0xc]
8000380c:	8f 49       	st.w	r7[0x10],r9
8000380e:	6c 59       	ld.w	r9,r6[0x14]
80003810:	8f 69       	st.w	r7[0x18],r9
80003812:	e0 69 01 00 	mov	r9,256
80003816:	8f 59       	st.w	r7[0x14],r9
80003818:	6e b9       	ld.w	r9,r7[0x2c]
8000381a:	e6 18 00 01 	andh	r8,0x1,COH
8000381e:	c0 21       	brne	80003822 <pdca_init_channel+0x4e>
80003820:	d5 03       	csrf	0x10
80003822:	2f fd       	sub	sp,-4
80003824:	e3 cf 80 e0 	ldm	sp++,r5-r7,pc,r12=0
80003828:	80 00       	ld.sh	r0,r0[0x0]
8000382a:	37 08       	mov	r8,112
8000382c:	80 00       	ld.sh	r0,r0[0x0]
8000382e:	37 74       	mov	r4,119
80003830:	80 00       	ld.sh	r0,r0[0x0]
80003832:	37 4c       	mov	r12,116

80003834 <pm_set_osc0_mode>:
80003834:	78 a8       	ld.w	r8,r12[0x28]
80003836:	f1 db d0 03 	bfins	r8,r11,0x0,0x3
8000383a:	99 a8       	st.w	r12[0x28],r8
8000383c:	5e fc       	retal	r12
8000383e:	d7 03       	nop

80003840 <pm_enable_osc0_crystal>:
80003840:	d4 01       	pushm	lr
80003842:	ec 5b bb 9f 	cp.w	r11,899999
80003846:	e0 8b 00 04 	brhi	8000384e <pm_enable_osc0_crystal+0xe>
8000384a:	30 4b       	mov	r11,4
8000384c:	c1 38       	rjmp	80003872 <pm_enable_osc0_crystal+0x32>
8000384e:	e0 68 c6 bf 	mov	r8,50879
80003852:	ea 18 00 2d 	orh	r8,0x2d
80003856:	10 3b       	cp.w	r11,r8
80003858:	e0 8b 00 04 	brhi	80003860 <pm_enable_osc0_crystal+0x20>
8000385c:	30 5b       	mov	r11,5
8000385e:	c0 a8       	rjmp	80003872 <pm_enable_osc0_crystal+0x32>
80003860:	e0 68 12 00 	mov	r8,4608
80003864:	ea 18 00 7a 	orh	r8,0x7a
80003868:	10 3b       	cp.w	r11,r8
8000386a:	f9 bb 03 06 	movlo	r11,6
8000386e:	f9 bb 02 07 	movhs	r11,7
80003872:	f0 1f 00 02 	mcall	80003878 <pm_enable_osc0_crystal+0x38>
80003876:	d8 02       	popm	pc
80003878:	80 00       	ld.sh	r0,r0[0x0]
8000387a:	38 34       	mov	r4,-125

8000387c <pm_enable_clk0_no_wait>:
8000387c:	78 a8       	ld.w	r8,r12[0x28]
8000387e:	f1 db d1 03 	bfins	r8,r11,0x8,0x3
80003882:	99 a8       	st.w	r12[0x28],r8
80003884:	78 08       	ld.w	r8,r12[0x0]
80003886:	a3 a8       	sbr	r8,0x2
80003888:	99 08       	st.w	r12[0x0],r8
8000388a:	5e fc       	retal	r12

8000388c <pm_wait_for_clk0_ready>:
8000388c:	79 58       	ld.w	r8,r12[0x54]
8000388e:	e2 18 00 80 	andl	r8,0x80,COH
80003892:	cf d0       	breq	8000388c <pm_wait_for_clk0_ready>
80003894:	5e fc       	retal	r12
80003896:	d7 03       	nop

80003898 <pm_enable_clk0>:
80003898:	eb cd 40 80 	pushm	r7,lr
8000389c:	18 97       	mov	r7,r12
8000389e:	f0 1f 00 04 	mcall	800038ac <pm_enable_clk0+0x14>
800038a2:	0e 9c       	mov	r12,r7
800038a4:	f0 1f 00 03 	mcall	800038b0 <pm_enable_clk0+0x18>
800038a8:	e3 cd 80 80 	ldm	sp++,r7,pc
800038ac:	80 00       	ld.sh	r0,r0[0x0]
800038ae:	38 7c       	mov	r12,-121
800038b0:	80 00       	ld.sh	r0,r0[0x0]
800038b2:	38 8c       	mov	r12,-120

800038b4 <pm_switch_to_clock>:
800038b4:	78 08       	ld.w	r8,r12[0x0]
800038b6:	f1 db d0 02 	bfins	r8,r11,0x0,0x2
800038ba:	99 08       	st.w	r12[0x0],r8
800038bc:	5e fc       	retal	r12
800038be:	d7 03       	nop

800038c0 <pm_switch_to_osc0>:
800038c0:	eb cd 40 c0 	pushm	r6-r7,lr
800038c4:	18 97       	mov	r7,r12
800038c6:	14 96       	mov	r6,r10
800038c8:	f0 1f 00 06 	mcall	800038e0 <pm_switch_to_osc0+0x20>
800038cc:	0c 9b       	mov	r11,r6
800038ce:	0e 9c       	mov	r12,r7
800038d0:	f0 1f 00 05 	mcall	800038e4 <pm_switch_to_osc0+0x24>
800038d4:	30 1b       	mov	r11,1
800038d6:	0e 9c       	mov	r12,r7
800038d8:	f0 1f 00 04 	mcall	800038e8 <pm_switch_to_osc0+0x28>
800038dc:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800038e0:	80 00       	ld.sh	r0,r0[0x0]
800038e2:	38 40       	mov	r0,-124
800038e4:	80 00       	ld.sh	r0,r0[0x0]
800038e6:	38 98       	mov	r8,-119
800038e8:	80 00       	ld.sh	r0,r0[0x0]
800038ea:	38 b4       	mov	r4,-117

800038ec <pwm_channel_init>:
800038ec:	58 0b       	cp.w	r11,0
800038ee:	c1 90       	breq	80003920 <pwm_channel_init+0x34>
800038f0:	58 6c       	cp.w	r12,6
800038f2:	e0 8b 00 17 	brhi	80003920 <pwm_channel_init+0x34>
800038f6:	76 0a       	ld.w	r10,r11[0x0]
800038f8:	fe 78 30 00 	mov	r8,-53248
800038fc:	f8 c9 ff f0 	sub	r9,r12,-16
80003900:	a5 79       	lsl	r9,0x5
80003902:	f0 09 00 09 	add	r9,r8,r9
80003906:	93 0a       	st.w	r9[0x0],r10
80003908:	76 19       	ld.w	r9,r11[0x4]
8000390a:	a5 7c       	lsl	r12,0x5
8000390c:	f0 0c 00 0c 	add	r12,r8,r12
80003910:	f8 c8 fd fc 	sub	r8,r12,-516
80003914:	91 09       	st.w	r8[0x0],r9
80003916:	76 28       	ld.w	r8,r11[0x8]
80003918:	f8 cc fd f8 	sub	r12,r12,-520
8000391c:	99 08       	st.w	r12[0x0],r8
8000391e:	5e fd       	retal	0
80003920:	5e ff       	retal	1

80003922 <pwm_start_channels>:
80003922:	18 98       	mov	r8,r12
80003924:	e0 18 ff 80 	andl	r8,0xff80
80003928:	c0 20       	breq	8000392c <pwm_start_channels+0xa>
8000392a:	5e ff       	retal	1
8000392c:	fe 78 30 00 	mov	r8,-53248
80003930:	91 1c       	st.w	r8[0x4],r12
80003932:	5e fd       	retal	0

80003934 <pwm_async_update_channel>:
80003934:	58 6c       	cp.w	r12,6
80003936:	e0 88 00 03 	brls	8000393c <pwm_async_update_channel+0x8>
8000393a:	5e ff       	retal	1
8000393c:	76 0a       	ld.w	r10,r11[0x0]
8000393e:	fe 78 30 00 	mov	r8,-53248
80003942:	f8 c9 ff f0 	sub	r9,r12,-16
80003946:	a5 79       	lsl	r9,0x5
80003948:	f0 09 00 09 	add	r9,r8,r9
8000394c:	93 0a       	st.w	r9[0x0],r10
8000394e:	76 49       	ld.w	r9,r11[0x10]
80003950:	a5 7c       	lsl	r12,0x5
80003952:	18 08       	add	r8,r12
80003954:	f0 c8 fd f0 	sub	r8,r8,-528
80003958:	91 09       	st.w	r8[0x0],r9
8000395a:	5e fd       	retal	0

8000395c <pwm_init>:
8000395c:	e1 b8 00 00 	mfsr	r8,0x0
80003960:	58 0c       	cp.w	r12,0
80003962:	c0 21       	brne	80003966 <pwm_init+0xa>
80003964:	5e ff       	retal	1
80003966:	e6 18 00 01 	andh	r8,0x1,COH
8000396a:	c0 91       	brne	8000397c <pwm_init+0x20>
8000396c:	d3 03       	ssrf	0x10
8000396e:	fe 78 30 00 	mov	r8,-53248
80003972:	37 f9       	mov	r9,127
80003974:	91 59       	st.w	r8[0x14],r9
80003976:	70 78       	ld.w	r8,r8[0x1c]
80003978:	d5 03       	csrf	0x10
8000397a:	c0 68       	rjmp	80003986 <pwm_init+0x2a>
8000397c:	fe 78 30 00 	mov	r8,-53248
80003980:	37 f9       	mov	r9,127
80003982:	91 59       	st.w	r8[0x14],r9
80003984:	70 78       	ld.w	r8,r8[0x1c]
80003986:	78 08       	ld.w	r8,r12[0x0]
80003988:	78 39       	ld.w	r9,r12[0xc]
8000398a:	a9 69       	lsl	r9,0x8
8000398c:	f3 e8 11 09 	or	r9,r9,r8<<0x10
80003990:	78 18       	ld.w	r8,r12[0x4]
80003992:	10 49       	or	r9,r8
80003994:	78 28       	ld.w	r8,r12[0x8]
80003996:	f3 e8 11 89 	or	r9,r9,r8<<0x18
8000399a:	fe 78 30 00 	mov	r8,-53248
8000399e:	91 09       	st.w	r8[0x0],r9
800039a0:	5e fd       	retal	0

800039a2 <getBaudDiv>:
800039a2:	f8 c8 00 01 	sub	r8,r12,1
800039a6:	f0 0b 00 0b 	add	r11,r8,r11
800039aa:	f6 0c 0d 0a 	divu	r10,r11,r12
800039ae:	14 9c       	mov	r12,r10
800039b0:	f4 c8 00 01 	sub	r8,r10,1
800039b4:	e0 48 00 fe 	cp.w	r8,254
800039b8:	e0 88 00 03 	brls	800039be <getBaudDiv+0x1c>
800039bc:	5e fe       	retal	-1
800039be:	5c 8c       	casts.h	r12
800039c0:	5e fc       	retal	r12

800039c2 <spi_initMaster>:
800039c2:	f7 39 00 0d 	ld.ub	r9,r11[13]
800039c6:	30 18       	mov	r8,1
800039c8:	f0 09 18 00 	cp.b	r9,r8
800039cc:	e0 88 00 04 	brls	800039d4 <spi_initMaster+0x12>
800039d0:	30 2c       	mov	r12,2
800039d2:	5e fc       	retal	r12
800039d4:	e0 68 00 80 	mov	r8,128
800039d8:	99 08       	st.w	r12[0x0],r8
800039da:	78 18       	ld.w	r8,r12[0x4]
800039dc:	30 19       	mov	r9,1
800039de:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
800039e2:	f7 39 00 0d 	ld.ub	r9,r11[13]
800039e6:	f1 d9 d0 81 	bfins	r8,r9,0x4,0x1
800039ea:	30 09       	mov	r9,0
800039ec:	f1 d9 d0 e1 	bfins	r8,r9,0x7,0x1
800039f0:	30 fa       	mov	r10,15
800039f2:	f1 da d2 04 	bfins	r8,r10,0x10,0x4
800039f6:	99 18       	st.w	r12[0x4],r8
800039f8:	5e f9       	retal	r9

800039fa <spi_selectionMode>:
800039fa:	d4 01       	pushm	lr
800039fc:	30 18       	mov	r8,1
800039fe:	f0 0b 18 00 	cp.b	r11,r8
80003a02:	5f be       	srhi	lr
80003a04:	f0 0a 18 00 	cp.b	r10,r8
80003a08:	5f b8       	srhi	r8
80003a0a:	fd e8 10 08 	or	r8,lr,r8
80003a0e:	c0 30       	breq	80003a14 <spi_selectionMode+0x1a>
80003a10:	30 2c       	mov	r12,2
80003a12:	d8 02       	popm	pc
80003a14:	78 18       	ld.w	r8,r12[0x4]
80003a16:	f1 db d0 21 	bfins	r8,r11,0x1,0x1
80003a1a:	f1 da d0 41 	bfins	r8,r10,0x2,0x1
80003a1e:	f1 d9 d3 08 	bfins	r8,r9,0x18,0x8
80003a22:	99 18       	st.w	r12[0x4],r8
80003a24:	d8 0a       	popm	pc,r12=0

80003a26 <spi_selectChip>:
80003a26:	78 18       	ld.w	r8,r12[0x4]
80003a28:	ea 18 00 0f 	orh	r8,0xf
80003a2c:	99 18       	st.w	r12[0x4],r8
80003a2e:	78 18       	ld.w	r8,r12[0x4]
80003a30:	e2 18 00 04 	andl	r8,0x4,COH
80003a34:	c0 f0       	breq	80003a52 <spi_selectChip+0x2c>
80003a36:	30 e8       	mov	r8,14
80003a38:	f0 0b 18 00 	cp.b	r11,r8
80003a3c:	e0 8b 00 19 	brhi	80003a6e <spi_selectChip+0x48>
80003a40:	78 18       	ld.w	r8,r12[0x4]
80003a42:	b1 6b       	lsl	r11,0x10
80003a44:	ea 1b ff f0 	orh	r11,0xfff0
80003a48:	e8 1b ff ff 	orl	r11,0xffff
80003a4c:	10 6b       	and	r11,r8
80003a4e:	99 1b       	st.w	r12[0x4],r11
80003a50:	5e fd       	retal	0
80003a52:	30 38       	mov	r8,3
80003a54:	f0 0b 18 00 	cp.b	r11,r8
80003a58:	e0 8b 00 0b 	brhi	80003a6e <spi_selectChip+0x48>
80003a5c:	78 18       	ld.w	r8,r12[0x4]
80003a5e:	2f 0b       	sub	r11,-16
80003a60:	30 19       	mov	r9,1
80003a62:	f2 0b 09 4b 	lsl	r11,r9,r11
80003a66:	5c db       	com	r11
80003a68:	10 6b       	and	r11,r8
80003a6a:	99 1b       	st.w	r12[0x4],r11
80003a6c:	5e fd       	retal	0
80003a6e:	30 2c       	mov	r12,2
80003a70:	5e fc       	retal	r12

80003a72 <spi_unselectChip>:
80003a72:	e0 68 3a 98 	mov	r8,15000
80003a76:	c0 58       	rjmp	80003a80 <spi_unselectChip+0xe>
80003a78:	58 08       	cp.w	r8,0
80003a7a:	c0 21       	brne	80003a7e <spi_unselectChip+0xc>
80003a7c:	5e ff       	retal	1
80003a7e:	20 18       	sub	r8,1
80003a80:	78 49       	ld.w	r9,r12[0x10]
80003a82:	e2 19 02 00 	andl	r9,0x200,COH
80003a86:	cf 90       	breq	80003a78 <spi_unselectChip+0x6>
80003a88:	78 18       	ld.w	r8,r12[0x4]
80003a8a:	ea 18 00 0f 	orh	r8,0xf
80003a8e:	99 18       	st.w	r12[0x4],r8
80003a90:	fc 18 01 00 	movh	r8,0x100
80003a94:	99 08       	st.w	r12[0x0],r8
80003a96:	5e fd       	retal	0

80003a98 <spi_setupChipReg>:
80003a98:	eb cd 40 f8 	pushm	r3-r7,lr
80003a9c:	18 95       	mov	r5,r12
80003a9e:	16 97       	mov	r7,r11
80003aa0:	f7 36 00 0c 	ld.ub	r6,r11[12]
80003aa4:	30 38       	mov	r8,3
80003aa6:	f0 06 18 00 	cp.b	r6,r8
80003aaa:	e0 8b 00 4d 	brhi	80003b44 <spi_setupChipReg+0xac>
80003aae:	f7 34 00 0b 	ld.ub	r4,r11[11]
80003ab2:	30 18       	mov	r8,1
80003ab4:	f0 04 18 00 	cp.b	r4,r8
80003ab8:	e0 8b 00 46 	brhi	80003b44 <spi_setupChipReg+0xac>
80003abc:	f7 33 00 08 	ld.ub	r3,r11[8]
80003ac0:	30 78       	mov	r8,7
80003ac2:	f0 03 18 00 	cp.b	r3,r8
80003ac6:	e0 88 00 3f 	brls	80003b44 <spi_setupChipReg+0xac>
80003aca:	31 08       	mov	r8,16
80003acc:	f0 03 18 00 	cp.b	r3,r8
80003ad0:	e0 8b 00 3a 	brhi	80003b44 <spi_setupChipReg+0xac>
80003ad4:	14 9b       	mov	r11,r10
80003ad6:	6e 1c       	ld.w	r12,r7[0x4]
80003ad8:	f0 1f 00 1d 	mcall	80003b4c <spi_setupChipReg+0xb4>
80003adc:	c3 45       	brlt	80003b44 <spi_setupChipReg+0xac>
80003ade:	30 08       	mov	r8,0
80003ae0:	ec 09 16 01 	lsr	r9,r6,0x1
80003ae4:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
80003ae8:	ec 16 00 01 	eorl	r6,0x1
80003aec:	f1 d6 d0 21 	bfins	r8,r6,0x1,0x1
80003af0:	f1 d4 d0 61 	bfins	r8,r4,0x3,0x1
80003af4:	20 83       	sub	r3,8
80003af6:	f1 d3 d0 84 	bfins	r8,r3,0x4,0x4
80003afa:	f1 dc d1 08 	bfins	r8,r12,0x8,0x8
80003afe:	ef 39 00 09 	ld.ub	r9,r7[9]
80003b02:	f1 d9 d2 08 	bfins	r8,r9,0x10,0x8
80003b06:	ef 39 00 0a 	ld.ub	r9,r7[10]
80003b0a:	f1 d9 d3 08 	bfins	r8,r9,0x18,0x8
80003b0e:	0f 89       	ld.ub	r9,r7[0x0]
80003b10:	30 1a       	mov	r10,1
80003b12:	f4 09 18 00 	cp.b	r9,r10
80003b16:	c0 e0       	breq	80003b32 <spi_setupChipReg+0x9a>
80003b18:	c0 a3       	brcs	80003b2c <spi_setupChipReg+0x94>
80003b1a:	30 2a       	mov	r10,2
80003b1c:	f4 09 18 00 	cp.b	r9,r10
80003b20:	c0 c0       	breq	80003b38 <spi_setupChipReg+0xa0>
80003b22:	30 3a       	mov	r10,3
80003b24:	f4 09 18 00 	cp.b	r9,r10
80003b28:	c0 e1       	brne	80003b44 <spi_setupChipReg+0xac>
80003b2a:	c0 a8       	rjmp	80003b3e <spi_setupChipReg+0xa6>
80003b2c:	8b c8       	st.w	r5[0x30],r8
80003b2e:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80003b32:	8b d8       	st.w	r5[0x34],r8
80003b34:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80003b38:	8b e8       	st.w	r5[0x38],r8
80003b3a:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80003b3e:	8b f8       	st.w	r5[0x3c],r8
80003b40:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80003b44:	30 2c       	mov	r12,2
80003b46:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
80003b4a:	00 00       	add	r0,r0
80003b4c:	80 00       	ld.sh	r0,r0[0x0]
80003b4e:	39 a2       	mov	r2,-102

80003b50 <spi_enable>:
80003b50:	30 18       	mov	r8,1
80003b52:	99 08       	st.w	r12[0x0],r8
80003b54:	5e fc       	retal	r12

80003b56 <spi_write>:
80003b56:	e0 68 3a 98 	mov	r8,15000
80003b5a:	c0 58       	rjmp	80003b64 <spi_write+0xe>
80003b5c:	58 08       	cp.w	r8,0
80003b5e:	c0 21       	brne	80003b62 <spi_write+0xc>
80003b60:	5e ff       	retal	1
80003b62:	20 18       	sub	r8,1
80003b64:	78 49       	ld.w	r9,r12[0x10]
80003b66:	e2 19 00 02 	andl	r9,0x2,COH
80003b6a:	cf 90       	breq	80003b5c <spi_write+0x6>
80003b6c:	5c 7b       	castu.h	r11
80003b6e:	99 3b       	st.w	r12[0xc],r11
80003b70:	5e fd       	retal	0

80003b72 <spi_read>:
80003b72:	e0 68 3a 98 	mov	r8,15000
80003b76:	c0 58       	rjmp	80003b80 <spi_read+0xe>
80003b78:	58 08       	cp.w	r8,0
80003b7a:	c0 21       	brne	80003b7e <spi_read+0xc>
80003b7c:	5e ff       	retal	1
80003b7e:	20 18       	sub	r8,1
80003b80:	78 49       	ld.w	r9,r12[0x10]
80003b82:	e2 19 02 01 	andl	r9,0x201,COH
80003b86:	e0 49 02 01 	cp.w	r9,513
80003b8a:	cf 71       	brne	80003b78 <spi_read+0x6>
80003b8c:	78 28       	ld.w	r8,r12[0x8]
80003b8e:	b6 08       	st.h	r11[0x0],r8
80003b90:	5e fd       	retal	0

80003b92 <usart_set_async_baudrate>:
80003b92:	d4 01       	pushm	lr
80003b94:	f6 08 15 04 	lsl	r8,r11,0x4
80003b98:	14 38       	cp.w	r8,r10
80003b9a:	f9 b8 08 10 	movls	r8,16
80003b9e:	f9 b8 0b 08 	movhi	r8,8
80003ba2:	f0 0b 02 4b 	mul	r11,r8,r11
80003ba6:	f6 09 16 01 	lsr	r9,r11,0x1
80003baa:	f2 0a 00 3a 	add	r10,r9,r10<<0x3
80003bae:	f4 0b 0d 0a 	divu	r10,r10,r11
80003bb2:	f4 09 16 03 	lsr	r9,r10,0x3
80003bb6:	f2 cb 00 01 	sub	r11,r9,1
80003bba:	e0 4b ff fe 	cp.w	r11,65534
80003bbe:	e0 88 00 03 	brls	80003bc4 <usart_set_async_baudrate+0x32>
80003bc2:	da 0a       	popm	pc,r12=1
80003bc4:	78 1b       	ld.w	r11,r12[0x4]
80003bc6:	e8 6e 00 00 	mov	lr,524288
80003bca:	59 08       	cp.w	r8,16
80003bcc:	fc 08 17 10 	movne	r8,lr
80003bd0:	f9 b8 00 00 	moveq	r8,0
80003bd4:	e4 1b ff f7 	andh	r11,0xfff7
80003bd8:	e0 1b fe cf 	andl	r11,0xfecf
80003bdc:	16 48       	or	r8,r11
80003bde:	99 18       	st.w	r12[0x4],r8
80003be0:	f5 da c0 03 	bfextu	r10,r10,0x0,0x3
80003be4:	f3 ea 11 09 	or	r9,r9,r10<<0x10
80003be8:	99 89       	st.w	r12[0x20],r9
80003bea:	d8 0a       	popm	pc,r12=0

80003bec <usart_write_char>:
80003bec:	78 58       	ld.w	r8,r12[0x14]
80003bee:	e2 18 00 02 	andl	r8,0x2,COH
80003bf2:	c0 31       	brne	80003bf8 <usart_write_char+0xc>
80003bf4:	30 2c       	mov	r12,2
80003bf6:	5e fc       	retal	r12
80003bf8:	f7 db c0 09 	bfextu	r11,r11,0x0,0x9
80003bfc:	99 7b       	st.w	r12[0x1c],r11
80003bfe:	5e fd       	retal	0

80003c00 <usart_putchar>:
80003c00:	eb cd 40 e0 	pushm	r5-r7,lr
80003c04:	18 96       	mov	r6,r12
80003c06:	16 95       	mov	r5,r11
80003c08:	e0 67 27 0f 	mov	r7,9999
80003c0c:	c0 68       	rjmp	80003c18 <usart_putchar+0x18>
80003c0e:	58 07       	cp.w	r7,0
80003c10:	c0 31       	brne	80003c16 <usart_putchar+0x16>
80003c12:	e3 cf c0 e0 	ldm	sp++,r5-r7,pc,r12=-1
80003c16:	20 17       	sub	r7,1
80003c18:	0a 9b       	mov	r11,r5
80003c1a:	0c 9c       	mov	r12,r6
80003c1c:	f0 1f 00 03 	mcall	80003c28 <usart_putchar+0x28>
80003c20:	cf 71       	brne	80003c0e <usart_putchar+0xe>
80003c22:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80003c26:	00 00       	add	r0,r0
80003c28:	80 00       	ld.sh	r0,r0[0x0]
80003c2a:	3b ec       	mov	r12,-66

80003c2c <usart_write_line>:
80003c2c:	eb cd 40 c0 	pushm	r6-r7,lr
80003c30:	18 96       	mov	r6,r12
80003c32:	16 97       	mov	r7,r11
80003c34:	17 8b       	ld.ub	r11,r11[0x0]
80003c36:	58 0b       	cp.w	r11,0
80003c38:	c0 80       	breq	80003c48 <usart_write_line+0x1c>
80003c3a:	2f f7       	sub	r7,-1
80003c3c:	0c 9c       	mov	r12,r6
80003c3e:	f0 1f 00 04 	mcall	80003c4c <usart_write_line+0x20>
80003c42:	0f 8b       	ld.ub	r11,r7[0x0]
80003c44:	58 0b       	cp.w	r11,0
80003c46:	cf a1       	brne	80003c3a <usart_write_line+0xe>
80003c48:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80003c4c:	80 00       	ld.sh	r0,r0[0x0]
80003c4e:	3c 00       	mov	r0,-64

80003c50 <usart_reset>:
80003c50:	e1 b8 00 00 	mfsr	r8,0x0
80003c54:	e6 18 00 01 	andh	r8,0x1,COH
80003c58:	c0 71       	brne	80003c66 <usart_reset+0x16>
80003c5a:	d3 03       	ssrf	0x10
80003c5c:	3f f8       	mov	r8,-1
80003c5e:	99 38       	st.w	r12[0xc],r8
80003c60:	78 58       	ld.w	r8,r12[0x14]
80003c62:	d5 03       	csrf	0x10
80003c64:	c0 48       	rjmp	80003c6c <usart_reset+0x1c>
80003c66:	3f f8       	mov	r8,-1
80003c68:	99 38       	st.w	r12[0xc],r8
80003c6a:	78 58       	ld.w	r8,r12[0x14]
80003c6c:	30 08       	mov	r8,0
80003c6e:	99 18       	st.w	r12[0x4],r8
80003c70:	99 98       	st.w	r12[0x24],r8
80003c72:	99 a8       	st.w	r12[0x28],r8
80003c74:	ea 68 61 0c 	mov	r8,680204
80003c78:	99 08       	st.w	r12[0x0],r8
80003c7a:	5e fc       	retal	r12

80003c7c <usart_init_rs232>:
80003c7c:	eb cd 40 e0 	pushm	r5-r7,lr
80003c80:	18 96       	mov	r6,r12
80003c82:	16 97       	mov	r7,r11
80003c84:	14 95       	mov	r5,r10
80003c86:	f0 1f 00 2f 	mcall	80003d40 <usart_init_rs232+0xc4>
80003c8a:	58 07       	cp.w	r7,0
80003c8c:	c5 80       	breq	80003d3c <usart_init_rs232+0xc0>
80003c8e:	0f c8       	ld.ub	r8,r7[0x4]
80003c90:	30 49       	mov	r9,4
80003c92:	f2 08 18 00 	cp.b	r8,r9
80003c96:	e0 88 00 53 	brls	80003d3c <usart_init_rs232+0xc0>
80003c9a:	30 99       	mov	r9,9
80003c9c:	f2 08 18 00 	cp.b	r8,r9
80003ca0:	e0 8b 00 4e 	brhi	80003d3c <usart_init_rs232+0xc0>
80003ca4:	0f d9       	ld.ub	r9,r7[0x5]
80003ca6:	30 78       	mov	r8,7
80003ca8:	f0 09 18 00 	cp.b	r9,r8
80003cac:	e0 8b 00 48 	brhi	80003d3c <usart_init_rs232+0xc0>
80003cb0:	8e 39       	ld.sh	r9,r7[0x6]
80003cb2:	e0 68 01 01 	mov	r8,257
80003cb6:	f0 09 19 00 	cp.h	r9,r8
80003cba:	e0 8b 00 41 	brhi	80003d3c <usart_init_rs232+0xc0>
80003cbe:	ef 39 00 08 	ld.ub	r9,r7[8]
80003cc2:	30 38       	mov	r8,3
80003cc4:	f0 09 18 00 	cp.b	r9,r8
80003cc8:	e0 8b 00 3a 	brhi	80003d3c <usart_init_rs232+0xc0>
80003ccc:	0a 9a       	mov	r10,r5
80003cce:	6e 0b       	ld.w	r11,r7[0x0]
80003cd0:	0c 9c       	mov	r12,r6
80003cd2:	f0 1f 00 1d 	mcall	80003d44 <usart_init_rs232+0xc8>
80003cd6:	58 1c       	cp.w	r12,1
80003cd8:	c3 20       	breq	80003d3c <usart_init_rs232+0xc0>
80003cda:	0f c8       	ld.ub	r8,r7[0x4]
80003cdc:	30 99       	mov	r9,9
80003cde:	f2 08 18 00 	cp.b	r8,r9
80003ce2:	c0 51       	brne	80003cec <usart_init_rs232+0x70>
80003ce4:	6c 18       	ld.w	r8,r6[0x4]
80003ce6:	b1 b8       	sbr	r8,0x11
80003ce8:	8d 18       	st.w	r6[0x4],r8
80003cea:	c0 68       	rjmp	80003cf6 <usart_init_rs232+0x7a>
80003cec:	6c 19       	ld.w	r9,r6[0x4]
80003cee:	20 58       	sub	r8,5
80003cf0:	f3 e8 10 68 	or	r8,r9,r8<<0x6
80003cf4:	8d 18       	st.w	r6[0x4],r8
80003cf6:	6c 19       	ld.w	r9,r6[0x4]
80003cf8:	ef 3a 00 08 	ld.ub	r10,r7[8]
80003cfc:	0f d8       	ld.ub	r8,r7[0x5]
80003cfe:	a9 78       	lsl	r8,0x9
80003d00:	f1 ea 10 e8 	or	r8,r8,r10<<0xe
80003d04:	12 48       	or	r8,r9
80003d06:	8d 18       	st.w	r6[0x4],r8
80003d08:	8e 38       	ld.sh	r8,r7[0x6]
80003d0a:	30 29       	mov	r9,2
80003d0c:	f2 08 19 00 	cp.h	r8,r9
80003d10:	e0 88 00 09 	brls	80003d22 <usart_init_rs232+0xa6>
80003d14:	6c 18       	ld.w	r8,r6[0x4]
80003d16:	ad b8       	sbr	r8,0xd
80003d18:	8d 18       	st.w	r6[0x4],r8
80003d1a:	8e b8       	ld.uh	r8,r7[0x6]
80003d1c:	20 28       	sub	r8,2
80003d1e:	8d a8       	st.w	r6[0x28],r8
80003d20:	c0 68       	rjmp	80003d2c <usart_init_rs232+0xb0>
80003d22:	6c 19       	ld.w	r9,r6[0x4]
80003d24:	5c 78       	castu.h	r8
80003d26:	f3 e8 10 c8 	or	r8,r9,r8<<0xc
80003d2a:	8d 18       	st.w	r6[0x4],r8
80003d2c:	6c 18       	ld.w	r8,r6[0x4]
80003d2e:	e0 18 ff f0 	andl	r8,0xfff0
80003d32:	8d 18       	st.w	r6[0x4],r8
80003d34:	35 08       	mov	r8,80
80003d36:	8d 08       	st.w	r6[0x0],r8
80003d38:	e3 cf 80 e0 	ldm	sp++,r5-r7,pc,r12=0
80003d3c:	e3 cf 90 e0 	ldm	sp++,r5-r7,pc,r12=1
80003d40:	80 00       	ld.sh	r0,r0[0x0]
80003d42:	3c 50       	mov	r0,-59
80003d44:	80 00       	ld.sh	r0,r0[0x0]
80003d46:	3b 92       	mov	r2,-71

80003d48 <print>:
80003d48:	d4 01       	pushm	lr
80003d4a:	f0 1f 00 02 	mcall	80003d50 <print+0x8>
80003d4e:	d8 02       	popm	pc
80003d50:	80 00       	ld.sh	r0,r0[0x0]
80003d52:	3c 2c       	mov	r12,-62

80003d54 <print_char_hex>:
80003d54:	d4 01       	pushm	lr
80003d56:	20 1d       	sub	sp,4
80003d58:	30 08       	mov	r8,0
80003d5a:	ba a8       	st.b	sp[0x2],r8
80003d5c:	48 88       	lddpc	r8,80003d7c <print_char_hex+0x28>
80003d5e:	f3 db c0 04 	bfextu	r9,r11,0x0,0x4
80003d62:	f0 09 07 09 	ld.ub	r9,r8[r9]
80003d66:	ba 99       	st.b	sp[0x1],r9
80003d68:	f7 db c0 84 	bfextu	r11,r11,0x4,0x4
80003d6c:	f0 0b 07 08 	ld.ub	r8,r8[r11]
80003d70:	ba 88       	st.b	sp[0x0],r8
80003d72:	1a 9b       	mov	r11,sp
80003d74:	f0 1f 00 03 	mcall	80003d80 <print_char_hex+0x2c>
80003d78:	2f fd       	sub	sp,-4
80003d7a:	d8 02       	popm	pc
80003d7c:	80 00       	ld.sh	r0,r0[0x0]
80003d7e:	50 58       	stdsp	sp[0x14],r8
80003d80:	80 00       	ld.sh	r0,r0[0x0]
80003d82:	3d 48       	mov	r8,-44

80003d84 <print_dbg_char_hex>:
80003d84:	d4 01       	pushm	lr
80003d86:	18 9b       	mov	r11,r12
80003d88:	fe 7c 14 00 	mov	r12,-60416
80003d8c:	f0 1f 00 02 	mcall	80003d94 <print_dbg_char_hex+0x10>
80003d90:	d8 02       	popm	pc
80003d92:	00 00       	add	r0,r0
80003d94:	80 00       	ld.sh	r0,r0[0x0]
80003d96:	3d 54       	mov	r4,-43

80003d98 <print_ulong>:
80003d98:	eb cd 40 e0 	pushm	r5-r7,lr
80003d9c:	20 3d       	sub	sp,12
80003d9e:	30 08       	mov	r8,0
80003da0:	fb 68 00 0a 	st.b	sp[10],r8
80003da4:	30 a9       	mov	r9,10
80003da6:	1a 95       	mov	r5,sp
80003da8:	e0 6e cc cd 	mov	lr,52429
80003dac:	ea 1e cc cc 	orh	lr,0xcccc
80003db0:	20 19       	sub	r9,1
80003db2:	f6 0e 06 46 	mulu.d	r6,r11,lr
80003db6:	0e 98       	mov	r8,r7
80003db8:	a3 98       	lsr	r8,0x3
80003dba:	f0 08 00 2a 	add	r10,r8,r8<<0x2
80003dbe:	f6 0a 01 1b 	sub	r11,r11,r10<<0x1
80003dc2:	2d 0b       	sub	r11,-48
80003dc4:	ea 09 0b 0b 	st.b	r5[r9],r11
80003dc8:	10 9b       	mov	r11,r8
80003dca:	58 08       	cp.w	r8,0
80003dcc:	cf 21       	brne	80003db0 <print_ulong+0x18>
80003dce:	1a 9b       	mov	r11,sp
80003dd0:	12 0b       	add	r11,r9
80003dd2:	f0 1f 00 03 	mcall	80003ddc <print_ulong+0x44>
80003dd6:	2f dd       	sub	sp,-12
80003dd8:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80003ddc:	80 00       	ld.sh	r0,r0[0x0]
80003dde:	3d 48       	mov	r8,-44

80003de0 <print_dbg_ulong>:
80003de0:	d4 01       	pushm	lr
80003de2:	18 9b       	mov	r11,r12
80003de4:	fe 7c 14 00 	mov	r12,-60416
80003de8:	f0 1f 00 02 	mcall	80003df0 <print_dbg_ulong+0x10>
80003dec:	d8 02       	popm	pc
80003dee:	00 00       	add	r0,r0
80003df0:	80 00       	ld.sh	r0,r0[0x0]
80003df2:	3d 98       	mov	r8,-39

80003df4 <print_dbg>:
80003df4:	d4 01       	pushm	lr
80003df6:	18 9b       	mov	r11,r12
80003df8:	fe 7c 14 00 	mov	r12,-60416
80003dfc:	f0 1f 00 02 	mcall	80003e04 <print_dbg+0x10>
80003e00:	d8 02       	popm	pc
80003e02:	00 00       	add	r0,r0
80003e04:	80 00       	ld.sh	r0,r0[0x0]
80003e06:	3d 48       	mov	r8,-44

80003e08 <init_dbg_rs232_ex>:
80003e08:	eb cd 40 80 	pushm	r7,lr
80003e0c:	20 3d       	sub	sp,12
80003e0e:	16 97       	mov	r7,r11
80003e10:	50 0c       	stdsp	sp[0x0],r12
80003e12:	30 88       	mov	r8,8
80003e14:	ba c8       	st.b	sp[0x4],r8
80003e16:	30 48       	mov	r8,4
80003e18:	ba d8       	st.b	sp[0x5],r8
80003e1a:	30 08       	mov	r8,0
80003e1c:	ba 38       	st.h	sp[0x6],r8
80003e1e:	fb 68 00 08 	st.b	sp[8],r8
80003e22:	30 2b       	mov	r11,2
80003e24:	48 6c       	lddpc	r12,80003e3c <init_dbg_rs232_ex+0x34>
80003e26:	f0 1f 00 07 	mcall	80003e40 <init_dbg_rs232_ex+0x38>
80003e2a:	0e 9a       	mov	r10,r7
80003e2c:	1a 9b       	mov	r11,sp
80003e2e:	fe 7c 14 00 	mov	r12,-60416
80003e32:	f0 1f 00 05 	mcall	80003e44 <init_dbg_rs232_ex+0x3c>
80003e36:	2f dd       	sub	sp,-12
80003e38:	e3 cd 80 80 	ldm	sp++,r7,pc
80003e3c:	80 00       	ld.sh	r0,r0[0x0]
80003e3e:	50 48       	stdsp	sp[0x10],r8
80003e40:	80 00       	ld.sh	r0,r0[0x0]
80003e42:	34 f0       	mov	r0,79
80003e44:	80 00       	ld.sh	r0,r0[0x0]
80003e46:	3c 7c       	mov	r12,-57

80003e48 <init_dbg_rs232>:
80003e48:	d4 01       	pushm	lr
80003e4a:	18 9b       	mov	r11,r12
80003e4c:	e0 6c e1 00 	mov	r12,57600
80003e50:	f0 1f 00 02 	mcall	80003e58 <init_dbg_rs232+0x10>
80003e54:	d8 02       	popm	pc
80003e56:	00 00       	add	r0,r0
80003e58:	80 00       	ld.sh	r0,r0[0x0]
80003e5a:	3e 08       	mov	r8,-32

80003e5c <_stext>:
80003e5c:	e0 7d 00 00 	mov	sp,65536
80003e60:	fe c0 f4 60 	sub	r0,pc,-2976
80003e64:	e3 b0 00 01 	mtsr	0x4,r0
80003e68:	d5 53       	csrf	0x15
80003e6a:	30 80       	mov	r0,8
80003e6c:	36 01       	mov	r1,96
80003e6e:	02 30       	cp.w	r0,r1
80003e70:	c0 72       	brcc	80003e7e <idata_load_loop_end>
80003e72:	fe c2 e8 02 	sub	r2,pc,-6142

80003e76 <idata_load_loop>:
80003e76:	a5 05       	ld.d	r4,r2++
80003e78:	a1 24       	st.d	r0++,r4
80003e7a:	02 30       	cp.w	r0,r1
80003e7c:	cf d3       	brcs	80003e76 <idata_load_loop>

80003e7e <idata_load_loop_end>:
80003e7e:	36 00       	mov	r0,96
80003e80:	e0 61 07 a8 	mov	r1,1960
80003e84:	02 30       	cp.w	r0,r1
80003e86:	c0 62       	brcc	80003e92 <udata_clear_loop_end>
80003e88:	30 02       	mov	r2,0
80003e8a:	30 03       	mov	r3,0

80003e8c <udata_clear_loop>:
80003e8c:	a1 22       	st.d	r0++,r2
80003e8e:	02 30       	cp.w	r0,r1
80003e90:	cf e3       	brcs	80003e8c <udata_clear_loop>

80003e92 <udata_clear_loop_end>:
80003e92:	fe cf fd f2 	sub	pc,pc,-526
80003e96:	d7 03       	nop

80003e98 <wait>:

void CLR_disp(void){
	et024006_DrawFilledRect(0 , 0, ET024006_WIDTH, ET024006_HEIGHT, BLACK );
}//CLR_disp

void wait(){
80003e98:	20 1d       	sub	sp,4
	volatile int i;
	for(i = 0 ; i < 5000; i++);
80003e9a:	30 08       	mov	r8,0
80003e9c:	50 08       	stdsp	sp[0x0],r8
80003e9e:	40 08       	lddsp	r8,sp[0x0]
80003ea0:	e0 48 13 87 	cp.w	r8,4999
80003ea4:	e0 89 00 0a 	brgt	80003eb8 <wait+0x20>
80003ea8:	40 08       	lddsp	r8,sp[0x0]
80003eaa:	2f f8       	sub	r8,-1
80003eac:	50 08       	stdsp	sp[0x0],r8
80003eae:	40 08       	lddsp	r8,sp[0x0]
80003eb0:	e0 48 13 87 	cp.w	r8,4999
80003eb4:	fe 9a ff fa 	brle	80003ea8 <wait+0x10>
}//Wait
80003eb8:	2f fd       	sub	sp,-4
80003eba:	5e fc       	retal	r12

80003ebc <init_button_interrupt>:
	pdca_init_channel(AVR32_PDCA_CHANNEL_SPI_RX, &pdca_options_SPI_RX);
	INTC_register_interrupt(&pdca_int_handler, AVR32_PDCA_IRQ_0, AVR32_INTC_INT1);  // pdca_channel_spi1_RX = 0

} //local_pdca_init

void init_button_interrupt(void){//inicializar interrupciones de botones
80003ebc:	d4 21       	pushm	r4-r7,lr
80003ebe:	20 3d       	sub	sp,12
	Disable_global_interrupt();
80003ec0:	d3 03       	ssrf	0x10
	INTC_init_interrupts();
80003ec2:	f0 1f 00 14 	mcall	80003f10 <init_button_interrupt+0x54>
	INTC_register_interrupt(&btn_interrupt_routine, 70, 3);
80003ec6:	49 47       	lddpc	r7,80003f14 <init_button_interrupt+0x58>
80003ec8:	30 3a       	mov	r10,3
80003eca:	34 6b       	mov	r11,70
80003ecc:	0e 9c       	mov	r12,r7
80003ece:	f0 1f 00 13 	mcall	80003f18 <init_button_interrupt+0x5c>
	INTC_register_interrupt(&btn_interrupt_routine, 71, 3);
80003ed2:	30 3a       	mov	r10,3
80003ed4:	34 7b       	mov	r11,71
80003ed6:	0e 9c       	mov	r12,r7
80003ed8:	f0 1f 00 10 	mcall	80003f18 <init_button_interrupt+0x5c>
	uint16_t button_ref [] = {BTN_UP,BTN_DOWN,BTN_RIGHT,BTN_LEFT,BTN_CENTER};
80003edc:	fa c6 ff fe 	sub	r6,sp,-2
80003ee0:	30 aa       	mov	r10,10
80003ee2:	48 fb       	lddpc	r11,80003f1c <init_button_interrupt+0x60>
80003ee4:	0c 9c       	mov	r12,r6
80003ee6:	f0 1f 00 0f 	mcall	80003f20 <init_button_interrupt+0x64>
	pdca_init_channel(AVR32_PDCA_CHANNEL_SPI_RX, &pdca_options_SPI_RX);
	INTC_register_interrupt(&pdca_int_handler, AVR32_PDCA_IRQ_0, AVR32_INTC_INT1);  // pdca_channel_spi1_RX = 0

} //local_pdca_init

void init_button_interrupt(void){//inicializar interrupciones de botones
80003eea:	fa c5 ff f4 	sub	r5,sp,-12
	INTC_register_interrupt(&btn_interrupt_routine, 71, 3);
	uint16_t button_ref [] = {BTN_UP,BTN_DOWN,BTN_RIGHT,BTN_LEFT,BTN_CENTER};
	for(uint8_t i=0; i<5; i++){
		gpio_enable_gpio_pin(button_ref[i]);
		gpio_enable_pin_pull_up(button_ref[i]);
		gpio_enable_pin_interrupt(button_ref[i],GPIO_FALLING_EDGE);
80003eee:	30 24       	mov	r4,2
	INTC_init_interrupts();
	INTC_register_interrupt(&btn_interrupt_routine, 70, 3);
	INTC_register_interrupt(&btn_interrupt_routine, 71, 3);
	uint16_t button_ref [] = {BTN_UP,BTN_DOWN,BTN_RIGHT,BTN_LEFT,BTN_CENTER};
	for(uint8_t i=0; i<5; i++){
		gpio_enable_gpio_pin(button_ref[i]);
80003ef0:	0d 27       	ld.uh	r7,r6++
80003ef2:	0e 9c       	mov	r12,r7
80003ef4:	f0 1f 00 0c 	mcall	80003f24 <init_button_interrupt+0x68>
		gpio_enable_pin_pull_up(button_ref[i]);
80003ef8:	0e 9c       	mov	r12,r7
80003efa:	f0 1f 00 0c 	mcall	80003f28 <init_button_interrupt+0x6c>
		gpio_enable_pin_interrupt(button_ref[i],GPIO_FALLING_EDGE);
80003efe:	08 9b       	mov	r11,r4
80003f00:	0e 9c       	mov	r12,r7
80003f02:	f0 1f 00 0b 	mcall	80003f2c <init_button_interrupt+0x70>
	Disable_global_interrupt();
	INTC_init_interrupts();
	INTC_register_interrupt(&btn_interrupt_routine, 70, 3);
	INTC_register_interrupt(&btn_interrupt_routine, 71, 3);
	uint16_t button_ref [] = {BTN_UP,BTN_DOWN,BTN_RIGHT,BTN_LEFT,BTN_CENTER};
	for(uint8_t i=0; i<5; i++){
80003f06:	0a 36       	cp.w	r6,r5
80003f08:	cf 41       	brne	80003ef0 <init_button_interrupt+0x34>
		gpio_enable_gpio_pin(button_ref[i]);
		gpio_enable_pin_pull_up(button_ref[i]);
		gpio_enable_pin_interrupt(button_ref[i],GPIO_FALLING_EDGE);
	}//For
	Enable_global_interrupt();
80003f0a:	d5 03       	csrf	0x10
}//init_button_interrupt
80003f0c:	2f dd       	sub	sp,-12
80003f0e:	d8 22       	popm	r4-r7,pc
80003f10:	80 00       	ld.sh	r0,r0[0x0]
80003f12:	36 7c       	mov	r12,103
80003f14:	80 00       	ld.sh	r0,r0[0x0]
80003f16:	40 00       	lddsp	r0,sp[0x0]
80003f18:	80 00       	ld.sh	r0,r0[0x0]
80003f1a:	35 fc       	mov	r12,95
80003f1c:	80 00       	ld.sh	r0,r0[0x0]
80003f1e:	56 64       	stdsp	sp[0x198],r4
80003f20:	80 00       	ld.sh	r0,r0[0x0]
80003f22:	48 08       	lddpc	r8,80003f20 <init_button_interrupt+0x64>
80003f24:	80 00       	ld.sh	r0,r0[0x0]
80003f26:	35 20       	mov	r0,82
80003f28:	80 00       	ld.sh	r0,r0[0x0]
80003f2a:	35 38       	mov	r8,83
80003f2c:	80 00       	ld.sh	r0,r0[0x0]
80003f2e:	35 86       	mov	r6,88

80003f30 <local_pdca_init>:
	spi_enable(SD_MMC_SPI);
	sd_mmc_spi_init(spiOptions, PBA_HZ);

}//sd_mmc_resources_init

void local_pdca_init(void){
80003f30:	eb cd 40 b0 	pushm	r4-r5,r7,lr
80003f34:	20 cd       	sub	sp,48
		.size = 512,                              // transfer counter: here the size of the string
		.r_addr = NULL,                           // next memory address after 1st transfer complete
		.r_size = 0,                              // next transfer counter not used here
		.pid = AVR32_PDCA_CHANNEL_USED_RX,        // select peripheral ID - data are on reception from SPI1 RX line
		.transfer_size = PDCA_TRANSFER_SIZE_BYTE  // select size of the transfer: 8,16,32 bits
	};//pdca_options_SPI_RX
80003f36:	49 78       	lddpc	r8,80003f90 <local_pdca_init+0x60>
80003f38:	fa c7 ff e8 	sub	r7,sp,-24
80003f3c:	f0 ea 00 00 	ld.d	r10,r8[0]
80003f40:	ee eb 00 00 	st.d	r7[0],r10
80003f44:	f0 ea 00 08 	ld.d	r10,r8[8]
80003f48:	ee eb 00 08 	st.d	r7[8],r10
80003f4c:	f0 e8 00 10 	ld.d	r8,r8[16]
80003f50:	ee e9 00 10 	st.d	r7[16],r8
		.size = 512,                              // transfer counter: here the size of the string
		.r_addr = NULL,                           // next memory address after 1st transfer complete
		.r_size = 0,                              // next transfer counter not used here
		.pid = AVR32_PDCA_CHANNEL_USED_TX,        // select peripheral ID - data are on reception from SPI1 RX line
		.transfer_size = PDCA_TRANSFER_SIZE_BYTE  // select size of the transfer: 8,16,32 bits
	};//pdca_options_SPI_TX
80003f54:	49 08       	lddpc	r8,80003f94 <local_pdca_init+0x64>
80003f56:	1a 9b       	mov	r11,sp
80003f58:	f0 e4 00 00 	ld.d	r4,r8[0]
80003f5c:	fa e5 00 00 	st.d	sp[0],r4
80003f60:	f0 e4 00 08 	ld.d	r4,r8[8]
80003f64:	fa e5 00 08 	st.d	sp[8],r4
80003f68:	f0 e8 00 10 	ld.d	r8,r8[16]
80003f6c:	fa e9 00 10 	st.d	sp[16],r8

	pdca_init_channel(AVR32_PDCA_CHANNEL_SPI_TX, &pdca_options_SPI_TX);
80003f70:	30 1c       	mov	r12,1
80003f72:	f0 1f 00 0a 	mcall	80003f98 <local_pdca_init+0x68>
	pdca_init_channel(AVR32_PDCA_CHANNEL_SPI_RX, &pdca_options_SPI_RX);
80003f76:	0e 9b       	mov	r11,r7
80003f78:	30 0c       	mov	r12,0
80003f7a:	f0 1f 00 08 	mcall	80003f98 <local_pdca_init+0x68>
	INTC_register_interrupt(&pdca_int_handler, AVR32_PDCA_IRQ_0, AVR32_INTC_INT1);  // pdca_channel_spi1_RX = 0
80003f7e:	30 1a       	mov	r10,1
80003f80:	36 0b       	mov	r11,96
80003f82:	48 7c       	lddpc	r12,80003f9c <local_pdca_init+0x6c>
80003f84:	f0 1f 00 07 	mcall	80003fa0 <local_pdca_init+0x70>

} //local_pdca_init
80003f88:	2f 4d       	sub	sp,-48
80003f8a:	e3 cd 80 b0 	ldm	sp++,r4-r5,r7,pc
80003f8e:	00 00       	add	r0,r0
80003f90:	80 00       	ld.sh	r0,r0[0x0]
80003f92:	54 6c       	stdsp	sp[0x118],r12
80003f94:	80 00       	ld.sh	r0,r0[0x0]
80003f96:	54 84       	stdsp	sp[0x120],r4
80003f98:	80 00       	ld.sh	r0,r0[0x0]
80003f9a:	37 d4       	mov	r4,125
80003f9c:	80 00       	ld.sh	r0,r0[0x0]
80003f9e:	3f a4       	mov	r4,-6
80003fa0:	80 00       	ld.sh	r0,r0[0x0]
80003fa2:	35 fc       	mov	r12,95

80003fa4 <pdca_int_handler>:
void wait(){
	volatile int i;
	for(i = 0 ; i < 5000; i++);
}//Wait

static void pdca_int_handler(void){
80003fa4:	d4 01       	pushm	lr
	Disable_global_interrupt();
80003fa6:	d3 03       	ssrf	0x10
	pdca_disable_interrupt_transfer_complete(AVR32_PDCA_CHANNEL_SPI_RX);
80003fa8:	30 0c       	mov	r12,0
80003faa:	f0 1f 00 0a 	mcall	80003fd0 <pdca_int_handler+0x2c>
	sd_mmc_spi_read_close_PDCA();
80003fae:	f0 1f 00 0a 	mcall	80003fd4 <pdca_int_handler+0x30>
	wait();
80003fb2:	f0 1f 00 0a 	mcall	80003fd8 <pdca_int_handler+0x34>
	pdca_disable(AVR32_PDCA_CHANNEL_SPI_TX);
80003fb6:	30 1c       	mov	r12,1
80003fb8:	f0 1f 00 09 	mcall	80003fdc <pdca_int_handler+0x38>
	pdca_disable(AVR32_PDCA_CHANNEL_SPI_RX);
80003fbc:	30 0c       	mov	r12,0
80003fbe:	f0 1f 00 08 	mcall	80003fdc <pdca_int_handler+0x38>
	Enable_global_interrupt();
80003fc2:	d5 03       	csrf	0x10
	end_of_transfer = true;
80003fc4:	30 19       	mov	r9,1
80003fc6:	48 78       	lddpc	r8,80003fe0 <pdca_int_handler+0x3c>
80003fc8:	b0 89       	st.b	r8[0x0],r9
}//pdca_int_handler
80003fca:	d4 02       	popm	lr
80003fcc:	d6 03       	rete
80003fce:	00 00       	add	r0,r0
80003fd0:	80 00       	ld.sh	r0,r0[0x0]
80003fd2:	37 74       	mov	r4,119
80003fd4:	80 00       	ld.sh	r0,r0[0x0]
80003fd6:	29 98       	sub	r8,-103
80003fd8:	80 00       	ld.sh	r0,r0[0x0]
80003fda:	3e 98       	mov	r8,-23
80003fdc:	80 00       	ld.sh	r0,r0[0x0]
80003fde:	37 1c       	mov	r12,113
80003fe0:	00 00       	add	r0,r0
80003fe2:	03 b0       	ld.ub	r0,r1[0x3]

80003fe4 <CLR_disp>:
  pwm_channel6.CMR.cpre = AVR32_PWM_CMR_CPRE_MCK_DIV_2;
  pwm_channel_init(6, &pwm_channel6);
  pwm_start_channels(AVR32_PWM_ENA_CHID6_MASK);
}//tft_bl_init

void CLR_disp(void){
80003fe4:	d4 01       	pushm	lr
	et024006_DrawFilledRect(0 , 0, ET024006_WIDTH, ET024006_HEIGHT, BLACK );
80003fe6:	30 08       	mov	r8,0
80003fe8:	e0 69 00 f0 	mov	r9,240
80003fec:	e0 6a 01 40 	mov	r10,320
80003ff0:	10 9b       	mov	r11,r8
80003ff2:	10 9c       	mov	r12,r8
80003ff4:	f0 1f 00 02 	mcall	80003ffc <CLR_disp+0x18>
}//CLR_disp
80003ff8:	d8 02       	popm	pc
80003ffa:	00 00       	add	r0,r0
80003ffc:	80 00       	ld.sh	r0,r0[0x0]
80003ffe:	23 24       	sub	r4,50

80004000 <btn_interrupt_routine>:
	if ((value & 0b0100)>>2)gpio_clr_gpio_pin(LED1); else gpio_set_gpio_pin(LED1);
	if ((value & 0b0010)>>1)gpio_clr_gpio_pin(LED2); else gpio_set_gpio_pin(LED2);
	if (value & 0b0001)gpio_clr_gpio_pin(LED3); else gpio_set_gpio_pin(LED3);
}//Fin Fn

void btn_interrupt_routine (void){
80004000:	d4 01       	pushm	lr
	CLR_disp();
80004002:	f0 1f 00 23 	mcall	8000408c <btn_interrupt_routine+0x8c>
	if (gpio_get_pin_interrupt_flag(BTN_UP)) {
80004006:	33 6c       	mov	r12,54
80004008:	f0 1f 00 22 	mcall	80004090 <btn_interrupt_routine+0x90>
8000400c:	c0 90       	breq	8000401e <btn_interrupt_routine+0x1e>
		btn_pressed=UP;
8000400e:	30 18       	mov	r8,1
80004010:	4a 19       	lddpc	r9,80004094 <btn_interrupt_routine+0x94>
80004012:	93 08       	st.w	r9[0x0],r8
		state = 1;
80004014:	4a 19       	lddpc	r9,80004098 <btn_interrupt_routine+0x98>
80004016:	93 08       	st.w	r9[0x0],r8
		gpio_clear_pin_interrupt_flag(BTN_UP);
80004018:	33 6c       	mov	r12,54
8000401a:	f0 1f 00 21 	mcall	8000409c <btn_interrupt_routine+0x9c>
	}
	if (gpio_get_pin_interrupt_flag(BTN_DOWN)){
8000401e:	33 7c       	mov	r12,55
80004020:	f0 1f 00 1c 	mcall	80004090 <btn_interrupt_routine+0x90>
80004024:	c0 90       	breq	80004036 <btn_interrupt_routine+0x36>
		btn_pressed=DOWN;
80004026:	30 28       	mov	r8,2
80004028:	49 b9       	lddpc	r9,80004094 <btn_interrupt_routine+0x94>
8000402a:	93 08       	st.w	r9[0x0],r8
		state=2;
8000402c:	49 b9       	lddpc	r9,80004098 <btn_interrupt_routine+0x98>
8000402e:	93 08       	st.w	r9[0x0],r8
		gpio_clear_pin_interrupt_flag(BTN_DOWN);
80004030:	33 7c       	mov	r12,55
80004032:	f0 1f 00 1b 	mcall	8000409c <btn_interrupt_routine+0x9c>
	}
	if (gpio_get_pin_interrupt_flag(BTN_RIGHT)){
80004036:	33 8c       	mov	r12,56
80004038:	f0 1f 00 16 	mcall	80004090 <btn_interrupt_routine+0x90>
8000403c:	c0 a0       	breq	80004050 <btn_interrupt_routine+0x50>
		btn_pressed=RIGHT;
8000403e:	30 49       	mov	r9,4
80004040:	49 58       	lddpc	r8,80004094 <btn_interrupt_routine+0x94>
80004042:	91 09       	st.w	r8[0x0],r9
		state=3;
80004044:	30 39       	mov	r9,3
80004046:	49 58       	lddpc	r8,80004098 <btn_interrupt_routine+0x98>
80004048:	91 09       	st.w	r8[0x0],r9
		gpio_clear_pin_interrupt_flag(BTN_RIGHT);
8000404a:	33 8c       	mov	r12,56
8000404c:	f0 1f 00 14 	mcall	8000409c <btn_interrupt_routine+0x9c>
	}
	if (gpio_get_pin_interrupt_flag(BTN_LEFT)){
80004050:	33 9c       	mov	r12,57
80004052:	f0 1f 00 10 	mcall	80004090 <btn_interrupt_routine+0x90>
80004056:	c0 a0       	breq	8000406a <btn_interrupt_routine+0x6a>
		btn_pressed=LEFT;
80004058:	30 39       	mov	r9,3
8000405a:	48 f8       	lddpc	r8,80004094 <btn_interrupt_routine+0x94>
8000405c:	91 09       	st.w	r8[0x0],r9
		state=4;
8000405e:	30 49       	mov	r9,4
80004060:	48 e8       	lddpc	r8,80004098 <btn_interrupt_routine+0x98>
80004062:	91 09       	st.w	r8[0x0],r9
		gpio_clear_pin_interrupt_flag(BTN_LEFT);
80004064:	33 9c       	mov	r12,57
80004066:	f0 1f 00 0e 	mcall	8000409c <btn_interrupt_routine+0x9c>
	}
	if (gpio_get_pin_interrupt_flag(BTN_CENTER)){
8000406a:	33 ac       	mov	r12,58
8000406c:	f0 1f 00 09 	mcall	80004090 <btn_interrupt_routine+0x90>
80004070:	c0 90       	breq	80004082 <btn_interrupt_routine+0x82>
		gpio_clear_pin_interrupt_flag(BTN_CENTER);
80004072:	33 ac       	mov	r12,58
80004074:	f0 1f 00 0a 	mcall	8000409c <btn_interrupt_routine+0x9c>
		btn_pressed=CENTER;
80004078:	30 58       	mov	r8,5
8000407a:	48 79       	lddpc	r9,80004094 <btn_interrupt_routine+0x94>
8000407c:	93 08       	st.w	r9[0x0],r8
		state=5;
8000407e:	48 79       	lddpc	r9,80004098 <btn_interrupt_routine+0x98>
80004080:	93 08       	st.w	r9[0x0],r8
	}
	gpio_get_pin_interrupt_flag(BTN_CENTER);
80004082:	33 ac       	mov	r12,58
80004084:	f0 1f 00 03 	mcall	80004090 <btn_interrupt_routine+0x90>
} //Fin Botones
80004088:	d4 02       	popm	lr
8000408a:	d6 03       	rete
8000408c:	80 00       	ld.sh	r0,r0[0x0]
8000408e:	3f e4       	mov	r4,-2
80004090:	80 00       	ld.sh	r0,r0[0x0]
80004092:	35 cc       	mov	r12,92
80004094:	00 00       	add	r0,r0
80004096:	01 7c       	ld.ub	r12,--r0
80004098:	00 00       	add	r0,r0
8000409a:	01 80       	ld.ub	r0,r0[0x0]
8000409c:	80 00       	ld.sh	r0,r0[0x0]
8000409e:	35 e4       	mov	r4,94

800040a0 <main>:
void init_button_interrupt(void);
void usart_read(void);

/**************************************************************************/

int main(void){
800040a0:	d4 31       	pushm	r0-r7,lr
800040a2:	20 5d       	sub	sp,20

	int i, j; //j for sectors, i for bytes

	//PM
	pm_switch_to_osc0(&AVR32_PM, PBA_HZ, 3);
800040a4:	30 3a       	mov	r10,3
800040a6:	e0 6b 1b 00 	mov	r11,6912
800040aa:	ea 1b 00 b7 	orh	r11,0xb7
800040ae:	fe 7c 0c 00 	mov	r12,-62464
800040b2:	f0 1f 01 00 	mcall	800044b0 <main+0x410>

	//Key interrupts
	init_button_interrupt();
800040b6:	f0 1f 01 00 	mcall	800044b4 <main+0x414>

	//SDCARD
	init_dbg_rs232(PBA_HZ);
800040ba:	e0 6c 1b 00 	mov	r12,6912
800040be:	ea 1c 00 b7 	orh	r12,0xb7
800040c2:	f0 1f 00 fe 	mcall	800044b8 <main+0x418>
	print_dbg("\r\nInit SD/MMC Driver");
800040c6:	fe fc 03 f6 	ld.w	r12,pc[1014]
800040ca:	f0 1f 00 fe 	mcall	800044c0 <main+0x420>
	print_dbg("\r\nInsert SD/MMC...");
800040ce:	fe fc 03 f6 	ld.w	r12,pc[1014]
800040d2:	f0 1f 00 fc 	mcall	800044c0 <main+0x420>
		.spck_delay   = 0,
		.trans_delay  = 0,
		.stay_act     = 1,
		.spi_mode     = 0,
		.modfdis      = 1
	};//SPI Options
800040d6:	fe f8 03 f2 	ld.w	r8,pc[1010]
800040da:	fa c7 ff fc 	sub	r7,sp,-4
800040de:	f0 ea 00 00 	ld.d	r10,r8[0]
800040e2:	ee eb 00 00 	st.d	r7[0],r10
800040e6:	f0 e8 00 08 	ld.d	r8,r8[8]
800040ea:	ee e9 00 08 	st.d	r7[8],r8

	gpio_enable_module(SD_MMC_SPI_GPIO_MAP,
800040ee:	30 4b       	mov	r11,4
800040f0:	fe fc 03 dc 	ld.w	r12,pc[988]
800040f4:	f0 1f 00 f7 	mcall	800044d0 <main+0x430>
	sizeof(SD_MMC_SPI_GPIO_MAP) / sizeof(SD_MMC_SPI_GPIO_MAP[0]));
	spi_initMaster(SD_MMC_SPI, &spiOptions);
800040f8:	0e 9b       	mov	r11,r7
800040fa:	fe 7c 24 00 	mov	r12,-56320
800040fe:	f0 1f 00 f6 	mcall	800044d4 <main+0x434>
	spi_selectionMode(SD_MMC_SPI, 0, 0, 0);
80004102:	30 09       	mov	r9,0
80004104:	12 9a       	mov	r10,r9
80004106:	12 9b       	mov	r11,r9
80004108:	fe 7c 24 00 	mov	r12,-56320
8000410c:	f0 1f 00 f3 	mcall	800044d8 <main+0x438>
	spi_enable(SD_MMC_SPI);
80004110:	fe 7c 24 00 	mov	r12,-56320
80004114:	f0 1f 00 f2 	mcall	800044dc <main+0x43c>
	sd_mmc_spi_init(spiOptions, PBA_HZ);
80004118:	20 4d       	sub	sp,16
8000411a:	ee e8 00 00 	ld.d	r8,r7[0]
8000411e:	fa e9 00 00 	st.d	sp[0],r8
80004122:	ee e8 00 08 	ld.d	r8,r7[8]
80004126:	fa e9 00 08 	st.d	sp[8],r8
8000412a:	e0 6c 1b 00 	mov	r12,6912
8000412e:	ea 1c 00 b7 	orh	r12,0xb7
80004132:	f0 1f 00 ec 	mcall	800044e0 <main+0x440>
80004136:	2f cd       	sub	sp,-16
	//SDCARD
	init_dbg_rs232(PBA_HZ);
	print_dbg("\r\nInit SD/MMC Driver");
	print_dbg("\r\nInsert SD/MMC...");
	sd_mmc_resources_init();
	while (!sd_mmc_spi_mem_check());
80004138:	f0 1f 00 eb 	mcall	800044e4 <main+0x444>
8000413c:	cf e0       	breq	80004138 <main+0x98>
	print_dbg("\r\nCard detected!");
8000413e:	fe fc 03 aa 	ld.w	r12,pc[938]
80004142:	f0 1f 00 e0 	mcall	800044c0 <main+0x420>
	sd_mmc_spi_get_capacity();
80004146:	f0 1f 00 ea 	mcall	800044ec <main+0x44c>
	print_dbg("Capacity = ");
8000414a:	fe fc 03 a6 	ld.w	r12,pc[934]
8000414e:	f0 1f 00 dd 	mcall	800044c0 <main+0x420>
	print_dbg_ulong(capacity >> 20);
80004152:	fe f8 03 a2 	ld.w	r8,pc[930]
80004156:	f0 e8 00 00 	ld.d	r8,r8[0]
8000415a:	f0 0c 16 14 	lsr	r12,r8,0x14
8000415e:	f9 e9 10 cc 	or	r12,r12,r9<<0xc
80004162:	f0 1f 00 e6 	mcall	800044f8 <main+0x458>
	print_dbg(" MBytes");
80004166:	fe fc 03 96 	ld.w	r12,pc[918]
8000416a:	f0 1f 00 d6 	mcall	800044c0 <main+0x420>

	Enable_global_interrupt();
8000416e:	d5 03       	csrf	0x10
	local_pdca_init(); //DMA initialization
80004170:	f0 1f 00 e4 	mcall	80004500 <main+0x460>

	//TFT
	et024006_Init( FOSC0, FOSC0 );
80004174:	e0 6b 1b 00 	mov	r11,6912
80004178:	ea 1b 00 b7 	orh	r11,0xb7
8000417c:	16 9c       	mov	r12,r11
8000417e:	f0 1f 00 e2 	mcall	80004504 <main+0x464>
		}//Switch
	}//While
}//Main

static void tft_bl_init(void){
  pwm_opt_t opt = {.diva = 0,.divb = 0,.prea = 0,.preb = 0};
80004182:	30 08       	mov	r8,0
80004184:	50 18       	stdsp	sp[0x4],r8
80004186:	50 28       	stdsp	sp[0x8],r8
80004188:	50 38       	stdsp	sp[0xc],r8
8000418a:	50 48       	stdsp	sp[0x10],r8
  pwm_init(&opt);
8000418c:	fa cc ff fc 	sub	r12,sp,-4
80004190:	f0 1f 00 de 	mcall	80004508 <main+0x468>
  pwm_channel6.CMR.calg = PWM_MODE_LEFT_ALIGNED;
80004194:	fe fb 03 78 	ld.w	r11,pc[888]
80004198:	76 08       	ld.w	r8,r11[0x0]
  pwm_channel6.CMR.cpol = PWM_POLARITY_HIGH; //PWM_POLARITY_LOW;//PWM_POLARITY_HIGH;
  pwm_channel6.CMR.cpd = PWM_UPDATE_DUTY;
8000419a:	e0 18 f8 ff 	andl	r8,0xf8ff
  pwm_channel6.CMR.cpre = AVR32_PWM_CMR_CPRE_MCK_DIV_2;
8000419e:	a9 b8       	sbr	r8,0x9
800041a0:	30 19       	mov	r9,1
800041a2:	f1 d9 d0 04 	bfins	r8,r9,0x0,0x4
800041a6:	97 08       	st.w	r11[0x0],r8
  pwm_channel_init(6, &pwm_channel6);
800041a8:	30 6c       	mov	r12,6
800041aa:	f0 1f 00 da 	mcall	80004510 <main+0x470>
  pwm_start_channels(AVR32_PWM_ENA_CHID6_MASK);
800041ae:	34 0c       	mov	r12,64
800041b0:	f0 1f 00 d9 	mcall	80004514 <main+0x474>
	local_pdca_init(); //DMA initialization

	//TFT
	et024006_Init( FOSC0, FOSC0 );
	tft_bl_init();
	CLR_disp();
800041b4:	f0 1f 00 d9 	mcall	80004518 <main+0x478>
	while(pwm_channel6.cdty < pwm_channel6.cprd){
800041b8:	fe f7 03 54 	ld.w	r7,pc[852]
		pwm_channel6.cdty++;
		pwm_channel6.cupd = pwm_channel6.cdty;
		pwm_async_update_channel(AVR32_PWM_ENA_CHID6, &pwm_channel6);
800041bc:	30 66       	mov	r6,6

	//TFT
	et024006_Init( FOSC0, FOSC0 );
	tft_bl_init();
	CLR_disp();
	while(pwm_channel6.cdty < pwm_channel6.cprd){
800041be:	c1 c8       	rjmp	800041f6 <main+0x156>
		pwm_channel6.cdty++;
800041c0:	2f f8       	sub	r8,-1
800041c2:	8f 18       	st.w	r7[0x4],r8
		pwm_channel6.cupd = pwm_channel6.cdty;
800041c4:	8f 48       	st.w	r7[0x10],r8
		pwm_async_update_channel(AVR32_PWM_ENA_CHID6, &pwm_channel6);
800041c6:	0e 9b       	mov	r11,r7
800041c8:	0c 9c       	mov	r12,r6
800041ca:	f0 1f 00 d5 	mcall	8000451c <main+0x47c>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
800041ce:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
800041d2:	f0 ca d1 20 	sub	r10,r8,-12000
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
800041d6:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
800041da:	14 38       	cp.w	r8,r10
800041dc:	e0 88 00 08 	brls	800041ec <main+0x14c>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
800041e0:	12 38       	cp.w	r8,r9
800041e2:	fe 98 ff fa 	brls	800041d6 <main+0x136>
800041e6:	12 3a       	cp.w	r10,r9
800041e8:	c0 73       	brcs	800041f6 <main+0x156>
800041ea:	cf 6b       	rjmp	800041d6 <main+0x136>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
800041ec:	12 38       	cp.w	r8,r9
800041ee:	e0 8b 00 04 	brhi	800041f6 <main+0x156>
800041f2:	12 3a       	cp.w	r10,r9
800041f4:	cf 12       	brcc	800041d6 <main+0x136>

	//TFT
	et024006_Init( FOSC0, FOSC0 );
	tft_bl_init();
	CLR_disp();
	while(pwm_channel6.cdty < pwm_channel6.cprd){
800041f6:	6e 18       	ld.w	r8,r7[0x4]
800041f8:	6e 29       	ld.w	r9,r7[0x8]
800041fa:	12 38       	cp.w	r8,r9
800041fc:	ce 23       	brcs	800041c0 <main+0x120>
		pwm_channel6.cdty++;
		pwm_channel6.cupd = pwm_channel6.cdty;
		pwm_async_update_channel(AVR32_PWM_ENA_CHID6, &pwm_channel6);
		delay_ms(1);
	}//PWM
	CLR_disp();
800041fe:	f0 1f 00 c7 	mcall	80004518 <main+0x478>
	et024006_PrintString("Waiting", (const unsigned char *)&FONT8x8, 30, 30, WHITE, -1);
80004202:	fe f3 03 1e 	ld.w	r3,pc[798]
80004206:	3f f7       	mov	r7,-1
80004208:	1a d7       	st.w	--sp,r7
8000420a:	e0 68 ff ff 	mov	r8,65535
8000420e:	31 e9       	mov	r9,30
80004210:	12 9a       	mov	r10,r9
80004212:	06 9b       	mov	r11,r3
80004214:	fe fc 03 10 	ld.w	r12,pc[784]
80004218:	f0 1f 00 c4 	mcall	80004528 <main+0x488>
	et024006_PrintString("State 0", (const unsigned char *)&FONT8x8, 30, 200, WHITE, -1);
8000421c:	1a d7       	st.w	--sp,r7
8000421e:	e0 68 ff ff 	mov	r8,65535
80004222:	e0 69 00 c8 	mov	r9,200
80004226:	31 ea       	mov	r10,30
80004228:	06 9b       	mov	r11,r3
8000422a:	fe fc 03 02 	ld.w	r12,pc[770]
8000422e:	f0 1f 00 bf 	mcall	80004528 <main+0x488>
80004232:	2f ed       	sub	sp,-8
				et024006_PrintString("Last key pressed: CENTER", (const unsigned char *)&FONT8x8, 30, 200, WHITE, -1);
				et024006_PrintString("The SD card data is shown below:", (const unsigned char *)&FONT8x8, 30, 30, WHITE, -1);

				//Read SD
				for(j = 1; j <= 5; j++){ //5 Sectors
					pdca_load_channel( AVR32_PDCA_CHANNEL_SPI_RX, &ram_buffer,512);
80004234:	fe f6 02 fc 	ld.w	r6,pc[764]
					pdca_load_channel( AVR32_PDCA_CHANNEL_SPI_TX,(void *)&dummy_data,512); //send dummy
					end_of_transfer = false;
80004238:	fe f4 02 fc 	ld.w	r4,pc[764]
				et024006_PrintString("Last key pressed: CENTER", (const unsigned char *)&FONT8x8, 30, 200, WHITE, -1);
				et024006_PrintString("The SD card data is shown below:", (const unsigned char *)&FONT8x8, 30, 30, WHITE, -1);

				//Read SD
				for(j = 1; j <= 5; j++){ //5 Sectors
					pdca_load_channel( AVR32_PDCA_CHANNEL_SPI_RX, &ram_buffer,512);
8000423c:	50 06       	stdsp	sp[0x0],r6
	CLR_disp();
	et024006_PrintString("Waiting", (const unsigned char *)&FONT8x8, 30, 30, WHITE, -1);
	et024006_PrintString("State 0", (const unsigned char *)&FONT8x8, 30, 200, WHITE, -1);

	while (1){
		switch (state){
8000423e:	fe f8 02 fa 	ld.w	r8,pc[762]
80004242:	70 08       	ld.w	r8,r8[0x0]
80004244:	58 38       	cp.w	r8,3
80004246:	c5 40       	breq	800042ee <main+0x24e>
80004248:	e0 89 00 07 	brgt	80004256 <main+0x1b6>
8000424c:	58 18       	cp.w	r8,1
8000424e:	c0 a0       	breq	80004262 <main+0x1c2>
80004250:	58 28       	cp.w	r8,2
80004252:	cf 61       	brne	8000423e <main+0x19e>
80004254:	c2 58       	rjmp	8000429e <main+0x1fe>
80004256:	58 48       	cp.w	r8,4
80004258:	e0 80 00 8d 	breq	80004372 <main+0x2d2>
8000425c:	58 58       	cp.w	r8,5
8000425e:	cf 01       	brne	8000423e <main+0x19e>
80004260:	cc 18       	rjmp	800043e2 <main+0x342>

			case 0://Do nothing
			break;

			case 1:
				CLR_disp();
80004262:	f0 1f 00 ae 	mcall	80004518 <main+0x478>
				et024006_PrintString("Getting Message ... ", (const unsigned char *)&FONT8x8, 30, 30, WHITE, -1);
80004266:	3f f7       	mov	r7,-1
80004268:	1a d7       	st.w	--sp,r7
8000426a:	e0 68 ff ff 	mov	r8,65535
8000426e:	31 e9       	mov	r9,30
80004270:	12 9a       	mov	r10,r9
80004272:	06 9b       	mov	r11,r3
80004274:	fe fc 02 c8 	ld.w	r12,pc[712]
80004278:	f0 1f 00 ac 	mcall	80004528 <main+0x488>
				et024006_PrintString("Last key pressed: UP", (const unsigned char *)&FONT8x8, 30, 200, WHITE, -1);
8000427c:	1a d7       	st.w	--sp,r7
8000427e:	e0 68 ff ff 	mov	r8,65535
80004282:	e0 69 00 c8 	mov	r9,200
80004286:	31 ea       	mov	r10,30
80004288:	06 9b       	mov	r11,r3
8000428a:	fe fc 02 b6 	ld.w	r12,pc[694]
8000428e:	f0 1f 00 a7 	mcall	80004528 <main+0x488>
				usart_read(); //DMA read missing
				state = 0;
80004292:	30 09       	mov	r9,0
80004294:	fe f8 02 a4 	ld.w	r8,pc[676]
80004298:	91 09       	st.w	r8[0x0],r9
				//ToDo:
				//Activate DMA completion Interrupt
				//In its handler, turn LED0 on
				//The message gets stored in usart_message
			break;
8000429a:	2f ed       	sub	sp,-8
8000429c:	cd 1b       	rjmp	8000423e <main+0x19e>

			case 2://Show the received message
				CLR_disp();
8000429e:	f0 1f 00 9f 	mcall	80004518 <main+0x478>
				et024006_PrintString("Received Message:", (const unsigned char *)&FONT8x8, 30, 30, WHITE, -1);
800042a2:	3f f7       	mov	r7,-1
800042a4:	1a d7       	st.w	--sp,r7
800042a6:	e0 68 ff ff 	mov	r8,65535
800042aa:	31 e9       	mov	r9,30
800042ac:	12 9a       	mov	r10,r9
800042ae:	06 9b       	mov	r11,r3
800042b0:	fe fc 02 94 	ld.w	r12,pc[660]
800042b4:	f0 1f 00 9d 	mcall	80004528 <main+0x488>
				et024006_PrintString(usart_message, (const unsigned char *)&FONT8x8, 30, 50, WHITE, -1);
800042b8:	1a d7       	st.w	--sp,r7
800042ba:	e0 68 ff ff 	mov	r8,65535
800042be:	33 29       	mov	r9,50
800042c0:	31 ea       	mov	r10,30
800042c2:	06 9b       	mov	r11,r3
800042c4:	fe fc 02 84 	ld.w	r12,pc[644]
800042c8:	f0 1f 00 98 	mcall	80004528 <main+0x488>
				et024006_PrintString("Last key pressed: DOWN", (const unsigned char *)&FONT8x8, 30, 200, WHITE, -1);
800042cc:	1a d7       	st.w	--sp,r7
800042ce:	e0 68 ff ff 	mov	r8,65535
800042d2:	e0 69 00 c8 	mov	r9,200
800042d6:	31 ea       	mov	r10,30
800042d8:	06 9b       	mov	r11,r3
800042da:	fe fc 02 72 	ld.w	r12,pc[626]
800042de:	f0 1f 00 93 	mcall	80004528 <main+0x488>
				state = 0;
800042e2:	30 09       	mov	r9,0
800042e4:	fe f8 02 54 	ld.w	r8,pc[596]
800042e8:	91 09       	st.w	r8[0x0],r9
			break;
800042ea:	2f dd       	sub	sp,-12
800042ec:	ca 9b       	rjmp	8000423e <main+0x19e>

			case 3://Store message in SD
				CLR_disp();
800042ee:	f0 1f 00 8b 	mcall	80004518 <main+0x478>
				et024006_PrintString("Last key pressed: RIGHT", (const unsigned char *)&FONT8x8, 30, 200, WHITE, -1);
800042f2:	3f f8       	mov	r8,-1
800042f4:	1a d8       	st.w	--sp,r8
800042f6:	e0 68 ff ff 	mov	r8,65535
800042fa:	e0 69 00 c8 	mov	r9,200
800042fe:	31 ea       	mov	r10,30
80004300:	06 9b       	mov	r11,r3
80004302:	fe fc 02 4e 	ld.w	r12,pc[590]
80004306:	f0 1f 00 89 	mcall	80004528 <main+0x488>
				if(sd_mmc_spi_mem_check()){
8000430a:	f0 1f 00 77 	mcall	800044e4 <main+0x444>
8000430e:	2f fd       	sub	sp,-4
80004310:	58 0c       	cp.w	r12,0
80004312:	c1 e0       	breq	8000434e <main+0x2ae>
					if(usart_message){
						sd_mmc_spi_write_open (Sector_Counter); //Write in a Sector
80004314:	fe f7 02 40 	ld.w	r7,pc[576]
80004318:	0f 8c       	ld.ub	r12,r7[0x0]
8000431a:	f0 1f 00 90 	mcall	80004558 <main+0x4b8>
						sd_mmc_spi_write_sector_from_ram(&usart_message);
8000431e:	fe fc 02 2a 	ld.w	r12,pc[554]
80004322:	f0 1f 00 8f 	mcall	8000455c <main+0x4bc>
						sd_mmc_spi_write_close ();
80004326:	f0 1f 00 8f 	mcall	80004560 <main+0x4c0>
						Sector_Counter=(Sector_Counter % 4)+1;//Increase current sector
8000432a:	0f 88       	ld.ub	r8,r7[0x0]
8000432c:	f1 d8 c0 02 	bfextu	r8,r8,0x0,0x2
80004330:	2f f8       	sub	r8,-1
80004332:	ae 88       	st.b	r7[0x0],r8
						et024006_PrintString("Message successfully stored", (const unsigned char *)&FONT8x8, 30, 30, WHITE, -1);
80004334:	3f f8       	mov	r8,-1
80004336:	1a d8       	st.w	--sp,r8
80004338:	e0 68 ff ff 	mov	r8,65535
8000433c:	31 e9       	mov	r9,30
8000433e:	12 9a       	mov	r10,r9
80004340:	06 9b       	mov	r11,r3
80004342:	fe fc 02 22 	ld.w	r12,pc[546]
80004346:	f0 1f 00 79 	mcall	80004528 <main+0x488>
8000434a:	2f fd       	sub	sp,-4
8000434c:	c0 f8       	rjmp	8000436a <main+0x2ca>
					} else {
						CLR_disp();
						et024006_PrintString("Message is empty", (const unsigned char *)&FONT8x8, 30, 30, WHITE, -1);
					}//If empty message
				} else {
					CLR_disp();
8000434e:	f0 1f 00 73 	mcall	80004518 <main+0x478>
					et024006_PrintString("No SD card present", (const unsigned char *)&FONT8x8, 30, 30, WHITE, -1);
80004352:	3f f8       	mov	r8,-1
80004354:	1a d8       	st.w	--sp,r8
80004356:	e0 68 ff ff 	mov	r8,65535
8000435a:	31 e9       	mov	r9,30
8000435c:	12 9a       	mov	r10,r9
8000435e:	06 9b       	mov	r11,r3
80004360:	fe fc 02 08 	ld.w	r12,pc[520]
80004364:	f0 1f 00 71 	mcall	80004528 <main+0x488>
80004368:	2f fd       	sub	sp,-4
				}//If check mem
				state=0;
8000436a:	30 09       	mov	r9,0
8000436c:	4f 38       	lddpc	r8,80004538 <main+0x498>
8000436e:	91 09       	st.w	r8[0x0],r9
			break;
80004370:	c6 7b       	rjmp	8000423e <main+0x19e>

			case 4://Leer ultimo mensaje guardado de la SD y su sector y mostrarlo
				CLR_disp();
80004372:	f0 1f 00 6a 	mcall	80004518 <main+0x478>
				et024006_PrintString("Last key pressed: LEFT", (const unsigned char *)&FONT8x8, 30, 200, WHITE, -1);
80004376:	3f f7       	mov	r7,-1
80004378:	1a d7       	st.w	--sp,r7
8000437a:	e0 68 ff ff 	mov	r8,65535
8000437e:	e0 69 00 c8 	mov	r9,200
80004382:	31 ea       	mov	r10,30
80004384:	06 9b       	mov	r11,r3
80004386:	4f ac       	lddpc	r12,8000456c <main+0x4cc>
80004388:	f0 1f 00 68 	mcall	80004528 <main+0x488>
				et024006_PrintString("Last written sector:", (const unsigned char *)&FONT8x8, 30, 30, WHITE, -1);
8000438c:	1a d7       	st.w	--sp,r7
8000438e:	e0 68 ff ff 	mov	r8,65535
80004392:	31 e9       	mov	r9,30
80004394:	12 9a       	mov	r10,r9
80004396:	06 9b       	mov	r11,r3
80004398:	4f 6c       	lddpc	r12,80004570 <main+0x4d0>
8000439a:	f0 1f 00 64 	mcall	80004528 <main+0x488>
				et024006_PrintString(Sector_Counter, (const unsigned char *)&FONT8x8, 130, 30, WHITE, -1);//Does not work
8000439e:	4e e8       	lddpc	r8,80004554 <main+0x4b4>
800043a0:	11 8c       	ld.ub	r12,r8[0x0]
800043a2:	1a d7       	st.w	--sp,r7
800043a4:	e0 68 ff ff 	mov	r8,65535
800043a8:	31 e9       	mov	r9,30
800043aa:	e0 6a 00 82 	mov	r10,130
800043ae:	06 9b       	mov	r11,r3
800043b0:	f0 1f 00 5e 	mcall	80004528 <main+0x488>
				et024006_PrintString("Message:", (const unsigned char *)&FONT8x8, 30, 50, WHITE, -1);
800043b4:	1a d7       	st.w	--sp,r7
800043b6:	e0 68 ff ff 	mov	r8,65535
800043ba:	33 29       	mov	r9,50
800043bc:	31 ea       	mov	r10,30
800043be:	06 9b       	mov	r11,r3
800043c0:	4e dc       	lddpc	r12,80004574 <main+0x4d4>
800043c2:	f0 1f 00 5a 	mcall	80004528 <main+0x488>
				et024006_PrintString(usart_message, (const unsigned char *)&FONT8x8, 30, 70, WHITE, -1);
800043c6:	1a d7       	st.w	--sp,r7
800043c8:	e0 68 ff ff 	mov	r8,65535
800043cc:	34 69       	mov	r9,70
800043ce:	31 ea       	mov	r10,30
800043d0:	06 9b       	mov	r11,r3
800043d2:	4d ec       	lddpc	r12,80004548 <main+0x4a8>
800043d4:	f0 1f 00 55 	mcall	80004528 <main+0x488>
				state = 0;
800043d8:	30 09       	mov	r9,0
800043da:	4d 88       	lddpc	r8,80004538 <main+0x498>
800043dc:	91 09       	st.w	r8[0x0],r9
			break;
800043de:	2f bd       	sub	sp,-20
800043e0:	c2 fb       	rjmp	8000423e <main+0x19e>

			case 5://Show stored messages
			  CLR_disp();
800043e2:	f0 1f 00 4e 	mcall	80004518 <main+0x478>
				et024006_PrintString("Last key pressed: CENTER", (const unsigned char *)&FONT8x8, 30, 200, WHITE, -1);
800043e6:	3f f7       	mov	r7,-1
800043e8:	1a d7       	st.w	--sp,r7
800043ea:	e0 68 ff ff 	mov	r8,65535
800043ee:	e0 69 00 c8 	mov	r9,200
800043f2:	31 ea       	mov	r10,30
800043f4:	06 9b       	mov	r11,r3
800043f6:	4e 1c       	lddpc	r12,80004578 <main+0x4d8>
800043f8:	f0 1f 00 4c 	mcall	80004528 <main+0x488>
				et024006_PrintString("The SD card data is shown below:", (const unsigned char *)&FONT8x8, 30, 30, WHITE, -1);
800043fc:	1a d7       	st.w	--sp,r7
800043fe:	e0 68 ff ff 	mov	r8,65535
80004402:	31 e9       	mov	r9,30
80004404:	12 9a       	mov	r10,r9
80004406:	06 9b       	mov	r11,r3
80004408:	4d dc       	lddpc	r12,8000457c <main+0x4dc>
8000440a:	f0 1f 00 48 	mcall	80004528 <main+0x488>
8000440e:	30 15       	mov	r5,1
80004410:	2f ed       	sub	sp,-8

				//Read SD
				for(j = 1; j <= 5; j++){ //5 Sectors
					pdca_load_channel( AVR32_PDCA_CHANNEL_SPI_RX, &ram_buffer,512);
80004412:	e0 61 02 00 	mov	r1,512
80004416:	30 02       	mov	r2,0
					pdca_load_channel( AVR32_PDCA_CHANNEL_SPI_TX,(void *)&dummy_data,512); //send dummy
80004418:	0a 90       	mov	r0,r5
				et024006_PrintString("Last key pressed: CENTER", (const unsigned char *)&FONT8x8, 30, 200, WHITE, -1);
				et024006_PrintString("The SD card data is shown below:", (const unsigned char *)&FONT8x8, 30, 30, WHITE, -1);

				//Read SD
				for(j = 1; j <= 5; j++){ //5 Sectors
					pdca_load_channel( AVR32_PDCA_CHANNEL_SPI_RX, &ram_buffer,512);
8000441a:	02 9a       	mov	r10,r1
8000441c:	40 0b       	lddsp	r11,sp[0x0]
8000441e:	04 9c       	mov	r12,r2
80004420:	f0 1f 00 58 	mcall	80004580 <main+0x4e0>
					pdca_load_channel( AVR32_PDCA_CHANNEL_SPI_TX,(void *)&dummy_data,512); //send dummy
80004424:	02 9a       	mov	r10,r1
80004426:	4d 8b       	lddpc	r11,80004584 <main+0x4e4>
80004428:	00 9c       	mov	r12,r0
8000442a:	f0 1f 00 56 	mcall	80004580 <main+0x4e0>
					end_of_transfer = false;
8000442e:	30 08       	mov	r8,0
80004430:	a8 88       	st.b	r4[0x0],r8
					if(sd_mmc_spi_read_open_PDCA (j)){
80004432:	0a 9c       	mov	r12,r5
80004434:	f0 1f 00 55 	mcall	80004588 <main+0x4e8>
80004438:	c2 60       	breq	80004484 <main+0x3e4>
						print_dbg("\r\nSector ");
8000443a:	4d 5c       	lddpc	r12,8000458c <main+0x4ec>
8000443c:	f0 1f 00 21 	mcall	800044c0 <main+0x420>
		 				print_dbg_ulong(j);
80004440:	0a 9c       	mov	r12,r5
80004442:	f0 1f 00 2e 	mcall	800044f8 <main+0x458>
		 				print_dbg(" :\r\n");
80004446:	4d 3c       	lddpc	r12,80004590 <main+0x4f0>
80004448:	f0 1f 00 1e 	mcall	800044c0 <main+0x420>
						spi_write(SD_MMC_SPI,0xFF); // Write a first dummy data to synchronize transfer
8000444c:	e0 6b 00 ff 	mov	r11,255
80004450:	fe 7c 24 00 	mov	r12,-56320
80004454:	f0 1f 00 50 	mcall	80004594 <main+0x4f4>
						pdca_enable_interrupt_transfer_complete(AVR32_PDCA_CHANNEL_SPI_RX);
80004458:	04 9c       	mov	r12,r2
8000445a:	f0 1f 00 50 	mcall	80004598 <main+0x4f8>
						pdca_enable(AVR32_PDCA_CHANNEL_SPI_RX);
8000445e:	04 9c       	mov	r12,r2
80004460:	f0 1f 00 4f 	mcall	8000459c <main+0x4fc>
						pdca_enable(AVR32_PDCA_CHANNEL_SPI_TX);
80004464:	00 9c       	mov	r12,r0
80004466:	f0 1f 00 4e 	mcall	8000459c <main+0x4fc>
						while(!end_of_transfer);
8000446a:	09 88       	ld.ub	r8,r4[0x0]
8000446c:	58 08       	cp.w	r8,0
8000446e:	cf e0       	breq	8000446a <main+0x3ca>
80004470:	04 97       	mov	r7,r2
80004472:	ee 06 00 08 	add	r8,r7,r6
						for( i = 0; i < 25; i++){ //First 50 chars
							print_dbg_char_hex( (U8)(*(ram_buffer + i)));
80004476:	11 8c       	ld.ub	r12,r8[0x0]
80004478:	f0 1f 00 4a 	mcall	800045a0 <main+0x500>
						spi_write(SD_MMC_SPI,0xFF); // Write a first dummy data to synchronize transfer
						pdca_enable_interrupt_transfer_complete(AVR32_PDCA_CHANNEL_SPI_RX);
						pdca_enable(AVR32_PDCA_CHANNEL_SPI_RX);
						pdca_enable(AVR32_PDCA_CHANNEL_SPI_TX);
						while(!end_of_transfer);
						for( i = 0; i < 25; i++){ //First 50 chars
8000447c:	2f f7       	sub	r7,-1
8000447e:	59 97       	cp.w	r7,25
80004480:	cf 91       	brne	80004472 <main+0x3d2>
80004482:	c0 e8       	rjmp	8000449e <main+0x3fe>
							print_dbg_char_hex( (U8)(*(ram_buffer + i)));
						}//For
					}else{
						CLR_disp();
80004484:	f0 1f 00 25 	mcall	80004518 <main+0x478>
						et024006_PrintString("No SD card present", (const unsigned char *)&FONT8x8, 30, 30, WHITE, -1);
80004488:	3f f8       	mov	r8,-1
8000448a:	1a d8       	st.w	--sp,r8
8000448c:	e0 68 ff ff 	mov	r8,65535
80004490:	31 e9       	mov	r9,30
80004492:	12 9a       	mov	r10,r9
80004494:	06 9b       	mov	r11,r3
80004496:	4b 5c       	lddpc	r12,80004568 <main+0x4c8>
80004498:	f0 1f 00 24 	mcall	80004528 <main+0x488>
8000449c:	2f fd       	sub	sp,-4
			  CLR_disp();
				et024006_PrintString("Last key pressed: CENTER", (const unsigned char *)&FONT8x8, 30, 200, WHITE, -1);
				et024006_PrintString("The SD card data is shown below:", (const unsigned char *)&FONT8x8, 30, 30, WHITE, -1);

				//Read SD
				for(j = 1; j <= 5; j++){ //5 Sectors
8000449e:	2f f5       	sub	r5,-1
800044a0:	58 65       	cp.w	r5,6
800044a2:	cb c1       	brne	8000441a <main+0x37a>
						CLR_disp();
						et024006_PrintString("No SD card present", (const unsigned char *)&FONT8x8, 30, 30, WHITE, -1);
					}//IF
				}//For

				state = 0;
800044a4:	30 09       	mov	r9,0
800044a6:	4a 58       	lddpc	r8,80004538 <main+0x498>
800044a8:	91 09       	st.w	r8[0x0],r9
800044aa:	fe 9f fe ca 	bral	8000423e <main+0x19e>
800044ae:	00 00       	add	r0,r0
800044b0:	80 00       	ld.sh	r0,r0[0x0]
800044b2:	38 c0       	mov	r0,-116
800044b4:	80 00       	ld.sh	r0,r0[0x0]
800044b6:	3e bc       	mov	r12,-21
800044b8:	80 00       	ld.sh	r0,r0[0x0]
800044ba:	3e 48       	mov	r8,-28
800044bc:	80 00       	ld.sh	r0,r0[0x0]
800044be:	54 9c       	stdsp	sp[0x124],r12
800044c0:	80 00       	ld.sh	r0,r0[0x0]
800044c2:	3d f4       	mov	r4,-33
800044c4:	80 00       	ld.sh	r0,r0[0x0]
800044c6:	54 b4       	stdsp	sp[0x12c],r4
800044c8:	80 00       	ld.sh	r0,r0[0x0]
800044ca:	56 34       	stdsp	sp[0x18c],r4
800044cc:	80 00       	ld.sh	r0,r0[0x0]
800044ce:	56 44       	stdsp	sp[0x190],r4
800044d0:	80 00       	ld.sh	r0,r0[0x0]
800044d2:	34 f0       	mov	r0,79
800044d4:	80 00       	ld.sh	r0,r0[0x0]
800044d6:	39 c2       	mov	r2,-100
800044d8:	80 00       	ld.sh	r0,r0[0x0]
800044da:	39 fa       	mov	r10,-97
800044dc:	80 00       	ld.sh	r0,r0[0x0]
800044de:	3b 50       	mov	r0,-75
800044e0:	80 00       	ld.sh	r0,r0[0x0]
800044e2:	33 4c       	mov	r12,52
800044e4:	80 00       	ld.sh	r0,r0[0x0]
800044e6:	33 24       	mov	r4,50
800044e8:	80 00       	ld.sh	r0,r0[0x0]
800044ea:	54 c8       	stdsp	sp[0x130],r8
800044ec:	80 00       	ld.sh	r0,r0[0x0]
800044ee:	28 78       	sub	r8,-121
800044f0:	80 00       	ld.sh	r0,r0[0x0]
800044f2:	54 dc       	stdsp	sp[0x134],r12
800044f4:	00 00       	add	r0,r0
800044f6:	03 88       	ld.ub	r8,r1[0x0]
800044f8:	80 00       	ld.sh	r0,r0[0x0]
800044fa:	3d e0       	mov	r0,-34
800044fc:	80 00       	ld.sh	r0,r0[0x0]
800044fe:	54 e8       	stdsp	sp[0x138],r8
80004500:	80 00       	ld.sh	r0,r0[0x0]
80004502:	3f 30       	mov	r0,-13
80004504:	80 00       	ld.sh	r0,r0[0x0]
80004506:	23 d4       	sub	r4,61
80004508:	80 00       	ld.sh	r0,r0[0x0]
8000450a:	39 5c       	mov	r12,-107
8000450c:	00 00       	add	r0,r0
8000450e:	00 08       	add	r8,r0
80004510:	80 00       	ld.sh	r0,r0[0x0]
80004512:	38 ec       	mov	r12,-114
80004514:	80 00       	ld.sh	r0,r0[0x0]
80004516:	39 22       	mov	r2,-110
80004518:	80 00       	ld.sh	r0,r0[0x0]
8000451a:	3f e4       	mov	r4,-2
8000451c:	80 00       	ld.sh	r0,r0[0x0]
8000451e:	39 34       	mov	r4,-109
80004520:	80 00       	ld.sh	r0,r0[0x0]
80004522:	4c 00       	lddpc	r0,80004620 <__avr32_udiv64+0x7c>
80004524:	80 00       	ld.sh	r0,r0[0x0]
80004526:	54 f0       	stdsp	sp[0x13c],r0
80004528:	80 00       	ld.sh	r0,r0[0x0]
8000452a:	20 a8       	sub	r8,10
8000452c:	80 00       	ld.sh	r0,r0[0x0]
8000452e:	54 f8       	stdsp	sp[0x13c],r8
80004530:	00 00       	add	r0,r0
80004532:	03 bc       	ld.ub	r12,r1[0x3]
80004534:	00 00       	add	r0,r0
80004536:	03 b0       	ld.ub	r0,r1[0x3]
80004538:	00 00       	add	r0,r0
8000453a:	01 80       	ld.ub	r0,r0[0x0]
8000453c:	80 00       	ld.sh	r0,r0[0x0]
8000453e:	55 00       	stdsp	sp[0x140],r0
80004540:	80 00       	ld.sh	r0,r0[0x0]
80004542:	55 18       	stdsp	sp[0x144],r8
80004544:	80 00       	ld.sh	r0,r0[0x0]
80004546:	55 30       	stdsp	sp[0x14c],r0
80004548:	00 00       	add	r0,r0
8000454a:	00 28       	rsub	r8,r0
8000454c:	80 00       	ld.sh	r0,r0[0x0]
8000454e:	55 44       	stdsp	sp[0x150],r4
80004550:	80 00       	ld.sh	r0,r0[0x0]
80004552:	55 5c       	stdsp	sp[0x154],r12
80004554:	00 00       	add	r0,r0
80004556:	00 5c       	eor	r12,r0
80004558:	80 00       	ld.sh	r0,r0[0x0]
8000455a:	2a 6c       	sub	r12,-90
8000455c:	80 00       	ld.sh	r0,r0[0x0]
8000455e:	2c 0c       	sub	r12,-64
80004560:	80 00       	ld.sh	r0,r0[0x0]
80004562:	29 94       	sub	r4,-103
80004564:	80 00       	ld.sh	r0,r0[0x0]
80004566:	55 74       	stdsp	sp[0x15c],r4
80004568:	80 00       	ld.sh	r0,r0[0x0]
8000456a:	55 90       	stdsp	sp[0x164],r0
8000456c:	80 00       	ld.sh	r0,r0[0x0]
8000456e:	55 a4       	stdsp	sp[0x168],r4
80004570:	80 00       	ld.sh	r0,r0[0x0]
80004572:	55 bc       	stdsp	sp[0x16c],r12
80004574:	80 00       	ld.sh	r0,r0[0x0]
80004576:	55 d4       	stdsp	sp[0x174],r4
80004578:	80 00       	ld.sh	r0,r0[0x0]
8000457a:	55 e0       	stdsp	sp[0x178],r0
8000457c:	80 00       	ld.sh	r0,r0[0x0]
8000457e:	55 fc       	stdsp	sp[0x17c],r12
80004580:	80 00       	ld.sh	r0,r0[0x0]
80004582:	37 9c       	mov	r12,121
80004584:	80 00       	ld.sh	r0,r0[0x0]
80004586:	50 68       	stdsp	sp[0x18],r8
80004588:	80 00       	ld.sh	r0,r0[0x0]
8000458a:	2d 6c       	sub	r12,-42
8000458c:	80 00       	ld.sh	r0,r0[0x0]
8000458e:	56 20       	stdsp	sp[0x188],r0
80004590:	80 00       	ld.sh	r0,r0[0x0]
80004592:	56 2c       	stdsp	sp[0x188],r12
80004594:	80 00       	ld.sh	r0,r0[0x0]
80004596:	3b 56       	mov	r6,-75
80004598:	80 00       	ld.sh	r0,r0[0x0]
8000459a:	37 3c       	mov	r12,115
8000459c:	80 00       	ld.sh	r0,r0[0x0]
8000459e:	37 2c       	mov	r12,114
800045a0:	80 00       	ld.sh	r0,r0[0x0]
800045a2:	3d 84       	mov	r4,-40

800045a4 <__avr32_udiv64>:
800045a4:	d4 31       	pushm	r0-r7,lr
800045a6:	1a 97       	mov	r7,sp
800045a8:	20 3d       	sub	sp,12
800045aa:	10 9c       	mov	r12,r8
800045ac:	12 9e       	mov	lr,r9
800045ae:	14 93       	mov	r3,r10
800045b0:	58 09       	cp.w	r9,0
800045b2:	e0 81 00 bd 	brne	8000472c <__avr32_udiv64+0x188>
800045b6:	16 38       	cp.w	r8,r11
800045b8:	e0 88 00 40 	brls	80004638 <__avr32_udiv64+0x94>
800045bc:	f0 08 12 00 	clz	r8,r8
800045c0:	c0 d0       	breq	800045da <__avr32_udiv64+0x36>
800045c2:	f6 08 09 4b 	lsl	r11,r11,r8
800045c6:	f0 09 11 20 	rsub	r9,r8,32
800045ca:	f8 08 09 4c 	lsl	r12,r12,r8
800045ce:	f4 09 0a 49 	lsr	r9,r10,r9
800045d2:	f4 08 09 43 	lsl	r3,r10,r8
800045d6:	f3 eb 10 0b 	or	r11,r9,r11
800045da:	f8 0e 16 10 	lsr	lr,r12,0x10
800045de:	f5 dc c0 10 	bfextu	r10,r12,0x0,0x10
800045e2:	f6 0e 0d 00 	divu	r0,r11,lr
800045e6:	e6 0b 16 10 	lsr	r11,r3,0x10
800045ea:	00 99       	mov	r9,r0
800045ec:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
800045f0:	e0 0a 02 48 	mul	r8,r0,r10
800045f4:	10 3b       	cp.w	r11,r8
800045f6:	c0 a2       	brcc	8000460a <__avr32_udiv64+0x66>
800045f8:	20 19       	sub	r9,1
800045fa:	18 0b       	add	r11,r12
800045fc:	18 3b       	cp.w	r11,r12
800045fe:	c0 63       	brcs	8000460a <__avr32_udiv64+0x66>
80004600:	10 3b       	cp.w	r11,r8
80004602:	f7 b9 03 01 	sublo	r9,1
80004606:	f7 dc e3 0b 	addcs	r11,r11,r12
8000460a:	f6 08 01 01 	sub	r1,r11,r8
8000460e:	e7 d3 c0 10 	bfextu	r3,r3,0x0,0x10
80004612:	e2 0e 0d 00 	divu	r0,r1,lr
80004616:	e7 e1 11 03 	or	r3,r3,r1<<0x10
8000461a:	00 98       	mov	r8,r0
8000461c:	e0 0a 02 4a 	mul	r10,r0,r10
80004620:	14 33       	cp.w	r3,r10
80004622:	c0 82       	brcc	80004632 <__avr32_udiv64+0x8e>
80004624:	20 18       	sub	r8,1
80004626:	18 03       	add	r3,r12
80004628:	18 33       	cp.w	r3,r12
8000462a:	c0 43       	brcs	80004632 <__avr32_udiv64+0x8e>
8000462c:	14 33       	cp.w	r3,r10
8000462e:	f7 b8 03 01 	sublo	r8,1
80004632:	f1 e9 11 08 	or	r8,r8,r9<<0x10
80004636:	cd f8       	rjmp	800047f4 <__avr32_udiv64+0x250>
80004638:	58 08       	cp.w	r8,0
8000463a:	c0 51       	brne	80004644 <__avr32_udiv64+0xa0>
8000463c:	30 19       	mov	r9,1
8000463e:	f2 08 0d 08 	divu	r8,r9,r8
80004642:	10 9c       	mov	r12,r8
80004644:	f8 06 12 00 	clz	r6,r12
80004648:	c0 41       	brne	80004650 <__avr32_udiv64+0xac>
8000464a:	18 1b       	sub	r11,r12
8000464c:	30 19       	mov	r9,1
8000464e:	c4 08       	rjmp	800046ce <__avr32_udiv64+0x12a>
80004650:	ec 01 11 20 	rsub	r1,r6,32
80004654:	f4 01 0a 49 	lsr	r9,r10,r1
80004658:	f8 06 09 4c 	lsl	r12,r12,r6
8000465c:	f6 06 09 48 	lsl	r8,r11,r6
80004660:	f6 01 0a 41 	lsr	r1,r11,r1
80004664:	f3 e8 10 08 	or	r8,r9,r8
80004668:	f8 03 16 10 	lsr	r3,r12,0x10
8000466c:	eb dc c0 10 	bfextu	r5,r12,0x0,0x10
80004670:	e2 03 0d 00 	divu	r0,r1,r3
80004674:	f0 0b 16 10 	lsr	r11,r8,0x10
80004678:	00 9e       	mov	lr,r0
8000467a:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
8000467e:	e0 05 02 49 	mul	r9,r0,r5
80004682:	12 3b       	cp.w	r11,r9
80004684:	c0 a2       	brcc	80004698 <__avr32_udiv64+0xf4>
80004686:	20 1e       	sub	lr,1
80004688:	18 0b       	add	r11,r12
8000468a:	18 3b       	cp.w	r11,r12
8000468c:	c0 63       	brcs	80004698 <__avr32_udiv64+0xf4>
8000468e:	12 3b       	cp.w	r11,r9
80004690:	f7 be 03 01 	sublo	lr,1
80004694:	f7 dc e3 0b 	addcs	r11,r11,r12
80004698:	12 1b       	sub	r11,r9
8000469a:	f1 d8 c0 10 	bfextu	r8,r8,0x0,0x10
8000469e:	f6 03 0d 02 	divu	r2,r11,r3
800046a2:	f1 e3 11 08 	or	r8,r8,r3<<0x10
800046a6:	04 99       	mov	r9,r2
800046a8:	e4 05 02 4b 	mul	r11,r2,r5
800046ac:	16 38       	cp.w	r8,r11
800046ae:	c0 a2       	brcc	800046c2 <__avr32_udiv64+0x11e>
800046b0:	20 19       	sub	r9,1
800046b2:	18 08       	add	r8,r12
800046b4:	18 38       	cp.w	r8,r12
800046b6:	c0 63       	brcs	800046c2 <__avr32_udiv64+0x11e>
800046b8:	16 38       	cp.w	r8,r11
800046ba:	f7 b9 03 01 	sublo	r9,1
800046be:	f1 dc e3 08 	addcs	r8,r8,r12
800046c2:	f4 06 09 43 	lsl	r3,r10,r6
800046c6:	f0 0b 01 0b 	sub	r11,r8,r11
800046ca:	f3 ee 11 09 	or	r9,r9,lr<<0x10
800046ce:	f8 06 16 10 	lsr	r6,r12,0x10
800046d2:	fd dc c0 10 	bfextu	lr,r12,0x0,0x10
800046d6:	f6 06 0d 00 	divu	r0,r11,r6
800046da:	e6 0b 16 10 	lsr	r11,r3,0x10
800046de:	00 9a       	mov	r10,r0
800046e0:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
800046e4:	e0 0e 02 48 	mul	r8,r0,lr
800046e8:	10 3b       	cp.w	r11,r8
800046ea:	c0 a2       	brcc	800046fe <__avr32_udiv64+0x15a>
800046ec:	20 1a       	sub	r10,1
800046ee:	18 0b       	add	r11,r12
800046f0:	18 3b       	cp.w	r11,r12
800046f2:	c0 63       	brcs	800046fe <__avr32_udiv64+0x15a>
800046f4:	10 3b       	cp.w	r11,r8
800046f6:	f7 ba 03 01 	sublo	r10,1
800046fa:	f7 dc e3 0b 	addcs	r11,r11,r12
800046fe:	f6 08 01 01 	sub	r1,r11,r8
80004702:	e7 d3 c0 10 	bfextu	r3,r3,0x0,0x10
80004706:	e2 06 0d 00 	divu	r0,r1,r6
8000470a:	e7 e1 11 03 	or	r3,r3,r1<<0x10
8000470e:	00 98       	mov	r8,r0
80004710:	e0 0e 02 4b 	mul	r11,r0,lr
80004714:	16 33       	cp.w	r3,r11
80004716:	c0 82       	brcc	80004726 <__avr32_udiv64+0x182>
80004718:	20 18       	sub	r8,1
8000471a:	18 03       	add	r3,r12
8000471c:	18 33       	cp.w	r3,r12
8000471e:	c0 43       	brcs	80004726 <__avr32_udiv64+0x182>
80004720:	16 33       	cp.w	r3,r11
80004722:	f7 b8 03 01 	sublo	r8,1
80004726:	f1 ea 11 08 	or	r8,r8,r10<<0x10
8000472a:	c6 98       	rjmp	800047fc <__avr32_udiv64+0x258>
8000472c:	16 39       	cp.w	r9,r11
8000472e:	e0 8b 00 65 	brhi	800047f8 <__avr32_udiv64+0x254>
80004732:	f2 09 12 00 	clz	r9,r9
80004736:	c0 b1       	brne	8000474c <__avr32_udiv64+0x1a8>
80004738:	10 3a       	cp.w	r10,r8
8000473a:	5f 2a       	srhs	r10
8000473c:	1c 3b       	cp.w	r11,lr
8000473e:	5f b8       	srhi	r8
80004740:	10 4a       	or	r10,r8
80004742:	f2 0a 18 00 	cp.b	r10,r9
80004746:	c5 90       	breq	800047f8 <__avr32_udiv64+0x254>
80004748:	30 18       	mov	r8,1
8000474a:	c5 98       	rjmp	800047fc <__avr32_udiv64+0x258>
8000474c:	f0 09 09 46 	lsl	r6,r8,r9
80004750:	f2 03 11 20 	rsub	r3,r9,32
80004754:	fc 09 09 4e 	lsl	lr,lr,r9
80004758:	f0 03 0a 48 	lsr	r8,r8,r3
8000475c:	f6 09 09 4c 	lsl	r12,r11,r9
80004760:	f4 03 0a 42 	lsr	r2,r10,r3
80004764:	ef 46 ff f4 	st.w	r7[-12],r6
80004768:	f6 03 0a 43 	lsr	r3,r11,r3
8000476c:	18 42       	or	r2,r12
8000476e:	f1 ee 10 0c 	or	r12,r8,lr
80004772:	f8 01 16 10 	lsr	r1,r12,0x10
80004776:	ed dc c0 10 	bfextu	r6,r12,0x0,0x10
8000477a:	e6 01 0d 04 	divu	r4,r3,r1
8000477e:	e4 03 16 10 	lsr	r3,r2,0x10
80004782:	08 9e       	mov	lr,r4
80004784:	e7 e5 11 03 	or	r3,r3,r5<<0x10
80004788:	e8 06 02 48 	mul	r8,r4,r6
8000478c:	10 33       	cp.w	r3,r8
8000478e:	c0 a2       	brcc	800047a2 <__avr32_udiv64+0x1fe>
80004790:	20 1e       	sub	lr,1
80004792:	18 03       	add	r3,r12
80004794:	18 33       	cp.w	r3,r12
80004796:	c0 63       	brcs	800047a2 <__avr32_udiv64+0x1fe>
80004798:	10 33       	cp.w	r3,r8
8000479a:	f7 be 03 01 	sublo	lr,1
8000479e:	e7 dc e3 03 	addcs	r3,r3,r12
800047a2:	10 13       	sub	r3,r8
800047a4:	f7 d2 c0 10 	bfextu	r11,r2,0x0,0x10
800047a8:	e6 01 0d 00 	divu	r0,r3,r1
800047ac:	f7 e1 11 0b 	or	r11,r11,r1<<0x10
800047b0:	00 98       	mov	r8,r0
800047b2:	e0 06 02 46 	mul	r6,r0,r6
800047b6:	0c 3b       	cp.w	r11,r6
800047b8:	c0 a2       	brcc	800047cc <__avr32_udiv64+0x228>
800047ba:	20 18       	sub	r8,1
800047bc:	18 0b       	add	r11,r12
800047be:	18 3b       	cp.w	r11,r12
800047c0:	c0 63       	brcs	800047cc <__avr32_udiv64+0x228>
800047c2:	0c 3b       	cp.w	r11,r6
800047c4:	f7 dc e3 0b 	addcs	r11,r11,r12
800047c8:	f7 b8 03 01 	sublo	r8,1
800047cc:	f1 ee 11 08 	or	r8,r8,lr<<0x10
800047d0:	ee f4 ff f4 	ld.w	r4,r7[-12]
800047d4:	0c 1b       	sub	r11,r6
800047d6:	f0 04 06 42 	mulu.d	r2,r8,r4
800047da:	06 95       	mov	r5,r3
800047dc:	16 35       	cp.w	r5,r11
800047de:	e0 8b 00 0a 	brhi	800047f2 <__avr32_udiv64+0x24e>
800047e2:	5f 0b       	sreq	r11
800047e4:	f4 09 09 49 	lsl	r9,r10,r9
800047e8:	12 32       	cp.w	r2,r9
800047ea:	5f b9       	srhi	r9
800047ec:	f7 e9 00 09 	and	r9,r11,r9
800047f0:	c0 60       	breq	800047fc <__avr32_udiv64+0x258>
800047f2:	20 18       	sub	r8,1
800047f4:	30 09       	mov	r9,0
800047f6:	c0 38       	rjmp	800047fc <__avr32_udiv64+0x258>
800047f8:	30 09       	mov	r9,0
800047fa:	12 98       	mov	r8,r9
800047fc:	10 9a       	mov	r10,r8
800047fe:	12 93       	mov	r3,r9
80004800:	10 92       	mov	r2,r8
80004802:	12 9b       	mov	r11,r9
80004804:	2f dd       	sub	sp,-12
80004806:	d8 32       	popm	r0-r7,pc

80004808 <memcpy>:
80004808:	58 8a       	cp.w	r10,8
8000480a:	c2 f5       	brlt	80004868 <memcpy+0x60>
8000480c:	f9 eb 10 09 	or	r9,r12,r11
80004810:	e2 19 00 03 	andl	r9,0x3,COH
80004814:	e0 81 00 97 	brne	80004942 <memcpy+0x13a>
80004818:	e0 4a 00 20 	cp.w	r10,32
8000481c:	c3 b4       	brge	80004892 <memcpy+0x8a>
8000481e:	f4 08 14 02 	asr	r8,r10,0x2
80004822:	f0 09 11 08 	rsub	r9,r8,8
80004826:	fe 09 00 2f 	add	pc,pc,r9<<0x2
8000482a:	76 69       	ld.w	r9,r11[0x18]
8000482c:	99 69       	st.w	r12[0x18],r9
8000482e:	76 59       	ld.w	r9,r11[0x14]
80004830:	99 59       	st.w	r12[0x14],r9
80004832:	76 49       	ld.w	r9,r11[0x10]
80004834:	99 49       	st.w	r12[0x10],r9
80004836:	76 39       	ld.w	r9,r11[0xc]
80004838:	99 39       	st.w	r12[0xc],r9
8000483a:	76 29       	ld.w	r9,r11[0x8]
8000483c:	99 29       	st.w	r12[0x8],r9
8000483e:	76 19       	ld.w	r9,r11[0x4]
80004840:	99 19       	st.w	r12[0x4],r9
80004842:	76 09       	ld.w	r9,r11[0x0]
80004844:	99 09       	st.w	r12[0x0],r9
80004846:	f6 08 00 2b 	add	r11,r11,r8<<0x2
8000484a:	f8 08 00 28 	add	r8,r12,r8<<0x2
8000484e:	e0 1a 00 03 	andl	r10,0x3
80004852:	f4 0a 11 04 	rsub	r10,r10,4
80004856:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
8000485a:	17 a9       	ld.ub	r9,r11[0x2]
8000485c:	b0 a9       	st.b	r8[0x2],r9
8000485e:	17 99       	ld.ub	r9,r11[0x1]
80004860:	b0 99       	st.b	r8[0x1],r9
80004862:	17 89       	ld.ub	r9,r11[0x0]
80004864:	b0 89       	st.b	r8[0x0],r9
80004866:	5e fc       	retal	r12
80004868:	f4 0a 11 09 	rsub	r10,r10,9
8000486c:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
80004870:	17 f9       	ld.ub	r9,r11[0x7]
80004872:	b8 f9       	st.b	r12[0x7],r9
80004874:	17 e9       	ld.ub	r9,r11[0x6]
80004876:	b8 e9       	st.b	r12[0x6],r9
80004878:	17 d9       	ld.ub	r9,r11[0x5]
8000487a:	b8 d9       	st.b	r12[0x5],r9
8000487c:	17 c9       	ld.ub	r9,r11[0x4]
8000487e:	b8 c9       	st.b	r12[0x4],r9
80004880:	17 b9       	ld.ub	r9,r11[0x3]
80004882:	b8 b9       	st.b	r12[0x3],r9
80004884:	17 a9       	ld.ub	r9,r11[0x2]
80004886:	b8 a9       	st.b	r12[0x2],r9
80004888:	17 99       	ld.ub	r9,r11[0x1]
8000488a:	b8 99       	st.b	r12[0x1],r9
8000488c:	17 89       	ld.ub	r9,r11[0x0]
8000488e:	b8 89       	st.b	r12[0x0],r9
80004890:	5e fc       	retal	r12
80004892:	eb cd 40 c0 	pushm	r6-r7,lr
80004896:	18 99       	mov	r9,r12
80004898:	22 0a       	sub	r10,32
8000489a:	b7 07       	ld.d	r6,r11++
8000489c:	b3 26       	st.d	r9++,r6
8000489e:	b7 07       	ld.d	r6,r11++
800048a0:	b3 26       	st.d	r9++,r6
800048a2:	b7 07       	ld.d	r6,r11++
800048a4:	b3 26       	st.d	r9++,r6
800048a6:	b7 07       	ld.d	r6,r11++
800048a8:	b3 26       	st.d	r9++,r6
800048aa:	22 0a       	sub	r10,32
800048ac:	cf 74       	brge	8000489a <memcpy+0x92>
800048ae:	2f 0a       	sub	r10,-16
800048b0:	c0 65       	brlt	800048bc <memcpy+0xb4>
800048b2:	b7 07       	ld.d	r6,r11++
800048b4:	b3 26       	st.d	r9++,r6
800048b6:	b7 07       	ld.d	r6,r11++
800048b8:	b3 26       	st.d	r9++,r6
800048ba:	21 0a       	sub	r10,16
800048bc:	5c 3a       	neg	r10
800048be:	fe 0a 00 3f 	add	pc,pc,r10<<0x3
800048c2:	d7 03       	nop
800048c4:	d7 03       	nop
800048c6:	f7 36 00 0e 	ld.ub	r6,r11[14]
800048ca:	f3 66 00 0e 	st.b	r9[14],r6
800048ce:	f7 36 00 0d 	ld.ub	r6,r11[13]
800048d2:	f3 66 00 0d 	st.b	r9[13],r6
800048d6:	f7 36 00 0c 	ld.ub	r6,r11[12]
800048da:	f3 66 00 0c 	st.b	r9[12],r6
800048de:	f7 36 00 0b 	ld.ub	r6,r11[11]
800048e2:	f3 66 00 0b 	st.b	r9[11],r6
800048e6:	f7 36 00 0a 	ld.ub	r6,r11[10]
800048ea:	f3 66 00 0a 	st.b	r9[10],r6
800048ee:	f7 36 00 09 	ld.ub	r6,r11[9]
800048f2:	f3 66 00 09 	st.b	r9[9],r6
800048f6:	f7 36 00 08 	ld.ub	r6,r11[8]
800048fa:	f3 66 00 08 	st.b	r9[8],r6
800048fe:	f7 36 00 07 	ld.ub	r6,r11[7]
80004902:	f3 66 00 07 	st.b	r9[7],r6
80004906:	f7 36 00 06 	ld.ub	r6,r11[6]
8000490a:	f3 66 00 06 	st.b	r9[6],r6
8000490e:	f7 36 00 05 	ld.ub	r6,r11[5]
80004912:	f3 66 00 05 	st.b	r9[5],r6
80004916:	f7 36 00 04 	ld.ub	r6,r11[4]
8000491a:	f3 66 00 04 	st.b	r9[4],r6
8000491e:	f7 36 00 03 	ld.ub	r6,r11[3]
80004922:	f3 66 00 03 	st.b	r9[3],r6
80004926:	f7 36 00 02 	ld.ub	r6,r11[2]
8000492a:	f3 66 00 02 	st.b	r9[2],r6
8000492e:	f7 36 00 01 	ld.ub	r6,r11[1]
80004932:	f3 66 00 01 	st.b	r9[1],r6
80004936:	f7 36 00 00 	ld.ub	r6,r11[0]
8000493a:	f3 66 00 00 	st.b	r9[0],r6
8000493e:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80004942:	20 1a       	sub	r10,1
80004944:	f6 0a 07 09 	ld.ub	r9,r11[r10]
80004948:	f8 0a 0b 09 	st.b	r12[r10],r9
8000494c:	cf b1       	brne	80004942 <memcpy+0x13a>
8000494e:	5e fc       	retal	r12

Disassembly of section .exception:

80004a00 <_evba>:
80004a00:	c0 08       	rjmp	80004a00 <_evba>
	...

80004a04 <_handle_TLB_Multiple_Hit>:
80004a04:	c0 08       	rjmp	80004a04 <_handle_TLB_Multiple_Hit>
	...

80004a08 <_handle_Bus_Error_Data_Fetch>:
80004a08:	c0 08       	rjmp	80004a08 <_handle_Bus_Error_Data_Fetch>
	...

80004a0c <_handle_Bus_Error_Instruction_Fetch>:
80004a0c:	c0 08       	rjmp	80004a0c <_handle_Bus_Error_Instruction_Fetch>
	...

80004a10 <_handle_NMI>:
80004a10:	c0 08       	rjmp	80004a10 <_handle_NMI>
	...

80004a14 <_handle_Instruction_Address>:
80004a14:	c0 08       	rjmp	80004a14 <_handle_Instruction_Address>
	...

80004a18 <_handle_ITLB_Protection>:
80004a18:	c0 08       	rjmp	80004a18 <_handle_ITLB_Protection>
	...

80004a1c <_handle_Breakpoint>:
80004a1c:	c0 08       	rjmp	80004a1c <_handle_Breakpoint>
	...

80004a20 <_handle_Illegal_Opcode>:
80004a20:	c0 08       	rjmp	80004a20 <_handle_Illegal_Opcode>
	...

80004a24 <_handle_Unimplemented_Instruction>:
80004a24:	c0 08       	rjmp	80004a24 <_handle_Unimplemented_Instruction>
	...

80004a28 <_handle_Privilege_Violation>:
80004a28:	c0 08       	rjmp	80004a28 <_handle_Privilege_Violation>
	...

80004a2c <_handle_Floating_Point>:
80004a2c:	c0 08       	rjmp	80004a2c <_handle_Floating_Point>
	...

80004a30 <_handle_Coprocessor_Absent>:
80004a30:	c0 08       	rjmp	80004a30 <_handle_Coprocessor_Absent>
	...

80004a34 <_handle_Data_Address_Read>:
80004a34:	c0 08       	rjmp	80004a34 <_handle_Data_Address_Read>
	...

80004a38 <_handle_Data_Address_Write>:
80004a38:	c0 08       	rjmp	80004a38 <_handle_Data_Address_Write>
	...

80004a3c <_handle_DTLB_Protection_Read>:
80004a3c:	c0 08       	rjmp	80004a3c <_handle_DTLB_Protection_Read>
	...

80004a40 <_handle_DTLB_Protection_Write>:
80004a40:	c0 08       	rjmp	80004a40 <_handle_DTLB_Protection_Write>
	...

80004a44 <_handle_DTLB_Modified>:
80004a44:	c0 08       	rjmp	80004a44 <_handle_DTLB_Modified>
	...

80004a50 <_handle_ITLB_Miss>:
80004a50:	c0 08       	rjmp	80004a50 <_handle_ITLB_Miss>
	...

80004a60 <_handle_DTLB_Miss_Read>:
80004a60:	c0 08       	rjmp	80004a60 <_handle_DTLB_Miss_Read>
	...

80004a70 <_handle_DTLB_Miss_Write>:
80004a70:	c0 08       	rjmp	80004a70 <_handle_DTLB_Miss_Write>
	...

80004b00 <_handle_Supervisor_Call>:
80004b00:	c0 08       	rjmp	80004b00 <_handle_Supervisor_Call>
80004b02:	d7 03       	nop

80004b04 <_int0>:
80004b04:	30 0c       	mov	r12,0
80004b06:	fe b0 f5 e5 	rcall	800036d0 <_get_interrupt_handler>
80004b0a:	58 0c       	cp.w	r12,0
80004b0c:	f8 0f 17 10 	movne	pc,r12
80004b10:	d6 03       	rete

80004b12 <_int1>:
80004b12:	30 1c       	mov	r12,1
80004b14:	fe b0 f5 de 	rcall	800036d0 <_get_interrupt_handler>
80004b18:	58 0c       	cp.w	r12,0
80004b1a:	f8 0f 17 10 	movne	pc,r12
80004b1e:	d6 03       	rete

80004b20 <_int2>:
80004b20:	30 2c       	mov	r12,2
80004b22:	fe b0 f5 d7 	rcall	800036d0 <_get_interrupt_handler>
80004b26:	58 0c       	cp.w	r12,0
80004b28:	f8 0f 17 10 	movne	pc,r12
80004b2c:	d6 03       	rete

80004b2e <_int3>:
80004b2e:	30 3c       	mov	r12,3
80004b30:	fe b0 f5 d0 	rcall	800036d0 <_get_interrupt_handler>
80004b34:	58 0c       	cp.w	r12,0
80004b36:	f8 0f 17 10 	movne	pc,r12
80004b3a:	d6 03       	rete
80004b3c:	d7 03       	nop
80004b3e:	d7 03       	nop
80004b40:	d7 03       	nop
80004b42:	d7 03       	nop
80004b44:	d7 03       	nop
80004b46:	d7 03       	nop
80004b48:	d7 03       	nop
80004b4a:	d7 03       	nop
80004b4c:	d7 03       	nop
80004b4e:	d7 03       	nop
80004b50:	d7 03       	nop
80004b52:	d7 03       	nop
80004b54:	d7 03       	nop
80004b56:	d7 03       	nop
80004b58:	d7 03       	nop
80004b5a:	d7 03       	nop
80004b5c:	d7 03       	nop
80004b5e:	d7 03       	nop
80004b60:	d7 03       	nop
80004b62:	d7 03       	nop
80004b64:	d7 03       	nop
80004b66:	d7 03       	nop
80004b68:	d7 03       	nop
80004b6a:	d7 03       	nop
80004b6c:	d7 03       	nop
80004b6e:	d7 03       	nop
80004b70:	d7 03       	nop
80004b72:	d7 03       	nop
80004b74:	d7 03       	nop
80004b76:	d7 03       	nop
80004b78:	d7 03       	nop
80004b7a:	d7 03       	nop
80004b7c:	d7 03       	nop
80004b7e:	d7 03       	nop
80004b80:	d7 03       	nop
80004b82:	d7 03       	nop
80004b84:	d7 03       	nop
80004b86:	d7 03       	nop
80004b88:	d7 03       	nop
80004b8a:	d7 03       	nop
80004b8c:	d7 03       	nop
80004b8e:	d7 03       	nop
80004b90:	d7 03       	nop
80004b92:	d7 03       	nop
80004b94:	d7 03       	nop
80004b96:	d7 03       	nop
80004b98:	d7 03       	nop
80004b9a:	d7 03       	nop
80004b9c:	d7 03       	nop
80004b9e:	d7 03       	nop
80004ba0:	d7 03       	nop
80004ba2:	d7 03       	nop
80004ba4:	d7 03       	nop
80004ba6:	d7 03       	nop
80004ba8:	d7 03       	nop
80004baa:	d7 03       	nop
80004bac:	d7 03       	nop
80004bae:	d7 03       	nop
80004bb0:	d7 03       	nop
80004bb2:	d7 03       	nop
80004bb4:	d7 03       	nop
80004bb6:	d7 03       	nop
80004bb8:	d7 03       	nop
80004bba:	d7 03       	nop
80004bbc:	d7 03       	nop
80004bbe:	d7 03       	nop
80004bc0:	d7 03       	nop
80004bc2:	d7 03       	nop
80004bc4:	d7 03       	nop
80004bc6:	d7 03       	nop
80004bc8:	d7 03       	nop
80004bca:	d7 03       	nop
80004bcc:	d7 03       	nop
80004bce:	d7 03       	nop
80004bd0:	d7 03       	nop
80004bd2:	d7 03       	nop
80004bd4:	d7 03       	nop
80004bd6:	d7 03       	nop
80004bd8:	d7 03       	nop
80004bda:	d7 03       	nop
80004bdc:	d7 03       	nop
80004bde:	d7 03       	nop
80004be0:	d7 03       	nop
80004be2:	d7 03       	nop
80004be4:	d7 03       	nop
80004be6:	d7 03       	nop
80004be8:	d7 03       	nop
80004bea:	d7 03       	nop
80004bec:	d7 03       	nop
80004bee:	d7 03       	nop
80004bf0:	d7 03       	nop
80004bf2:	d7 03       	nop
80004bf4:	d7 03       	nop
80004bf6:	d7 03       	nop
80004bf8:	d7 03       	nop
80004bfa:	d7 03       	nop
80004bfc:	d7 03       	nop
80004bfe:	d7 03       	nop
